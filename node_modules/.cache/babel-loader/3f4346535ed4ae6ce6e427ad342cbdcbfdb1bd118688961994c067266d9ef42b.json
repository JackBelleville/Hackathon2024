{"ast":null,"code":"var createModule = (_document$currentScri => {\n  var _scriptName = typeof document != 'undefined' ? (_document$currentScri = document.currentScript) === null || _document$currentScri === void 0 ? void 0 : _document$currentScri.src : undefined;\n  if (typeof __filename != 'undefined') _scriptName = _scriptName || __filename;\n  return function (moduleArg = {}) {\n    var moduleRtn;\n\n    // include: shell.js\n    // The Module object: Our interface to the outside world. We import\n    // and export values on it. There are various ways Module can be used:\n    // 1. Not defined. We create it here\n    // 2. A function parameter, function(moduleArg) => Promise<Module>\n    // 3. pre-run appended it, var Module = {}; ..generated code..\n    // 4. External script tag defines var Module.\n    // We need to check if Module already exists (e.g. case 3 above).\n    // Substitution will be replaced with actual code on later stage of the build,\n    // this way Closure Compiler will not mangle it (e.g. case 4. above).\n    // Note that if you want to run closure, and also to use Module\n    // after the generated code, you will need to define   var Module = {};\n    // before the code. Then that object will be used in the code, and you\n    // can continue to use Module afterwards as well.\n    var Module = moduleArg;\n\n    // Set up the promise that indicates the Module is initialized\n    var readyPromiseResolve, readyPromiseReject;\n    var readyPromise = new Promise((resolve, reject) => {\n      readyPromiseResolve = resolve;\n      readyPromiseReject = reject;\n    });\n    [\"_memory\", \"___indirect_function_table\", \"_main\", \"onRuntimeInitialized\"].forEach(prop => {\n      if (!Object.getOwnPropertyDescriptor(readyPromise, prop)) {\n        Object.defineProperty(readyPromise, prop, {\n          get: () => abort('You are getting ' + prop + ' on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js'),\n          set: () => abort('You are setting ' + prop + ' on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js')\n        });\n      }\n    });\n\n    // Determine the runtime environment we are in. You can customize this by\n    // setting the ENVIRONMENT setting at compile time (see settings.js).\n\n    // Attempt to auto-detect the environment\n    var ENVIRONMENT_IS_WEB = typeof window == 'object';\n    var ENVIRONMENT_IS_WORKER = typeof importScripts == 'function';\n    // N.b. Electron.js environment is simultaneously a NODE-environment, but\n    // also a web environment.\n    var ENVIRONMENT_IS_NODE = typeof process == 'object' && typeof process.versions == 'object' && typeof process.versions.node == 'string' && process.type != 'renderer';\n    var ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;\n    if (ENVIRONMENT_IS_NODE) {\n      // `require()` is no-op in an ESM module, use `createRequire()` to construct\n      // the require()` function.  This is only necessary for multi-environment\n      // builds, `-sENVIRONMENT=node` emits a static import declaration instead.\n      // TODO: Swap all `require()`'s with `import()`'s?\n    }\n\n    // --pre-jses are emitted after the Module integration code, so that they can\n    // refer to Module (if they choose; they can also define Module)\n\n    // Sometimes an existing Module object exists with properties\n    // meant to overwrite the default module functionality. Here\n    // we collect those properties and reapply _after_ we configure\n    // the current environment's defaults to avoid having to be so\n    // defensive during initialization.\n    var moduleOverrides = Object.assign({}, Module);\n    var arguments_ = [];\n    var thisProgram = './this.program';\n    var quit_ = (status, toThrow) => {\n      throw toThrow;\n    };\n\n    // `/` should be present at the end if `scriptDirectory` is not empty\n    var scriptDirectory = '';\n    function locateFile(path) {\n      if (Module['locateFile']) {\n        return Module['locateFile'](path, scriptDirectory);\n      }\n      return scriptDirectory + path;\n    }\n\n    // Hooks that are implemented differently in different runtime environments.\n    var readAsync, readBinary;\n    if (ENVIRONMENT_IS_NODE) {\n      if (typeof process == 'undefined' || !process.release || process.release.name !== 'node') throw new Error('not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)');\n      var nodeVersion = process.versions.node;\n      var numericVersion = nodeVersion.split('.').slice(0, 3);\n      numericVersion = numericVersion[0] * 10000 + numericVersion[1] * 100 + numericVersion[2].split('-')[0] * 1;\n      var minVersion = 160000;\n      if (numericVersion < 160000) {\n        throw new Error('This emscripten-generated code requires node v16.0.0 (detected v' + nodeVersion + ')');\n      }\n\n      // These modules will usually be used on Node.js. Load them eagerly to avoid\n      // the complexity of lazy-loading.\n      var fs = require('fs');\n      var nodePath = require('path');\n      scriptDirectory = __dirname + '/';\n\n      // include: node_shell_read.js\n      readBinary = filename => {\n        // We need to re-wrap `file://` strings to URLs. Normalizing isn't\n        // necessary in that case, the path should already be absolute.\n        filename = isFileURI(filename) ? new URL(filename) : nodePath.normalize(filename);\n        var ret = fs.readFileSync(filename);\n        assert(ret.buffer);\n        return ret;\n      };\n      readAsync = (filename, binary = true) => {\n        // See the comment in the `readBinary` function.\n        filename = isFileURI(filename) ? new URL(filename) : nodePath.normalize(filename);\n        return new Promise((resolve, reject) => {\n          fs.readFile(filename, binary ? undefined : 'utf8', (err, data) => {\n            if (err) reject(err);else resolve(binary ? data.buffer : data);\n          });\n        });\n      };\n      // end include: node_shell_read.js\n      if (!Module['thisProgram'] && process.argv.length > 1) {\n        thisProgram = process.argv[1].replace(/\\\\/g, '/');\n      }\n      arguments_ = process.argv.slice(2);\n\n      // MODULARIZE will export the module in the proper place outside, we don't need to export here\n\n      quit_ = (status, toThrow) => {\n        process.exitCode = status;\n        throw toThrow;\n      };\n    } else if (ENVIRONMENT_IS_SHELL) {\n      if (typeof process == 'object' && typeof require === 'function' || typeof window == 'object' || typeof importScripts == 'function') throw new Error('not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)');\n    } else\n      // Note that this includes Node.js workers when relevant (pthreads is enabled).\n      // Node.js workers are detected as a combination of ENVIRONMENT_IS_WORKER and\n      // ENVIRONMENT_IS_NODE.\n      if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n        if (ENVIRONMENT_IS_WORKER) {\n          // Check worker, not web, since window could be polyfilled\n          scriptDirectory = self.location.href;\n        } else if (typeof document != 'undefined' && document.currentScript) {\n          // web\n          scriptDirectory = document.currentScript.src;\n        }\n        // When MODULARIZE, this JS may be executed later, after document.currentScript\n        // is gone, so we saved it, and we use it here instead of any other info.\n        if (_scriptName) {\n          scriptDirectory = _scriptName;\n        }\n        // blob urls look like blob:http://site.com/etc/etc and we cannot infer anything from them.\n        // otherwise, slice off the final part of the url to find the script directory.\n        // if scriptDirectory does not contain a slash, lastIndexOf will return -1,\n        // and scriptDirectory will correctly be replaced with an empty string.\n        // If scriptDirectory contains a query (starting with ?) or a fragment (starting with #),\n        // they are removed because they could contain a slash.\n        if (scriptDirectory.startsWith('blob:')) {\n          scriptDirectory = '';\n        } else {\n          scriptDirectory = scriptDirectory.substr(0, scriptDirectory.replace(/[?#].*/, '').lastIndexOf('/') + 1);\n        }\n        if (!(typeof window == 'object' || typeof importScripts == 'function')) throw new Error('not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)');\n        {\n          // include: web_or_worker_shell_read.js\n          if (ENVIRONMENT_IS_WORKER) {\n            readBinary = url => {\n              var xhr = new XMLHttpRequest();\n              xhr.open('GET', url, false);\n              xhr.responseType = 'arraybuffer';\n              xhr.send(null);\n              return new Uint8Array(/** @type{!ArrayBuffer} */xhr.response);\n            };\n          }\n          readAsync = url => {\n            // Fetch has some additional restrictions over XHR, like it can't be used on a file:// url.\n            // See https://github.com/github/fetch/pull/92#issuecomment-140665932\n            // Cordova or Electron apps are typically loaded from a file:// url.\n            // So use XHR on webview if URL is a file URL.\n            if (isFileURI(url)) {\n              return new Promise((resolve, reject) => {\n                var xhr = new XMLHttpRequest();\n                xhr.open('GET', url, true);\n                xhr.responseType = 'arraybuffer';\n                xhr.onload = () => {\n                  if (xhr.status == 200 || xhr.status == 0 && xhr.response) {\n                    // file URLs can return 0\n                    resolve(xhr.response);\n                    return;\n                  }\n                  reject(xhr.status);\n                };\n                xhr.onerror = reject;\n                xhr.send(null);\n              });\n            }\n            return fetch(url, {\n              credentials: 'same-origin'\n            }).then(response => {\n              if (response.ok) {\n                return response.arrayBuffer();\n              }\n              return Promise.reject(new Error(response.status + ' : ' + response.url));\n            });\n          };\n          // end include: web_or_worker_shell_read.js\n        }\n      } else {\n        throw new Error('environment detection error');\n      }\n    var out = Module['print'] || console.log.bind(console);\n    var err = Module['printErr'] || console.error.bind(console);\n\n    // Merge back in the overrides\n    Object.assign(Module, moduleOverrides);\n    // Free the object hierarchy contained in the overrides, this lets the GC\n    // reclaim data used.\n    moduleOverrides = null;\n    checkIncomingModuleAPI();\n\n    // Emit code to handle expected values on the Module object. This applies Module.x\n    // to the proper local x. This has two benefits: first, we only emit it if it is\n    // expected to arrive, and second, by using a local everywhere else that can be\n    // minified.\n\n    if (Module['arguments']) arguments_ = Module['arguments'];\n    legacyModuleProp('arguments', 'arguments_');\n    if (Module['thisProgram']) thisProgram = Module['thisProgram'];\n    legacyModuleProp('thisProgram', 'thisProgram');\n\n    // perform assertions in shell.js after we set up out() and err(), as otherwise if an assertion fails it cannot print the message\n    // Assertions on removed incoming Module JS APIs.\n    assert(typeof Module['memoryInitializerPrefixURL'] == 'undefined', 'Module.memoryInitializerPrefixURL option was removed, use Module.locateFile instead');\n    assert(typeof Module['pthreadMainPrefixURL'] == 'undefined', 'Module.pthreadMainPrefixURL option was removed, use Module.locateFile instead');\n    assert(typeof Module['cdInitializerPrefixURL'] == 'undefined', 'Module.cdInitializerPrefixURL option was removed, use Module.locateFile instead');\n    assert(typeof Module['filePackagePrefixURL'] == 'undefined', 'Module.filePackagePrefixURL option was removed, use Module.locateFile instead');\n    assert(typeof Module['read'] == 'undefined', 'Module.read option was removed');\n    assert(typeof Module['readAsync'] == 'undefined', 'Module.readAsync option was removed (modify readAsync in JS)');\n    assert(typeof Module['readBinary'] == 'undefined', 'Module.readBinary option was removed (modify readBinary in JS)');\n    assert(typeof Module['setWindowTitle'] == 'undefined', 'Module.setWindowTitle option was removed (modify emscripten_set_window_title in JS)');\n    assert(typeof Module['TOTAL_MEMORY'] == 'undefined', 'Module.TOTAL_MEMORY has been renamed Module.INITIAL_MEMORY');\n    legacyModuleProp('asm', 'wasmExports');\n    legacyModuleProp('readAsync', 'readAsync');\n    legacyModuleProp('readBinary', 'readBinary');\n    legacyModuleProp('setWindowTitle', 'setWindowTitle');\n    var IDBFS = 'IDBFS is no longer included by default; build with -lidbfs.js';\n    var PROXYFS = 'PROXYFS is no longer included by default; build with -lproxyfs.js';\n    var WORKERFS = 'WORKERFS is no longer included by default; build with -lworkerfs.js';\n    var FETCHFS = 'FETCHFS is no longer included by default; build with -lfetchfs.js';\n    var ICASEFS = 'ICASEFS is no longer included by default; build with -licasefs.js';\n    var JSFILEFS = 'JSFILEFS is no longer included by default; build with -ljsfilefs.js';\n    var OPFS = 'OPFS is no longer included by default; build with -lopfs.js';\n    var NODEFS = 'NODEFS is no longer included by default; build with -lnodefs.js';\n    assert(!ENVIRONMENT_IS_SHELL, 'shell environment detected but not enabled at build time.  Add `shell` to `-sENVIRONMENT` to enable.');\n\n    // end include: shell.js\n\n    // include: preamble.js\n    // === Preamble library stuff ===\n\n    // Documentation for the public APIs defined in this file must be updated in:\n    //    site/source/docs/api_reference/preamble.js.rst\n    // A prebuilt local version of the documentation is available at:\n    //    site/build/text/docs/api_reference/preamble.js.txt\n    // You can also build docs locally as HTML or other formats in site/\n    // An online HTML version (which may be of a different version of Emscripten)\n    //    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html\n\n    var wasmBinary = Module['wasmBinary'];\n    legacyModuleProp('wasmBinary', 'wasmBinary');\n    if (typeof WebAssembly != 'object') {\n      err('no native wasm support detected');\n    }\n\n    // Wasm globals\n\n    var wasmMemory;\n\n    //========================================\n    // Runtime essentials\n    //========================================\n\n    // whether we are quitting the application. no code should run after this.\n    // set in exit() and abort()\n    var ABORT = false;\n\n    // set by exit() and abort().  Passed to 'onExit' handler.\n    // NOTE: This is also used as the process return code code in shell environments\n    // but only when noExitRuntime is false.\n    var EXITSTATUS;\n\n    // In STRICT mode, we only define assert() when ASSERTIONS is set.  i.e. we\n    // don't define it at all in release modes.  This matches the behaviour of\n    // MINIMAL_RUNTIME.\n    // TODO(sbc): Make this the default even without STRICT enabled.\n    /** @type {function(*, string=)} */\n    function assert(condition, text) {\n      if (!condition) {\n        abort('Assertion failed' + (text ? ': ' + text : ''));\n      }\n    }\n\n    // We used to include malloc/free by default in the past. Show a helpful error in\n    // builds with assertions.\n    function _malloc() {\n      abort('malloc() called but not included in the build - add `_malloc` to EXPORTED_FUNCTIONS');\n    }\n    function _free() {\n      // Show a helpful error since we used to include free by default in the past.\n      abort('free() called but not included in the build - add `_free` to EXPORTED_FUNCTIONS');\n    }\n\n    // Memory management\n\n    var HEAP, /** @type {!Int8Array} */\n      HEAP8, /** @type {!Uint8Array} */\n      HEAPU8, /** @type {!Int16Array} */\n      HEAP16, /** @type {!Uint16Array} */\n      HEAPU16, /** @type {!Int32Array} */\n      HEAP32, /** @type {!Uint32Array} */\n      HEAPU32, /** @type {!Float32Array} */\n      HEAPF32, /** @type {!Float64Array} */\n      HEAPF64;\n\n    // include: runtime_shared.js\n    function updateMemoryViews() {\n      var b = wasmMemory.buffer;\n      Module['HEAP8'] = HEAP8 = new Int8Array(b);\n      Module['HEAP16'] = HEAP16 = new Int16Array(b);\n      Module['HEAPU8'] = HEAPU8 = new Uint8Array(b);\n      Module['HEAPU16'] = HEAPU16 = new Uint16Array(b);\n      Module['HEAP32'] = HEAP32 = new Int32Array(b);\n      Module['HEAPU32'] = HEAPU32 = new Uint32Array(b);\n      Module['HEAPF32'] = HEAPF32 = new Float32Array(b);\n      Module['HEAPF64'] = HEAPF64 = new Float64Array(b);\n    }\n\n    // end include: runtime_shared.js\n    assert(!Module['STACK_SIZE'], 'STACK_SIZE can no longer be set at runtime.  Use -sSTACK_SIZE at link time');\n    assert(typeof Int32Array != 'undefined' && typeof Float64Array !== 'undefined' && Int32Array.prototype.subarray != undefined && Int32Array.prototype.set != undefined, 'JS engine does not provide full typed array support');\n\n    // If memory is defined in wasm, the user can't provide it, or set INITIAL_MEMORY\n    assert(!Module['wasmMemory'], 'Use of `wasmMemory` detected.  Use -sIMPORTED_MEMORY to define wasmMemory externally');\n    assert(!Module['INITIAL_MEMORY'], 'Detected runtime INITIAL_MEMORY setting.  Use -sIMPORTED_MEMORY to define wasmMemory dynamically');\n\n    // include: runtime_stack_check.js\n    // Initializes the stack cookie. Called at the startup of main and at the startup of each thread in pthreads mode.\n    function writeStackCookie() {\n      var max = _emscripten_stack_get_end();\n      assert((max & 3) == 0);\n      // If the stack ends at address zero we write our cookies 4 bytes into the\n      // stack.  This prevents interference with SAFE_HEAP and ASAN which also\n      // monitor writes to address zero.\n      if (max == 0) {\n        max += 4;\n      }\n      // The stack grow downwards towards _emscripten_stack_get_end.\n      // We write cookies to the final two words in the stack and detect if they are\n      // ever overwritten.\n      HEAPU32[max >> 2] = 0x02135467;\n      HEAPU32[max + 4 >> 2] = 0x89BACDFE;\n      // Also test the global address 0 for integrity.\n      HEAPU32[0 >> 2] = 1668509029;\n    }\n    function checkStackCookie() {\n      if (ABORT) return;\n      var max = _emscripten_stack_get_end();\n      // See writeStackCookie().\n      if (max == 0) {\n        max += 4;\n      }\n      var cookie1 = HEAPU32[max >> 2];\n      var cookie2 = HEAPU32[max + 4 >> 2];\n      if (cookie1 != 0x02135467 || cookie2 != 0x89BACDFE) {\n        abort(`Stack overflow! Stack cookie has been overwritten at ${ptrToString(max)}, expected hex dwords 0x89BACDFE and 0x2135467, but received ${ptrToString(cookie2)} ${ptrToString(cookie1)}`);\n      }\n      // Also test the global address 0 for integrity.\n      if (HEAPU32[0 >> 2] != 0x63736d65 /* 'emsc' */) {\n        abort('Runtime error: The application has corrupted its heap memory area (address zero)!');\n      }\n    }\n    // end include: runtime_stack_check.js\n    var __ATPRERUN__ = []; // functions called before the runtime is initialized\n    var __ATINIT__ = []; // functions called during startup\n    var __ATMAIN__ = []; // functions called when main() is to be run\n    var __ATEXIT__ = []; // functions called during shutdown\n    var __ATPOSTRUN__ = []; // functions called after the main() is called\n\n    var runtimeInitialized = false;\n    function preRun() {\n      var preRuns = Module['preRun'];\n      if (preRuns) {\n        if (typeof preRuns == 'function') preRuns = [preRuns];\n        preRuns.forEach(addOnPreRun);\n      }\n      callRuntimeCallbacks(__ATPRERUN__);\n    }\n    function initRuntime() {\n      assert(!runtimeInitialized);\n      runtimeInitialized = true;\n      checkStackCookie();\n      if (!Module['noFSInit'] && !FS.initialized) FS.init();\n      FS.ignorePermissions = false;\n      TTY.init();\n      callRuntimeCallbacks(__ATINIT__);\n    }\n    function preMain() {\n      checkStackCookie();\n      callRuntimeCallbacks(__ATMAIN__);\n    }\n    function postRun() {\n      checkStackCookie();\n      var postRuns = Module['postRun'];\n      if (postRuns) {\n        if (typeof postRuns == 'function') postRuns = [postRuns];\n        postRuns.forEach(addOnPostRun);\n      }\n      callRuntimeCallbacks(__ATPOSTRUN__);\n    }\n    function addOnPreRun(cb) {\n      __ATPRERUN__.unshift(cb);\n    }\n    function addOnInit(cb) {\n      __ATINIT__.unshift(cb);\n    }\n    function addOnPreMain(cb) {\n      __ATMAIN__.unshift(cb);\n    }\n    function addOnExit(cb) {}\n    function addOnPostRun(cb) {\n      __ATPOSTRUN__.unshift(cb);\n    }\n\n    // include: runtime_math.js\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/imul\n\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/fround\n\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/clz32\n\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/trunc\n\n    assert(Math.imul, 'This browser does not support Math.imul(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');\n    assert(Math.fround, 'This browser does not support Math.fround(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');\n    assert(Math.clz32, 'This browser does not support Math.clz32(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');\n    assert(Math.trunc, 'This browser does not support Math.trunc(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');\n    // end include: runtime_math.js\n    // A counter of dependencies for calling run(). If we need to\n    // do asynchronous work before running, increment this and\n    // decrement it. Incrementing must happen in a place like\n    // Module.preRun (used by emcc to add file preloading).\n    // Note that you can add dependencies in preRun, even though\n    // it happens right before run - run will be postponed until\n    // the dependencies are met.\n    var runDependencies = 0;\n    var runDependencyWatcher = null;\n    var dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled\n    var runDependencyTracking = {};\n    function getUniqueRunDependency(id) {\n      var orig = id;\n      while (1) {\n        if (!runDependencyTracking[id]) return id;\n        id = orig + Math.random();\n      }\n    }\n    function addRunDependency(id) {\n      var _Module$monitorRunDep;\n      runDependencies++;\n      (_Module$monitorRunDep = Module['monitorRunDependencies']) === null || _Module$monitorRunDep === void 0 ? void 0 : _Module$monitorRunDep.call(Module, runDependencies);\n      if (id) {\n        assert(!runDependencyTracking[id]);\n        runDependencyTracking[id] = 1;\n        if (runDependencyWatcher === null && typeof setInterval != 'undefined') {\n          // Check for missing dependencies every few seconds\n          runDependencyWatcher = setInterval(() => {\n            if (ABORT) {\n              clearInterval(runDependencyWatcher);\n              runDependencyWatcher = null;\n              return;\n            }\n            var shown = false;\n            for (var dep in runDependencyTracking) {\n              if (!shown) {\n                shown = true;\n                err('still waiting on run dependencies:');\n              }\n              err(`dependency: ${dep}`);\n            }\n            if (shown) {\n              err('(end of list)');\n            }\n          }, 10000);\n        }\n      } else {\n        err('warning: run dependency added without ID');\n      }\n    }\n    function removeRunDependency(id) {\n      var _Module$monitorRunDep2;\n      runDependencies--;\n      (_Module$monitorRunDep2 = Module['monitorRunDependencies']) === null || _Module$monitorRunDep2 === void 0 ? void 0 : _Module$monitorRunDep2.call(Module, runDependencies);\n      if (id) {\n        assert(runDependencyTracking[id]);\n        delete runDependencyTracking[id];\n      } else {\n        err('warning: run dependency removed without ID');\n      }\n      if (runDependencies == 0) {\n        if (runDependencyWatcher !== null) {\n          clearInterval(runDependencyWatcher);\n          runDependencyWatcher = null;\n        }\n        if (dependenciesFulfilled) {\n          var callback = dependenciesFulfilled;\n          dependenciesFulfilled = null;\n          callback(); // can add another dependenciesFulfilled\n        }\n      }\n    }\n\n    /** @param {string|number=} what */\n    function abort(what) {\n      var _Module$onAbort;\n      (_Module$onAbort = Module['onAbort']) === null || _Module$onAbort === void 0 ? void 0 : _Module$onAbort.call(Module, what);\n      what = 'Aborted(' + what + ')';\n      // TODO(sbc): Should we remove printing and leave it up to whoever\n      // catches the exception?\n      err(what);\n      ABORT = true;\n\n      // Use a wasm runtime error, because a JS error might be seen as a foreign\n      // exception, which means we'd run destructors on it. We need the error to\n      // simply make the program stop.\n      // FIXME This approach does not work in Wasm EH because it currently does not assume\n      // all RuntimeErrors are from traps; it decides whether a RuntimeError is from\n      // a trap or not based on a hidden field within the object. So at the moment\n      // we don't have a way of throwing a wasm trap from JS. TODO Make a JS API that\n      // allows this in the wasm spec.\n\n      // Suppress closure compiler warning here. Closure compiler's builtin extern\n      // definition for WebAssembly.RuntimeError claims it takes no arguments even\n      // though it can.\n      // TODO(https://github.com/google/closure-compiler/pull/3913): Remove if/when upstream closure gets fixed.\n      /** @suppress {checkTypes} */\n      var e = new WebAssembly.RuntimeError(what);\n      readyPromiseReject(e);\n      // Throw the error whether or not MODULARIZE is set because abort is used\n      // in code paths apart from instantiation where an exception is expected\n      // to be thrown when abort is called.\n      throw e;\n    }\n\n    // include: memoryprofiler.js\n    // end include: memoryprofiler.js\n    // include: URIUtils.js\n    // Prefix of data URIs emitted by SINGLE_FILE and related options.\n    var dataURIPrefix = 'data:application/octet-stream;base64,';\n\n    /**\r\n     * Indicates whether filename is a base64 data URI.\r\n     * @noinline\r\n     */\n    var isDataURI = filename => filename.startsWith(dataURIPrefix);\n\n    /**\r\n     * Indicates whether filename is delivered via file protocol (as opposed to http/https)\r\n     * @noinline\r\n     */\n    var isFileURI = filename => filename.startsWith('file://');\n    // end include: URIUtils.js\n    function createExportWrapper(name, nargs) {\n      return (...args) => {\n        assert(runtimeInitialized, `native function \\`${name}\\` called before runtime initialization`);\n        var f = wasmExports[name];\n        assert(f, `exported native function \\`${name}\\` not found`);\n        // Only assert for too many arguments. Too few can be valid since the missing arguments will be zero filled.\n        assert(args.length <= nargs, `native function \\`${name}\\` called with ${args.length} args but expects ${nargs}`);\n        return f(...args);\n      };\n    }\n\n    // include: runtime_exceptions.js\n    // end include: runtime_exceptions.js\n    function findWasmBinary() {\n      var f = 'yield.wasm';\n      if (!isDataURI(f)) {\n        return locateFile(f);\n      }\n      return f;\n    }\n    var wasmBinaryFile;\n    function getBinarySync(file) {\n      if (file == wasmBinaryFile && wasmBinary) {\n        return new Uint8Array(wasmBinary);\n      }\n      if (readBinary) {\n        return readBinary(file);\n      }\n      throw 'both async and sync fetching of the wasm failed';\n    }\n    function getBinaryPromise(binaryFile) {\n      // If we don't have the binary yet, load it asynchronously using readAsync.\n      if (!wasmBinary) {\n        // Fetch the binary using readAsync\n        return readAsync(binaryFile).then(response => new Uint8Array(/** @type{!ArrayBuffer} */response),\n        // Fall back to getBinarySync if readAsync fails\n        () => getBinarySync(binaryFile));\n      }\n\n      // Otherwise, getBinarySync should be able to get it synchronously\n      return Promise.resolve().then(() => getBinarySync(binaryFile));\n    }\n    function instantiateArrayBuffer(binaryFile, imports, receiver) {\n      return getBinaryPromise(binaryFile).then(binary => {\n        return WebAssembly.instantiate(binary, imports);\n      }).then(receiver, reason => {\n        err(`failed to asynchronously prepare wasm: ${reason}`);\n\n        // Warn on some common problems.\n        if (isFileURI(wasmBinaryFile)) {\n          err(`warning: Loading from a file URI (${wasmBinaryFile}) is not supported in most browsers. See https://emscripten.org/docs/getting_started/FAQ.html#how-do-i-run-a-local-webserver-for-testing-why-does-my-program-stall-in-downloading-or-preparing`);\n        }\n        abort(reason);\n      });\n    }\n    function instantiateAsync(binary, binaryFile, imports, callback) {\n      if (!binary && typeof WebAssembly.instantiateStreaming == 'function' && !isDataURI(binaryFile) &&\n      // Don't use streaming for file:// delivered objects in a webview, fetch them synchronously.\n      !isFileURI(binaryFile) &&\n      // Avoid instantiateStreaming() on Node.js environment for now, as while\n      // Node.js v18.1.0 implements it, it does not have a full fetch()\n      // implementation yet.\n      //\n      // Reference:\n      //   https://github.com/emscripten-core/emscripten/pull/16917\n      !ENVIRONMENT_IS_NODE && typeof fetch == 'function') {\n        return fetch(binaryFile, {\n          credentials: 'same-origin'\n        }).then(response => {\n          // Suppress closure warning here since the upstream definition for\n          // instantiateStreaming only allows Promise<Repsponse> rather than\n          // an actual Response.\n          // TODO(https://github.com/google/closure-compiler/pull/3913): Remove if/when upstream closure is fixed.\n          /** @suppress {checkTypes} */\n          var result = WebAssembly.instantiateStreaming(response, imports);\n          return result.then(callback, function (reason) {\n            // We expect the most common failure cause to be a bad MIME type for the binary,\n            // in which case falling back to ArrayBuffer instantiation should work.\n            err(`wasm streaming compile failed: ${reason}`);\n            err('falling back to ArrayBuffer instantiation');\n            return instantiateArrayBuffer(binaryFile, imports, callback);\n          });\n        });\n      }\n      return instantiateArrayBuffer(binaryFile, imports, callback);\n    }\n    function getWasmImports() {\n      // prepare imports\n      return {\n        'env': wasmImports,\n        'wasi_snapshot_preview1': wasmImports\n      };\n    }\n\n    // Create the wasm instance.\n    // Receives the wasm imports, returns the exports.\n    function createWasm() {\n      var info = getWasmImports();\n      // Load the wasm module and create an instance of using native support in the JS engine.\n      // handle a generated wasm instance, receiving its exports and\n      // performing other necessary setup\n      /** @param {WebAssembly.Module=} module*/\n      function receiveInstance(instance, module) {\n        wasmExports = instance.exports;\n        wasmMemory = wasmExports['memory'];\n        assert(wasmMemory, 'memory not found in wasm exports');\n        updateMemoryViews();\n        addOnInit(wasmExports['__wasm_call_ctors']);\n        removeRunDependency('wasm-instantiate');\n        return wasmExports;\n      }\n      // wait for the pthread pool (if any)\n      addRunDependency('wasm-instantiate');\n\n      // Prefer streaming instantiation if available.\n      // Async compilation can be confusing when an error on the page overwrites Module\n      // (for example, if the order of elements is wrong, and the one defining Module is\n      // later), so we save Module and check it later.\n      var trueModule = Module;\n      function receiveInstantiationResult(result) {\n        // 'result' is a ResultObject object which has both the module and instance.\n        // receiveInstance() will swap in the exports (to Module.asm) so they can be called\n        assert(Module === trueModule, 'the Module object should not be replaced during async compilation - perhaps the order of HTML elements is wrong?');\n        trueModule = null;\n        // TODO: Due to Closure regression https://github.com/google/closure-compiler/issues/3193, the above line no longer optimizes out down to the following line.\n        // When the regression is fixed, can restore the above PTHREADS-enabled path.\n        receiveInstance(result['instance']);\n      }\n\n      // User shell pages can write their own Module.instantiateWasm = function(imports, successCallback) callback\n      // to manually instantiate the Wasm module themselves. This allows pages to\n      // run the instantiation parallel to any other async startup actions they are\n      // performing.\n      // Also pthreads and wasm workers initialize the wasm instance through this\n      // path.\n      if (Module['instantiateWasm']) {\n        try {\n          return Module['instantiateWasm'](info, receiveInstance);\n        } catch (e) {\n          err(`Module.instantiateWasm callback failed with error: ${e}`);\n          // If instantiation fails, reject the module ready promise.\n          readyPromiseReject(e);\n        }\n      }\n      wasmBinaryFile ??= findWasmBinary();\n\n      // If instantiation fails, reject the module ready promise.\n      instantiateAsync(wasmBinary, wasmBinaryFile, info, receiveInstantiationResult).catch(readyPromiseReject);\n      return {}; // no exports yet; we'll fill them in later\n    }\n\n    // Globals used by JS i64 conversions (see makeSetValue)\n    var tempDouble;\n    var tempI64;\n\n    // include: runtime_debug.js\n    // Endianness check\n    (() => {\n      var h16 = new Int16Array(1);\n      var h8 = new Int8Array(h16.buffer);\n      h16[0] = 0x6373;\n      if (h8[0] !== 0x73 || h8[1] !== 0x63) throw 'Runtime error: expected the system to be little-endian! (Run with -sSUPPORT_BIG_ENDIAN to bypass)';\n    })();\n    if (Module['ENVIRONMENT']) {\n      throw new Error('Module.ENVIRONMENT has been deprecated. To force the environment, use the ENVIRONMENT compile-time option (for example, -sENVIRONMENT=web or -sENVIRONMENT=node)');\n    }\n    function legacyModuleProp(prop, newName, incoming = true) {\n      if (!Object.getOwnPropertyDescriptor(Module, prop)) {\n        Object.defineProperty(Module, prop, {\n          configurable: true,\n          get() {\n            let extra = incoming ? ' (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)' : '';\n            abort(`\\`Module.${prop}\\` has been replaced by \\`${newName}\\`` + extra);\n          }\n        });\n      }\n    }\n    function ignoredModuleProp(prop) {\n      if (Object.getOwnPropertyDescriptor(Module, prop)) {\n        abort(`\\`Module.${prop}\\` was supplied but \\`${prop}\\` not included in INCOMING_MODULE_JS_API`);\n      }\n    }\n\n    // forcing the filesystem exports a few things by default\n    function isExportedByForceFilesystem(name) {\n      return name === 'FS_createPath' || name === 'FS_createDataFile' || name === 'FS_createPreloadedFile' || name === 'FS_unlink' || name === 'addRunDependency' ||\n      // The old FS has some functionality that WasmFS lacks.\n      name === 'FS_createLazyFile' || name === 'FS_createDevice' || name === 'removeRunDependency';\n    }\n\n    /**\r\n     * Intercept access to a global symbol.  This enables us to give informative\r\n     * warnings/errors when folks attempt to use symbols they did not include in\r\n     * their build, or no symbols that no longer exist.\r\n     */\n    function hookGlobalSymbolAccess(sym, func) {\n      // In MODULARIZE mode the generated code runs inside a function scope and not\n      // the global scope, and JavaScript does not provide access to function scopes\n      // so we cannot dynamically modify the scrope using `defineProperty` in this\n      // case.\n      //\n      // In this mode we simply ignore requests for `hookGlobalSymbolAccess`. Since\n      // this is a debug-only feature, skipping it is not major issue.\n    }\n    function missingGlobal(sym, msg) {\n      hookGlobalSymbolAccess(sym, () => {\n        warnOnce(`\\`${sym}\\` is not longer defined by emscripten. ${msg}`);\n      });\n    }\n    missingGlobal('buffer', 'Please use HEAP8.buffer or wasmMemory.buffer');\n    missingGlobal('asm', 'Please use wasmExports instead');\n    function missingLibrarySymbol(sym) {\n      hookGlobalSymbolAccess(sym, () => {\n        // Can't `abort()` here because it would break code that does runtime\n        // checks.  e.g. `if (typeof SDL === 'undefined')`.\n        var msg = `\\`${sym}\\` is a library symbol and not included by default; add it to your library.js __deps or to DEFAULT_LIBRARY_FUNCS_TO_INCLUDE on the command line`;\n        // DEFAULT_LIBRARY_FUNCS_TO_INCLUDE requires the name as it appears in\n        // library.js, which means $name for a JS name with no prefix, or name\n        // for a JS name like _name.\n        var librarySymbol = sym;\n        if (!librarySymbol.startsWith('_')) {\n          librarySymbol = '$' + sym;\n        }\n        msg += ` (e.g. -sDEFAULT_LIBRARY_FUNCS_TO_INCLUDE='${librarySymbol}')`;\n        if (isExportedByForceFilesystem(sym)) {\n          msg += '. Alternatively, forcing filesystem support (-sFORCE_FILESYSTEM) can export this for you';\n        }\n        warnOnce(msg);\n      });\n\n      // Any symbol that is not included from the JS library is also (by definition)\n      // not exported on the Module object.\n      unexportedRuntimeSymbol(sym);\n    }\n    function unexportedRuntimeSymbol(sym) {\n      if (!Object.getOwnPropertyDescriptor(Module, sym)) {\n        Object.defineProperty(Module, sym, {\n          configurable: true,\n          get() {\n            var msg = `'${sym}' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the Emscripten FAQ)`;\n            if (isExportedByForceFilesystem(sym)) {\n              msg += '. Alternatively, forcing filesystem support (-sFORCE_FILESYSTEM) can export this for you';\n            }\n            abort(msg);\n          }\n        });\n      }\n    }\n\n    // Used by XXXXX_DEBUG settings to output debug messages.\n    function dbg(...args) {\n      // TODO(sbc): Make this configurable somehow.  Its not always convenient for\n      // logging to show up as warnings.\n      console.warn(...args);\n    }\n    // end include: runtime_debug.js\n    // === Body ===\n    // end include: preamble.js\n\n    /** @constructor */\n    function ExitStatus(status) {\n      this.name = 'ExitStatus';\n      this.message = `Program terminated with exit(${status})`;\n      this.status = status;\n    }\n    var callRuntimeCallbacks = callbacks => {\n      // Pass the module as the first argument.\n      callbacks.forEach(f => f(Module));\n    };\n\n    /**\r\n     * @param {number} ptr\r\n     * @param {string} type\r\n     */\n    function getValue(ptr, type = 'i8') {\n      if (type.endsWith('*')) type = '*';\n      switch (type) {\n        case 'i1':\n          return HEAP8[ptr];\n        case 'i8':\n          return HEAP8[ptr];\n        case 'i16':\n          return HEAP16[ptr >> 1];\n        case 'i32':\n          return HEAP32[ptr >> 2];\n        case 'i64':\n          abort('to do getValue(i64) use WASM_BIGINT');\n        case 'float':\n          return HEAPF32[ptr >> 2];\n        case 'double':\n          return HEAPF64[ptr >> 3];\n        case '*':\n          return HEAPU32[ptr >> 2];\n        default:\n          abort(`invalid type for getValue: ${type}`);\n      }\n    }\n    var noExitRuntime = Module['noExitRuntime'] || true;\n    var ptrToString = ptr => {\n      assert(typeof ptr === 'number');\n      // With CAN_ADDRESS_2GB or MEMORY64, pointers are already unsigned.\n      ptr >>>= 0;\n      return '0x' + ptr.toString(16).padStart(8, '0');\n    };\n\n    /**\r\n     * @param {number} ptr\r\n     * @param {number} value\r\n     * @param {string} type\r\n     */\n    function setValue(ptr, value, type = 'i8') {\n      if (type.endsWith('*')) type = '*';\n      switch (type) {\n        case 'i1':\n          HEAP8[ptr] = value;\n          break;\n        case 'i8':\n          HEAP8[ptr] = value;\n          break;\n        case 'i16':\n          HEAP16[ptr >> 1] = value;\n          break;\n        case 'i32':\n          HEAP32[ptr >> 2] = value;\n          break;\n        case 'i64':\n          abort('to do setValue(i64) use WASM_BIGINT');\n        case 'float':\n          HEAPF32[ptr >> 2] = value;\n          break;\n        case 'double':\n          HEAPF64[ptr >> 3] = value;\n          break;\n        case '*':\n          HEAPU32[ptr >> 2] = value;\n          break;\n        default:\n          abort(`invalid type for setValue: ${type}`);\n      }\n    }\n    var stackRestore = val => __emscripten_stack_restore(val);\n    var stackSave = () => _emscripten_stack_get_current();\n    var warnOnce = text => {\n      warnOnce.shown ||= {};\n      if (!warnOnce.shown[text]) {\n        warnOnce.shown[text] = 1;\n        if (ENVIRONMENT_IS_NODE) text = 'warning: ' + text;\n        err(text);\n      }\n    };\n    var __emscripten_memcpy_js = (dest, src, num) => HEAPU8.copyWithin(dest, src, src + num);\n    var getHeapMax = () => HEAPU8.length;\n    var alignMemory = (size, alignment) => {\n      assert(alignment, \"alignment argument is required\");\n      return Math.ceil(size / alignment) * alignment;\n    };\n    var abortOnCannotGrowMemory = requestedSize => {\n      abort(`Cannot enlarge memory arrays to size ${requestedSize} bytes (OOM). Either (1) compile with -sINITIAL_MEMORY=X with X higher than the current value ${HEAP8.length}, (2) compile with -sALLOW_MEMORY_GROWTH which allows increasing the size at runtime, or (3) if you want malloc to return NULL (0) instead of this abort, compile with -sABORTING_MALLOC=0`);\n    };\n    var _emscripten_resize_heap = requestedSize => {\n      var oldSize = HEAPU8.length;\n      // With CAN_ADDRESS_2GB or MEMORY64, pointers are already unsigned.\n      requestedSize >>>= 0;\n      abortOnCannotGrowMemory(requestedSize);\n    };\n    var PATH = {\n      isAbs: path => path.charAt(0) === '/',\n      splitPath: filename => {\n        var splitPathRe = /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\n        return splitPathRe.exec(filename).slice(1);\n      },\n      normalizeArray: (parts, allowAboveRoot) => {\n        // if the path tries to go above the root, `up` ends up > 0\n        var up = 0;\n        for (var i = parts.length - 1; i >= 0; i--) {\n          var last = parts[i];\n          if (last === '.') {\n            parts.splice(i, 1);\n          } else if (last === '..') {\n            parts.splice(i, 1);\n            up++;\n          } else if (up) {\n            parts.splice(i, 1);\n            up--;\n          }\n        }\n        // if the path is allowed to go above the root, restore leading ..s\n        if (allowAboveRoot) {\n          for (; up; up--) {\n            parts.unshift('..');\n          }\n        }\n        return parts;\n      },\n      normalize: path => {\n        var isAbsolute = PATH.isAbs(path),\n          trailingSlash = path.substr(-1) === '/';\n        // Normalize the path\n        path = PATH.normalizeArray(path.split('/').filter(p => !!p), !isAbsolute).join('/');\n        if (!path && !isAbsolute) {\n          path = '.';\n        }\n        if (path && trailingSlash) {\n          path += '/';\n        }\n        return (isAbsolute ? '/' : '') + path;\n      },\n      dirname: path => {\n        var result = PATH.splitPath(path),\n          root = result[0],\n          dir = result[1];\n        if (!root && !dir) {\n          // No dirname whatsoever\n          return '.';\n        }\n        if (dir) {\n          // It has a dirname, strip trailing slash\n          dir = dir.substr(0, dir.length - 1);\n        }\n        return root + dir;\n      },\n      basename: path => {\n        // EMSCRIPTEN return '/'' for '/', not an empty string\n        if (path === '/') return '/';\n        path = PATH.normalize(path);\n        path = path.replace(/\\/$/, \"\");\n        var lastSlash = path.lastIndexOf('/');\n        if (lastSlash === -1) return path;\n        return path.substr(lastSlash + 1);\n      },\n      join: (...paths) => PATH.normalize(paths.join('/')),\n      join2: (l, r) => PATH.normalize(l + '/' + r)\n    };\n    var initRandomFill = () => {\n      if (typeof crypto == 'object' && typeof crypto['getRandomValues'] == 'function') {\n        // for modern web browsers\n        return view => crypto.getRandomValues(view);\n      } else if (ENVIRONMENT_IS_NODE) {\n        // for nodejs with or without crypto support included\n        try {\n          var crypto_module = require('crypto');\n          var randomFillSync = crypto_module['randomFillSync'];\n          if (randomFillSync) {\n            // nodejs with LTS crypto support\n            return view => crypto_module['randomFillSync'](view);\n          }\n          // very old nodejs with the original crypto API\n          var randomBytes = crypto_module['randomBytes'];\n          return view => (view.set(randomBytes(view.byteLength)),\n          // Return the original view to match modern native implementations.\n          view);\n        } catch (e) {\n          // nodejs doesn't have crypto support\n        }\n      }\n      // we couldn't find a proper implementation, as Math.random() is not suitable for /dev/random, see emscripten-core/emscripten/pull/7096\n      abort('no cryptographic support found for randomDevice. consider polyfilling it if you want to use something insecure like Math.random(), e.g. put this in a --pre-js: var crypto = { getRandomValues: (array) => { for (var i = 0; i < array.length; i++) array[i] = (Math.random()*256)|0 } };');\n    };\n    var randomFill = view => {\n      // Lazily init on the first invocation.\n      return (randomFill = initRandomFill())(view);\n    };\n    var PATH_FS = {\n      resolve: (...args) => {\n        var resolvedPath = '',\n          resolvedAbsolute = false;\n        for (var i = args.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n          var path = i >= 0 ? args[i] : FS.cwd();\n          // Skip empty and invalid entries\n          if (typeof path != 'string') {\n            throw new TypeError('Arguments to path.resolve must be strings');\n          } else if (!path) {\n            return ''; // an invalid portion invalidates the whole thing\n          }\n          resolvedPath = path + '/' + resolvedPath;\n          resolvedAbsolute = PATH.isAbs(path);\n        }\n        // At this point the path should be resolved to a full absolute path, but\n        // handle relative paths to be safe (might happen when process.cwd() fails)\n        resolvedPath = PATH.normalizeArray(resolvedPath.split('/').filter(p => !!p), !resolvedAbsolute).join('/');\n        return (resolvedAbsolute ? '/' : '') + resolvedPath || '.';\n      },\n      relative: (from, to) => {\n        from = PATH_FS.resolve(from).substr(1);\n        to = PATH_FS.resolve(to).substr(1);\n        function trim(arr) {\n          var start = 0;\n          for (; start < arr.length; start++) {\n            if (arr[start] !== '') break;\n          }\n          var end = arr.length - 1;\n          for (; end >= 0; end--) {\n            if (arr[end] !== '') break;\n          }\n          if (start > end) return [];\n          return arr.slice(start, end - start + 1);\n        }\n        var fromParts = trim(from.split('/'));\n        var toParts = trim(to.split('/'));\n        var length = Math.min(fromParts.length, toParts.length);\n        var samePartsLength = length;\n        for (var i = 0; i < length; i++) {\n          if (fromParts[i] !== toParts[i]) {\n            samePartsLength = i;\n            break;\n          }\n        }\n        var outputParts = [];\n        for (var i = samePartsLength; i < fromParts.length; i++) {\n          outputParts.push('..');\n        }\n        outputParts = outputParts.concat(toParts.slice(samePartsLength));\n        return outputParts.join('/');\n      }\n    };\n    var UTF8Decoder = typeof TextDecoder != 'undefined' ? new TextDecoder() : undefined;\n\n    /**\r\n     * Given a pointer 'idx' to a null-terminated UTF8-encoded string in the given\r\n     * array that contains uint8 values, returns a copy of that string as a\r\n     * Javascript String object.\r\n     * heapOrArray is either a regular array, or a JavaScript typed array view.\r\n     * @param {number=} idx\r\n     * @param {number=} maxBytesToRead\r\n     * @return {string}\r\n     */\n    var UTF8ArrayToString = (heapOrArray, idx = 0, maxBytesToRead = NaN) => {\n      var endIdx = idx + maxBytesToRead;\n      var endPtr = idx;\n      // TextDecoder needs to know the byte length in advance, it doesn't stop on\n      // null terminator by itself.  Also, use the length info to avoid running tiny\n      // strings through TextDecoder, since .subarray() allocates garbage.\n      // (As a tiny code save trick, compare endPtr against endIdx using a negation,\n      // so that undefined/NaN means Infinity)\n      while (heapOrArray[endPtr] && !(endPtr >= endIdx)) ++endPtr;\n      if (endPtr - idx > 16 && heapOrArray.buffer && UTF8Decoder) {\n        return UTF8Decoder.decode(heapOrArray.subarray(idx, endPtr));\n      }\n      var str = '';\n      // If building with TextDecoder, we have already computed the string length\n      // above, so test loop end condition against that\n      while (idx < endPtr) {\n        // For UTF8 byte structure, see:\n        // http://en.wikipedia.org/wiki/UTF-8#Description\n        // https://www.ietf.org/rfc/rfc2279.txt\n        // https://tools.ietf.org/html/rfc3629\n        var u0 = heapOrArray[idx++];\n        if (!(u0 & 0x80)) {\n          str += String.fromCharCode(u0);\n          continue;\n        }\n        var u1 = heapOrArray[idx++] & 63;\n        if ((u0 & 0xE0) == 0xC0) {\n          str += String.fromCharCode((u0 & 31) << 6 | u1);\n          continue;\n        }\n        var u2 = heapOrArray[idx++] & 63;\n        if ((u0 & 0xF0) == 0xE0) {\n          u0 = (u0 & 15) << 12 | u1 << 6 | u2;\n        } else {\n          if ((u0 & 0xF8) != 0xF0) warnOnce('Invalid UTF-8 leading byte ' + ptrToString(u0) + ' encountered when deserializing a UTF-8 string in wasm memory to a JS string!');\n          u0 = (u0 & 7) << 18 | u1 << 12 | u2 << 6 | heapOrArray[idx++] & 63;\n        }\n        if (u0 < 0x10000) {\n          str += String.fromCharCode(u0);\n        } else {\n          var ch = u0 - 0x10000;\n          str += String.fromCharCode(0xD800 | ch >> 10, 0xDC00 | ch & 0x3FF);\n        }\n      }\n      return str;\n    };\n    var FS_stdin_getChar_buffer = [];\n    var lengthBytesUTF8 = str => {\n      var len = 0;\n      for (var i = 0; i < str.length; ++i) {\n        // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code\n        // unit, not a Unicode code point of the character! So decode\n        // UTF16->UTF32->UTF8.\n        // See http://unicode.org/faq/utf_bom.html#utf16-3\n        var c = str.charCodeAt(i); // possibly a lead surrogate\n        if (c <= 0x7F) {\n          len++;\n        } else if (c <= 0x7FF) {\n          len += 2;\n        } else if (c >= 0xD800 && c <= 0xDFFF) {\n          len += 4;\n          ++i;\n        } else {\n          len += 3;\n        }\n      }\n      return len;\n    };\n    var stringToUTF8Array = (str, heap, outIdx, maxBytesToWrite) => {\n      assert(typeof str === 'string', `stringToUTF8Array expects a string (got ${typeof str})`);\n      // Parameter maxBytesToWrite is not optional. Negative values, 0, null,\n      // undefined and false each don't write out any bytes.\n      if (!(maxBytesToWrite > 0)) return 0;\n      var startIdx = outIdx;\n      var endIdx = outIdx + maxBytesToWrite - 1; // -1 for string null terminator.\n      for (var i = 0; i < str.length; ++i) {\n        // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code\n        // unit, not a Unicode code point of the character! So decode\n        // UTF16->UTF32->UTF8.\n        // See http://unicode.org/faq/utf_bom.html#utf16-3\n        // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description\n        // and https://www.ietf.org/rfc/rfc2279.txt\n        // and https://tools.ietf.org/html/rfc3629\n        var u = str.charCodeAt(i); // possibly a lead surrogate\n        if (u >= 0xD800 && u <= 0xDFFF) {\n          var u1 = str.charCodeAt(++i);\n          u = 0x10000 + ((u & 0x3FF) << 10) | u1 & 0x3FF;\n        }\n        if (u <= 0x7F) {\n          if (outIdx >= endIdx) break;\n          heap[outIdx++] = u;\n        } else if (u <= 0x7FF) {\n          if (outIdx + 1 >= endIdx) break;\n          heap[outIdx++] = 0xC0 | u >> 6;\n          heap[outIdx++] = 0x80 | u & 63;\n        } else if (u <= 0xFFFF) {\n          if (outIdx + 2 >= endIdx) break;\n          heap[outIdx++] = 0xE0 | u >> 12;\n          heap[outIdx++] = 0x80 | u >> 6 & 63;\n          heap[outIdx++] = 0x80 | u & 63;\n        } else {\n          if (outIdx + 3 >= endIdx) break;\n          if (u > 0x10FFFF) warnOnce('Invalid Unicode code point ' + ptrToString(u) + ' encountered when serializing a JS string to a UTF-8 string in wasm memory! (Valid unicode code points should be in range 0-0x10FFFF).');\n          heap[outIdx++] = 0xF0 | u >> 18;\n          heap[outIdx++] = 0x80 | u >> 12 & 63;\n          heap[outIdx++] = 0x80 | u >> 6 & 63;\n          heap[outIdx++] = 0x80 | u & 63;\n        }\n      }\n      // Null-terminate the pointer to the buffer.\n      heap[outIdx] = 0;\n      return outIdx - startIdx;\n    };\n    /** @type {function(string, boolean=, number=)} */\n    function intArrayFromString(stringy, dontAddNull, length) {\n      var len = length > 0 ? length : lengthBytesUTF8(stringy) + 1;\n      var u8array = new Array(len);\n      var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);\n      if (dontAddNull) u8array.length = numBytesWritten;\n      return u8array;\n    }\n    var FS_stdin_getChar = () => {\n      if (!FS_stdin_getChar_buffer.length) {\n        var result = null;\n        if (ENVIRONMENT_IS_NODE) {\n          // we will read data by chunks of BUFSIZE\n          var BUFSIZE = 256;\n          var buf = Buffer.alloc(BUFSIZE);\n          var bytesRead = 0;\n\n          // For some reason we must suppress a closure warning here, even though\n          // fd definitely exists on process.stdin, and is even the proper way to\n          // get the fd of stdin,\n          // https://github.com/nodejs/help/issues/2136#issuecomment-523649904\n          // This started to happen after moving this logic out of library_tty.js,\n          // so it is related to the surrounding code in some unclear manner.\n          /** @suppress {missingProperties} */\n          var fd = process.stdin.fd;\n          try {\n            bytesRead = fs.readSync(fd, buf, 0, BUFSIZE);\n          } catch (e) {\n            // Cross-platform differences: on Windows, reading EOF throws an\n            // exception, but on other OSes, reading EOF returns 0. Uniformize\n            // behavior by treating the EOF exception to return 0.\n            if (e.toString().includes('EOF')) bytesRead = 0;else throw e;\n          }\n          if (bytesRead > 0) {\n            result = buf.slice(0, bytesRead).toString('utf-8');\n          }\n        } else if (typeof window != 'undefined' && typeof window.prompt == 'function') {\n          // Browser.\n          result = window.prompt('Input: '); // returns null on cancel\n          if (result !== null) {\n            result += '\\n';\n          }\n        } else {}\n        if (!result) {\n          return null;\n        }\n        FS_stdin_getChar_buffer = intArrayFromString(result, true);\n      }\n      return FS_stdin_getChar_buffer.shift();\n    };\n    var TTY = {\n      ttys: [],\n      init() {\n        // https://github.com/emscripten-core/emscripten/pull/1555\n        // if (ENVIRONMENT_IS_NODE) {\n        //   // currently, FS.init does not distinguish if process.stdin is a file or TTY\n        //   // device, it always assumes it's a TTY device. because of this, we're forcing\n        //   // process.stdin to UTF8 encoding to at least make stdin reading compatible\n        //   // with text files until FS.init can be refactored.\n        //   process.stdin.setEncoding('utf8');\n        // }\n      },\n      shutdown() {\n        // https://github.com/emscripten-core/emscripten/pull/1555\n        // if (ENVIRONMENT_IS_NODE) {\n        //   // inolen: any idea as to why node -e 'process.stdin.read()' wouldn't exit immediately (with process.stdin being a tty)?\n        //   // isaacs: because now it's reading from the stream, you've expressed interest in it, so that read() kicks off a _read() which creates a ReadReq operation\n        //   // inolen: I thought read() in that case was a synchronous operation that just grabbed some amount of buffered data if it exists?\n        //   // isaacs: it is. but it also triggers a _read() call, which calls readStart() on the handle\n        //   // isaacs: do process.stdin.pause() and i'd think it'd probably close the pending call\n        //   process.stdin.pause();\n        // }\n      },\n      register(dev, ops) {\n        TTY.ttys[dev] = {\n          input: [],\n          output: [],\n          ops: ops\n        };\n        FS.registerDevice(dev, TTY.stream_ops);\n      },\n      stream_ops: {\n        open(stream) {\n          var tty = TTY.ttys[stream.node.rdev];\n          if (!tty) {\n            throw new FS.ErrnoError(43);\n          }\n          stream.tty = tty;\n          stream.seekable = false;\n        },\n        close(stream) {\n          // flush any pending line data\n          stream.tty.ops.fsync(stream.tty);\n        },\n        fsync(stream) {\n          stream.tty.ops.fsync(stream.tty);\n        },\n        read(stream, buffer, offset, length, pos /* ignored */) {\n          if (!stream.tty || !stream.tty.ops.get_char) {\n            throw new FS.ErrnoError(60);\n          }\n          var bytesRead = 0;\n          for (var i = 0; i < length; i++) {\n            var result;\n            try {\n              result = stream.tty.ops.get_char(stream.tty);\n            } catch (e) {\n              throw new FS.ErrnoError(29);\n            }\n            if (result === undefined && bytesRead === 0) {\n              throw new FS.ErrnoError(6);\n            }\n            if (result === null || result === undefined) break;\n            bytesRead++;\n            buffer[offset + i] = result;\n          }\n          if (bytesRead) {\n            stream.node.timestamp = Date.now();\n          }\n          return bytesRead;\n        },\n        write(stream, buffer, offset, length, pos) {\n          if (!stream.tty || !stream.tty.ops.put_char) {\n            throw new FS.ErrnoError(60);\n          }\n          try {\n            for (var i = 0; i < length; i++) {\n              stream.tty.ops.put_char(stream.tty, buffer[offset + i]);\n            }\n          } catch (e) {\n            throw new FS.ErrnoError(29);\n          }\n          if (length) {\n            stream.node.timestamp = Date.now();\n          }\n          return i;\n        }\n      },\n      default_tty_ops: {\n        get_char(tty) {\n          return FS_stdin_getChar();\n        },\n        put_char(tty, val) {\n          if (val === null || val === 10) {\n            out(UTF8ArrayToString(tty.output));\n            tty.output = [];\n          } else {\n            if (val != 0) tty.output.push(val); // val == 0 would cut text output off in the middle.\n          }\n        },\n        fsync(tty) {\n          if (tty.output && tty.output.length > 0) {\n            out(UTF8ArrayToString(tty.output));\n            tty.output = [];\n          }\n        },\n        ioctl_tcgets(tty) {\n          // typical setting\n          return {\n            c_iflag: 25856,\n            c_oflag: 5,\n            c_cflag: 191,\n            c_lflag: 35387,\n            c_cc: [0x03, 0x1c, 0x7f, 0x15, 0x04, 0x00, 0x01, 0x00, 0x11, 0x13, 0x1a, 0x00, 0x12, 0x0f, 0x17, 0x16, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]\n          };\n        },\n        ioctl_tcsets(tty, optional_actions, data) {\n          // currently just ignore\n          return 0;\n        },\n        ioctl_tiocgwinsz(tty) {\n          return [24, 80];\n        }\n      },\n      default_tty1_ops: {\n        put_char(tty, val) {\n          if (val === null || val === 10) {\n            err(UTF8ArrayToString(tty.output));\n            tty.output = [];\n          } else {\n            if (val != 0) tty.output.push(val);\n          }\n        },\n        fsync(tty) {\n          if (tty.output && tty.output.length > 0) {\n            err(UTF8ArrayToString(tty.output));\n            tty.output = [];\n          }\n        }\n      }\n    };\n    var zeroMemory = (address, size) => {\n      HEAPU8.fill(0, address, address + size);\n    };\n    var mmapAlloc = size => {\n      abort('internal error: mmapAlloc called but `emscripten_builtin_memalign` native symbol not exported');\n    };\n    var MEMFS = {\n      ops_table: null,\n      mount(mount) {\n        return MEMFS.createNode(null, '/', 16384 | 511 /* 0777 */, 0);\n      },\n      createNode(parent, name, mode, dev) {\n        if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {\n          // no supported\n          throw new FS.ErrnoError(63);\n        }\n        MEMFS.ops_table ||= {\n          dir: {\n            node: {\n              getattr: MEMFS.node_ops.getattr,\n              setattr: MEMFS.node_ops.setattr,\n              lookup: MEMFS.node_ops.lookup,\n              mknod: MEMFS.node_ops.mknod,\n              rename: MEMFS.node_ops.rename,\n              unlink: MEMFS.node_ops.unlink,\n              rmdir: MEMFS.node_ops.rmdir,\n              readdir: MEMFS.node_ops.readdir,\n              symlink: MEMFS.node_ops.symlink\n            },\n            stream: {\n              llseek: MEMFS.stream_ops.llseek\n            }\n          },\n          file: {\n            node: {\n              getattr: MEMFS.node_ops.getattr,\n              setattr: MEMFS.node_ops.setattr\n            },\n            stream: {\n              llseek: MEMFS.stream_ops.llseek,\n              read: MEMFS.stream_ops.read,\n              write: MEMFS.stream_ops.write,\n              allocate: MEMFS.stream_ops.allocate,\n              mmap: MEMFS.stream_ops.mmap,\n              msync: MEMFS.stream_ops.msync\n            }\n          },\n          link: {\n            node: {\n              getattr: MEMFS.node_ops.getattr,\n              setattr: MEMFS.node_ops.setattr,\n              readlink: MEMFS.node_ops.readlink\n            },\n            stream: {}\n          },\n          chrdev: {\n            node: {\n              getattr: MEMFS.node_ops.getattr,\n              setattr: MEMFS.node_ops.setattr\n            },\n            stream: FS.chrdev_stream_ops\n          }\n        };\n        var node = FS.createNode(parent, name, mode, dev);\n        if (FS.isDir(node.mode)) {\n          node.node_ops = MEMFS.ops_table.dir.node;\n          node.stream_ops = MEMFS.ops_table.dir.stream;\n          node.contents = {};\n        } else if (FS.isFile(node.mode)) {\n          node.node_ops = MEMFS.ops_table.file.node;\n          node.stream_ops = MEMFS.ops_table.file.stream;\n          node.usedBytes = 0; // The actual number of bytes used in the typed array, as opposed to contents.length which gives the whole capacity.\n          // When the byte data of the file is populated, this will point to either a typed array, or a normal JS array. Typed arrays are preferred\n          // for performance, and used by default. However, typed arrays are not resizable like normal JS arrays are, so there is a small disk size\n          // penalty involved for appending file writes that continuously grow a file similar to std::vector capacity vs used -scheme.\n          node.contents = null;\n        } else if (FS.isLink(node.mode)) {\n          node.node_ops = MEMFS.ops_table.link.node;\n          node.stream_ops = MEMFS.ops_table.link.stream;\n        } else if (FS.isChrdev(node.mode)) {\n          node.node_ops = MEMFS.ops_table.chrdev.node;\n          node.stream_ops = MEMFS.ops_table.chrdev.stream;\n        }\n        node.timestamp = Date.now();\n        // add the new node to the parent\n        if (parent) {\n          parent.contents[name] = node;\n          parent.timestamp = node.timestamp;\n        }\n        return node;\n      },\n      getFileDataAsTypedArray(node) {\n        if (!node.contents) return new Uint8Array(0);\n        if (node.contents.subarray) return node.contents.subarray(0, node.usedBytes); // Make sure to not return excess unused bytes.\n        return new Uint8Array(node.contents);\n      },\n      expandFileStorage(node, newCapacity) {\n        var prevCapacity = node.contents ? node.contents.length : 0;\n        if (prevCapacity >= newCapacity) return; // No need to expand, the storage was already large enough.\n        // Don't expand strictly to the given requested limit if it's only a very small increase, but instead geometrically grow capacity.\n        // For small filesizes (<1MB), perform size*2 geometric increase, but for large sizes, do a much more conservative size*1.125 increase to\n        // avoid overshooting the allocation cap by a very large margin.\n        var CAPACITY_DOUBLING_MAX = 1024 * 1024;\n        newCapacity = Math.max(newCapacity, prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2.0 : 1.125) >>> 0);\n        if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256); // At minimum allocate 256b for each file when expanding.\n        var oldContents = node.contents;\n        node.contents = new Uint8Array(newCapacity); // Allocate new storage.\n        if (node.usedBytes > 0) node.contents.set(oldContents.subarray(0, node.usedBytes), 0); // Copy old data over to the new storage.\n      },\n      resizeFileStorage(node, newSize) {\n        if (node.usedBytes == newSize) return;\n        if (newSize == 0) {\n          node.contents = null; // Fully decommit when requesting a resize to zero.\n          node.usedBytes = 0;\n        } else {\n          var oldContents = node.contents;\n          node.contents = new Uint8Array(newSize); // Allocate new storage.\n          if (oldContents) {\n            node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes))); // Copy old data over to the new storage.\n          }\n          node.usedBytes = newSize;\n        }\n      },\n      node_ops: {\n        getattr(node) {\n          var attr = {};\n          // device numbers reuse inode numbers.\n          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;\n          attr.ino = node.id;\n          attr.mode = node.mode;\n          attr.nlink = 1;\n          attr.uid = 0;\n          attr.gid = 0;\n          attr.rdev = node.rdev;\n          if (FS.isDir(node.mode)) {\n            attr.size = 4096;\n          } else if (FS.isFile(node.mode)) {\n            attr.size = node.usedBytes;\n          } else if (FS.isLink(node.mode)) {\n            attr.size = node.link.length;\n          } else {\n            attr.size = 0;\n          }\n          attr.atime = new Date(node.timestamp);\n          attr.mtime = new Date(node.timestamp);\n          attr.ctime = new Date(node.timestamp);\n          // NOTE: In our implementation, st_blocks = Math.ceil(st_size/st_blksize),\n          //       but this is not required by the standard.\n          attr.blksize = 4096;\n          attr.blocks = Math.ceil(attr.size / attr.blksize);\n          return attr;\n        },\n        setattr(node, attr) {\n          if (attr.mode !== undefined) {\n            node.mode = attr.mode;\n          }\n          if (attr.timestamp !== undefined) {\n            node.timestamp = attr.timestamp;\n          }\n          if (attr.size !== undefined) {\n            MEMFS.resizeFileStorage(node, attr.size);\n          }\n        },\n        lookup(parent, name) {\n          throw FS.genericErrors[44];\n        },\n        mknod(parent, name, mode, dev) {\n          return MEMFS.createNode(parent, name, mode, dev);\n        },\n        rename(old_node, new_dir, new_name) {\n          // if we're overwriting a directory at new_name, make sure it's empty.\n          if (FS.isDir(old_node.mode)) {\n            var new_node;\n            try {\n              new_node = FS.lookupNode(new_dir, new_name);\n            } catch (e) {}\n            if (new_node) {\n              for (var i in new_node.contents) {\n                throw new FS.ErrnoError(55);\n              }\n            }\n          }\n          // do the internal rewiring\n          delete old_node.parent.contents[old_node.name];\n          old_node.parent.timestamp = Date.now();\n          old_node.name = new_name;\n          new_dir.contents[new_name] = old_node;\n          new_dir.timestamp = old_node.parent.timestamp;\n        },\n        unlink(parent, name) {\n          delete parent.contents[name];\n          parent.timestamp = Date.now();\n        },\n        rmdir(parent, name) {\n          var node = FS.lookupNode(parent, name);\n          for (var i in node.contents) {\n            throw new FS.ErrnoError(55);\n          }\n          delete parent.contents[name];\n          parent.timestamp = Date.now();\n        },\n        readdir(node) {\n          var entries = ['.', '..'];\n          for (var key of Object.keys(node.contents)) {\n            entries.push(key);\n          }\n          return entries;\n        },\n        symlink(parent, newname, oldpath) {\n          var node = MEMFS.createNode(parent, newname, 511 /* 0777 */ | 40960, 0);\n          node.link = oldpath;\n          return node;\n        },\n        readlink(node) {\n          if (!FS.isLink(node.mode)) {\n            throw new FS.ErrnoError(28);\n          }\n          return node.link;\n        }\n      },\n      stream_ops: {\n        read(stream, buffer, offset, length, position) {\n          var contents = stream.node.contents;\n          if (position >= stream.node.usedBytes) return 0;\n          var size = Math.min(stream.node.usedBytes - position, length);\n          assert(size >= 0);\n          if (size > 8 && contents.subarray) {\n            // non-trivial, and typed array\n            buffer.set(contents.subarray(position, position + size), offset);\n          } else {\n            for (var i = 0; i < size; i++) buffer[offset + i] = contents[position + i];\n          }\n          return size;\n        },\n        write(stream, buffer, offset, length, position, canOwn) {\n          // The data buffer should be a typed array view\n          assert(!(buffer instanceof ArrayBuffer));\n          if (!length) return 0;\n          var node = stream.node;\n          node.timestamp = Date.now();\n          if (buffer.subarray && (!node.contents || node.contents.subarray)) {\n            // This write is from a typed array to a typed array?\n            if (canOwn) {\n              assert(position === 0, 'canOwn must imply no weird position inside the file');\n              node.contents = buffer.subarray(offset, offset + length);\n              node.usedBytes = length;\n              return length;\n            } else if (node.usedBytes === 0 && position === 0) {\n              // If this is a simple first write to an empty file, do a fast set since we don't need to care about old data.\n              node.contents = buffer.slice(offset, offset + length);\n              node.usedBytes = length;\n              return length;\n            } else if (position + length <= node.usedBytes) {\n              // Writing to an already allocated and used subrange of the file?\n              node.contents.set(buffer.subarray(offset, offset + length), position);\n              return length;\n            }\n          }\n\n          // Appending to an existing file and we need to reallocate, or source data did not come as a typed array.\n          MEMFS.expandFileStorage(node, position + length);\n          if (node.contents.subarray && buffer.subarray) {\n            // Use typed array write which is available.\n            node.contents.set(buffer.subarray(offset, offset + length), position);\n          } else {\n            for (var i = 0; i < length; i++) {\n              node.contents[position + i] = buffer[offset + i]; // Or fall back to manual write if not.\n            }\n          }\n          node.usedBytes = Math.max(node.usedBytes, position + length);\n          return length;\n        },\n        llseek(stream, offset, whence) {\n          var position = offset;\n          if (whence === 1) {\n            position += stream.position;\n          } else if (whence === 2) {\n            if (FS.isFile(stream.node.mode)) {\n              position += stream.node.usedBytes;\n            }\n          }\n          if (position < 0) {\n            throw new FS.ErrnoError(28);\n          }\n          return position;\n        },\n        allocate(stream, offset, length) {\n          MEMFS.expandFileStorage(stream.node, offset + length);\n          stream.node.usedBytes = Math.max(stream.node.usedBytes, offset + length);\n        },\n        mmap(stream, length, position, prot, flags) {\n          if (!FS.isFile(stream.node.mode)) {\n            throw new FS.ErrnoError(43);\n          }\n          var ptr;\n          var allocated;\n          var contents = stream.node.contents;\n          // Only make a new copy when MAP_PRIVATE is specified.\n          if (!(flags & 2) && contents && contents.buffer === HEAP8.buffer) {\n            // We can't emulate MAP_SHARED when the file is not backed by the\n            // buffer we're mapping to (e.g. the HEAP buffer).\n            allocated = false;\n            ptr = contents.byteOffset;\n          } else {\n            allocated = true;\n            ptr = mmapAlloc(length);\n            if (!ptr) {\n              throw new FS.ErrnoError(48);\n            }\n            if (contents) {\n              // Try to avoid unnecessary slices.\n              if (position > 0 || position + length < contents.length) {\n                if (contents.subarray) {\n                  contents = contents.subarray(position, position + length);\n                } else {\n                  contents = Array.prototype.slice.call(contents, position, position + length);\n                }\n              }\n              HEAP8.set(contents, ptr);\n            }\n          }\n          return {\n            ptr,\n            allocated\n          };\n        },\n        msync(stream, buffer, offset, length, mmapFlags) {\n          MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false);\n          // should we check if bytesWritten and length are the same?\n          return 0;\n        }\n      }\n    };\n\n    /** @param {boolean=} noRunDep */\n    var asyncLoad = (url, onload, onerror, noRunDep) => {\n      var dep = !noRunDep ? getUniqueRunDependency(`al ${url}`) : '';\n      readAsync(url).then(arrayBuffer => {\n        assert(arrayBuffer, `Loading data file \"${url}\" failed (no arrayBuffer).`);\n        onload(new Uint8Array(arrayBuffer));\n        if (dep) removeRunDependency(dep);\n      }, err => {\n        if (onerror) {\n          onerror();\n        } else {\n          throw `Loading data file \"${url}\" failed.`;\n        }\n      });\n      if (dep) addRunDependency(dep);\n    };\n    var FS_createDataFile = (parent, name, fileData, canRead, canWrite, canOwn) => {\n      FS.createDataFile(parent, name, fileData, canRead, canWrite, canOwn);\n    };\n    var preloadPlugins = Module['preloadPlugins'] || [];\n    var FS_handledByPreloadPlugin = (byteArray, fullname, finish, onerror) => {\n      // Ensure plugins are ready.\n      if (typeof Browser != 'undefined') Browser.init();\n      var handled = false;\n      preloadPlugins.forEach(plugin => {\n        if (handled) return;\n        if (plugin['canHandle'](fullname)) {\n          plugin['handle'](byteArray, fullname, finish, onerror);\n          handled = true;\n        }\n      });\n      return handled;\n    };\n    var FS_createPreloadedFile = (parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn, preFinish) => {\n      // TODO we should allow people to just pass in a complete filename instead\n      // of parent and name being that we just join them anyways\n      var fullname = name ? PATH_FS.resolve(PATH.join2(parent, name)) : parent;\n      var dep = getUniqueRunDependency(`cp ${fullname}`); // might have several active requests for the same fullname\n      function processData(byteArray) {\n        function finish(byteArray) {\n          preFinish === null || preFinish === void 0 ? void 0 : preFinish();\n          if (!dontCreateFile) {\n            FS_createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);\n          }\n          onload === null || onload === void 0 ? void 0 : onload();\n          removeRunDependency(dep);\n        }\n        if (FS_handledByPreloadPlugin(byteArray, fullname, finish, () => {\n          onerror === null || onerror === void 0 ? void 0 : onerror();\n          removeRunDependency(dep);\n        })) {\n          return;\n        }\n        finish(byteArray);\n      }\n      addRunDependency(dep);\n      if (typeof url == 'string') {\n        asyncLoad(url, processData, onerror);\n      } else {\n        processData(url);\n      }\n    };\n    var FS_modeStringToFlags = str => {\n      var flagModes = {\n        'r': 0,\n        'r+': 2,\n        'w': 512 | 64 | 1,\n        'w+': 512 | 64 | 2,\n        'a': 1024 | 64 | 1,\n        'a+': 1024 | 64 | 2\n      };\n      var flags = flagModes[str];\n      if (typeof flags == 'undefined') {\n        throw new Error(`Unknown file open mode: ${str}`);\n      }\n      return flags;\n    };\n    var FS_getMode = (canRead, canWrite) => {\n      var mode = 0;\n      if (canRead) mode |= 292 | 73;\n      if (canWrite) mode |= 146;\n      return mode;\n    };\n\n    /**\r\n     * Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the\r\n     * emscripten HEAP, returns a copy of that string as a Javascript String object.\r\n     *\r\n     * @param {number} ptr\r\n     * @param {number=} maxBytesToRead - An optional length that specifies the\r\n     *   maximum number of bytes to read. You can omit this parameter to scan the\r\n     *   string until the first 0 byte. If maxBytesToRead is passed, and the string\r\n     *   at [ptr, ptr+maxBytesToReadr[ contains a null byte in the middle, then the\r\n     *   string will cut short at that byte index (i.e. maxBytesToRead will not\r\n     *   produce a string of exact length [ptr, ptr+maxBytesToRead[) N.B. mixing\r\n     *   frequent uses of UTF8ToString() with and without maxBytesToRead may throw\r\n     *   JS JIT optimizations off, so it is worth to consider consistently using one\r\n     * @return {string}\r\n     */\n    var UTF8ToString = (ptr, maxBytesToRead) => {\n      assert(typeof ptr == 'number', `UTF8ToString expects a number (got ${typeof ptr})`);\n      return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : '';\n    };\n    var strError = errno => {\n      return UTF8ToString(_strerror(errno));\n    };\n    var ERRNO_CODES = {\n      'EPERM': 63,\n      'ENOENT': 44,\n      'ESRCH': 71,\n      'EINTR': 27,\n      'EIO': 29,\n      'ENXIO': 60,\n      'E2BIG': 1,\n      'ENOEXEC': 45,\n      'EBADF': 8,\n      'ECHILD': 12,\n      'EAGAIN': 6,\n      'EWOULDBLOCK': 6,\n      'ENOMEM': 48,\n      'EACCES': 2,\n      'EFAULT': 21,\n      'ENOTBLK': 105,\n      'EBUSY': 10,\n      'EEXIST': 20,\n      'EXDEV': 75,\n      'ENODEV': 43,\n      'ENOTDIR': 54,\n      'EISDIR': 31,\n      'EINVAL': 28,\n      'ENFILE': 41,\n      'EMFILE': 33,\n      'ENOTTY': 59,\n      'ETXTBSY': 74,\n      'EFBIG': 22,\n      'ENOSPC': 51,\n      'ESPIPE': 70,\n      'EROFS': 69,\n      'EMLINK': 34,\n      'EPIPE': 64,\n      'EDOM': 18,\n      'ERANGE': 68,\n      'ENOMSG': 49,\n      'EIDRM': 24,\n      'ECHRNG': 106,\n      'EL2NSYNC': 156,\n      'EL3HLT': 107,\n      'EL3RST': 108,\n      'ELNRNG': 109,\n      'EUNATCH': 110,\n      'ENOCSI': 111,\n      'EL2HLT': 112,\n      'EDEADLK': 16,\n      'ENOLCK': 46,\n      'EBADE': 113,\n      'EBADR': 114,\n      'EXFULL': 115,\n      'ENOANO': 104,\n      'EBADRQC': 103,\n      'EBADSLT': 102,\n      'EDEADLOCK': 16,\n      'EBFONT': 101,\n      'ENOSTR': 100,\n      'ENODATA': 116,\n      'ETIME': 117,\n      'ENOSR': 118,\n      'ENONET': 119,\n      'ENOPKG': 120,\n      'EREMOTE': 121,\n      'ENOLINK': 47,\n      'EADV': 122,\n      'ESRMNT': 123,\n      'ECOMM': 124,\n      'EPROTO': 65,\n      'EMULTIHOP': 36,\n      'EDOTDOT': 125,\n      'EBADMSG': 9,\n      'ENOTUNIQ': 126,\n      'EBADFD': 127,\n      'EREMCHG': 128,\n      'ELIBACC': 129,\n      'ELIBBAD': 130,\n      'ELIBSCN': 131,\n      'ELIBMAX': 132,\n      'ELIBEXEC': 133,\n      'ENOSYS': 52,\n      'ENOTEMPTY': 55,\n      'ENAMETOOLONG': 37,\n      'ELOOP': 32,\n      'EOPNOTSUPP': 138,\n      'EPFNOSUPPORT': 139,\n      'ECONNRESET': 15,\n      'ENOBUFS': 42,\n      'EAFNOSUPPORT': 5,\n      'EPROTOTYPE': 67,\n      'ENOTSOCK': 57,\n      'ENOPROTOOPT': 50,\n      'ESHUTDOWN': 140,\n      'ECONNREFUSED': 14,\n      'EADDRINUSE': 3,\n      'ECONNABORTED': 13,\n      'ENETUNREACH': 40,\n      'ENETDOWN': 38,\n      'ETIMEDOUT': 73,\n      'EHOSTDOWN': 142,\n      'EHOSTUNREACH': 23,\n      'EINPROGRESS': 26,\n      'EALREADY': 7,\n      'EDESTADDRREQ': 17,\n      'EMSGSIZE': 35,\n      'EPROTONOSUPPORT': 66,\n      'ESOCKTNOSUPPORT': 137,\n      'EADDRNOTAVAIL': 4,\n      'ENETRESET': 39,\n      'EISCONN': 30,\n      'ENOTCONN': 53,\n      'ETOOMANYREFS': 141,\n      'EUSERS': 136,\n      'EDQUOT': 19,\n      'ESTALE': 72,\n      'ENOTSUP': 138,\n      'ENOMEDIUM': 148,\n      'EILSEQ': 25,\n      'EOVERFLOW': 61,\n      'ECANCELED': 11,\n      'ENOTRECOVERABLE': 56,\n      'EOWNERDEAD': 62,\n      'ESTRPIPE': 135\n    };\n    var FS = {\n      root: null,\n      mounts: [],\n      devices: {},\n      streams: [],\n      nextInode: 1,\n      nameTable: null,\n      currentPath: \"/\",\n      initialized: false,\n      ignorePermissions: true,\n      ErrnoError: class extends Error {\n        // We set the `name` property to be able to identify `FS.ErrnoError`\n        // - the `name` is a standard ECMA-262 property of error objects. Kind of good to have it anyway.\n        // - when using PROXYFS, an error can come from an underlying FS\n        // as different FS objects have their own FS.ErrnoError each,\n        // the test `err instanceof FS.ErrnoError` won't detect an error coming from another filesystem, causing bugs.\n        // we'll use the reliable test `err.name == \"ErrnoError\"` instead\n        constructor(errno) {\n          super(runtimeInitialized ? strError(errno) : '');\n          // TODO(sbc): Use the inline member declaration syntax once we\n          // support it in acorn and closure.\n          this.name = 'ErrnoError';\n          this.errno = errno;\n          for (var key in ERRNO_CODES) {\n            if (ERRNO_CODES[key] === errno) {\n              this.code = key;\n              break;\n            }\n          }\n        }\n      },\n      genericErrors: {},\n      filesystems: null,\n      syncFSRequests: 0,\n      readFiles: {},\n      FSStream: class {\n        constructor() {\n          // TODO(https://github.com/emscripten-core/emscripten/issues/21414):\n          // Use inline field declarations.\n          this.shared = {};\n        }\n        get object() {\n          return this.node;\n        }\n        set object(val) {\n          this.node = val;\n        }\n        get isRead() {\n          return (this.flags & 2097155) !== 1;\n        }\n        get isWrite() {\n          return (this.flags & 2097155) !== 0;\n        }\n        get isAppend() {\n          return this.flags & 1024;\n        }\n        get flags() {\n          return this.shared.flags;\n        }\n        set flags(val) {\n          this.shared.flags = val;\n        }\n        get position() {\n          return this.shared.position;\n        }\n        set position(val) {\n          this.shared.position = val;\n        }\n      },\n      FSNode: class {\n        constructor(parent, name, mode, rdev) {\n          if (!parent) {\n            parent = this; // root node sets parent to itself\n          }\n          this.parent = parent;\n          this.mount = parent.mount;\n          this.mounted = null;\n          this.id = FS.nextInode++;\n          this.name = name;\n          this.mode = mode;\n          this.node_ops = {};\n          this.stream_ops = {};\n          this.rdev = rdev;\n          this.readMode = 292 | 73;\n          this.writeMode = 146;\n        }\n        get read() {\n          return (this.mode & this.readMode) === this.readMode;\n        }\n        set read(val) {\n          val ? this.mode |= this.readMode : this.mode &= ~this.readMode;\n        }\n        get write() {\n          return (this.mode & this.writeMode) === this.writeMode;\n        }\n        set write(val) {\n          val ? this.mode |= this.writeMode : this.mode &= ~this.writeMode;\n        }\n        get isFolder() {\n          return FS.isDir(this.mode);\n        }\n        get isDevice() {\n          return FS.isChrdev(this.mode);\n        }\n      },\n      lookupPath(path, opts = {}) {\n        path = PATH_FS.resolve(path);\n        if (!path) return {\n          path: '',\n          node: null\n        };\n        var defaults = {\n          follow_mount: true,\n          recurse_count: 0\n        };\n        opts = Object.assign(defaults, opts);\n        if (opts.recurse_count > 8) {\n          // max recursive lookup of 8\n          throw new FS.ErrnoError(32);\n        }\n\n        // split the absolute path\n        var parts = path.split('/').filter(p => !!p);\n\n        // start at the root\n        var current = FS.root;\n        var current_path = '/';\n        for (var i = 0; i < parts.length; i++) {\n          var islast = i === parts.length - 1;\n          if (islast && opts.parent) {\n            // stop resolving\n            break;\n          }\n          current = FS.lookupNode(current, parts[i]);\n          current_path = PATH.join2(current_path, parts[i]);\n\n          // jump to the mount's root node if this is a mountpoint\n          if (FS.isMountpoint(current)) {\n            if (!islast || islast && opts.follow_mount) {\n              current = current.mounted.root;\n            }\n          }\n\n          // by default, lookupPath will not follow a symlink if it is the final path component.\n          // setting opts.follow = true will override this behavior.\n          if (!islast || opts.follow) {\n            var count = 0;\n            while (FS.isLink(current.mode)) {\n              var link = FS.readlink(current_path);\n              current_path = PATH_FS.resolve(PATH.dirname(current_path), link);\n              var lookup = FS.lookupPath(current_path, {\n                recurse_count: opts.recurse_count + 1\n              });\n              current = lookup.node;\n              if (count++ > 40) {\n                // limit max consecutive symlinks to 40 (SYMLOOP_MAX).\n                throw new FS.ErrnoError(32);\n              }\n            }\n          }\n        }\n        return {\n          path: current_path,\n          node: current\n        };\n      },\n      getPath(node) {\n        var path;\n        while (true) {\n          if (FS.isRoot(node)) {\n            var mount = node.mount.mountpoint;\n            if (!path) return mount;\n            return mount[mount.length - 1] !== '/' ? `${mount}/${path}` : mount + path;\n          }\n          path = path ? `${node.name}/${path}` : node.name;\n          node = node.parent;\n        }\n      },\n      hashName(parentid, name) {\n        var hash = 0;\n        for (var i = 0; i < name.length; i++) {\n          hash = (hash << 5) - hash + name.charCodeAt(i) | 0;\n        }\n        return (parentid + hash >>> 0) % FS.nameTable.length;\n      },\n      hashAddNode(node) {\n        var hash = FS.hashName(node.parent.id, node.name);\n        node.name_next = FS.nameTable[hash];\n        FS.nameTable[hash] = node;\n      },\n      hashRemoveNode(node) {\n        var hash = FS.hashName(node.parent.id, node.name);\n        if (FS.nameTable[hash] === node) {\n          FS.nameTable[hash] = node.name_next;\n        } else {\n          var current = FS.nameTable[hash];\n          while (current) {\n            if (current.name_next === node) {\n              current.name_next = node.name_next;\n              break;\n            }\n            current = current.name_next;\n          }\n        }\n      },\n      lookupNode(parent, name) {\n        var errCode = FS.mayLookup(parent);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        var hash = FS.hashName(parent.id, name);\n        for (var node = FS.nameTable[hash]; node; node = node.name_next) {\n          var nodeName = node.name;\n          if (node.parent.id === parent.id && nodeName === name) {\n            return node;\n          }\n        }\n        // if we failed to find it in the cache, call into the VFS\n        return FS.lookup(parent, name);\n      },\n      createNode(parent, name, mode, rdev) {\n        assert(typeof parent == 'object');\n        var node = new FS.FSNode(parent, name, mode, rdev);\n        FS.hashAddNode(node);\n        return node;\n      },\n      destroyNode(node) {\n        FS.hashRemoveNode(node);\n      },\n      isRoot(node) {\n        return node === node.parent;\n      },\n      isMountpoint(node) {\n        return !!node.mounted;\n      },\n      isFile(mode) {\n        return (mode & 61440) === 32768;\n      },\n      isDir(mode) {\n        return (mode & 61440) === 16384;\n      },\n      isLink(mode) {\n        return (mode & 61440) === 40960;\n      },\n      isChrdev(mode) {\n        return (mode & 61440) === 8192;\n      },\n      isBlkdev(mode) {\n        return (mode & 61440) === 24576;\n      },\n      isFIFO(mode) {\n        return (mode & 61440) === 4096;\n      },\n      isSocket(mode) {\n        return (mode & 49152) === 49152;\n      },\n      flagsToPermissionString(flag) {\n        var perms = ['r', 'w', 'rw'][flag & 3];\n        if (flag & 512) {\n          perms += 'w';\n        }\n        return perms;\n      },\n      nodePermissions(node, perms) {\n        if (FS.ignorePermissions) {\n          return 0;\n        }\n        // return 0 if any user, group or owner bits are set.\n        if (perms.includes('r') && !(node.mode & 292)) {\n          return 2;\n        } else if (perms.includes('w') && !(node.mode & 146)) {\n          return 2;\n        } else if (perms.includes('x') && !(node.mode & 73)) {\n          return 2;\n        }\n        return 0;\n      },\n      mayLookup(dir) {\n        if (!FS.isDir(dir.mode)) return 54;\n        var errCode = FS.nodePermissions(dir, 'x');\n        if (errCode) return errCode;\n        if (!dir.node_ops.lookup) return 2;\n        return 0;\n      },\n      mayCreate(dir, name) {\n        try {\n          var node = FS.lookupNode(dir, name);\n          return 20;\n        } catch (e) {}\n        return FS.nodePermissions(dir, 'wx');\n      },\n      mayDelete(dir, name, isdir) {\n        var node;\n        try {\n          node = FS.lookupNode(dir, name);\n        } catch (e) {\n          return e.errno;\n        }\n        var errCode = FS.nodePermissions(dir, 'wx');\n        if (errCode) {\n          return errCode;\n        }\n        if (isdir) {\n          if (!FS.isDir(node.mode)) {\n            return 54;\n          }\n          if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {\n            return 10;\n          }\n        } else {\n          if (FS.isDir(node.mode)) {\n            return 31;\n          }\n        }\n        return 0;\n      },\n      mayOpen(node, flags) {\n        if (!node) {\n          return 44;\n        }\n        if (FS.isLink(node.mode)) {\n          return 32;\n        } else if (FS.isDir(node.mode)) {\n          if (FS.flagsToPermissionString(flags) !== 'r' ||\n          // opening for write\n          flags & 512) {\n            // TODO: check for O_SEARCH? (== search for dir only)\n            return 31;\n          }\n        }\n        return FS.nodePermissions(node, FS.flagsToPermissionString(flags));\n      },\n      MAX_OPEN_FDS: 4096,\n      nextfd() {\n        for (var fd = 0; fd <= FS.MAX_OPEN_FDS; fd++) {\n          if (!FS.streams[fd]) {\n            return fd;\n          }\n        }\n        throw new FS.ErrnoError(33);\n      },\n      getStreamChecked(fd) {\n        var stream = FS.getStream(fd);\n        if (!stream) {\n          throw new FS.ErrnoError(8);\n        }\n        return stream;\n      },\n      getStream: fd => FS.streams[fd],\n      createStream(stream, fd = -1) {\n        assert(fd >= -1);\n\n        // clone it, so we can return an instance of FSStream\n        stream = Object.assign(new FS.FSStream(), stream);\n        if (fd == -1) {\n          fd = FS.nextfd();\n        }\n        stream.fd = fd;\n        FS.streams[fd] = stream;\n        return stream;\n      },\n      closeStream(fd) {\n        FS.streams[fd] = null;\n      },\n      dupStream(origStream, fd = -1) {\n        var _stream$stream_ops, _stream$stream_ops$du;\n        var stream = FS.createStream(origStream, fd);\n        (_stream$stream_ops = stream.stream_ops) === null || _stream$stream_ops === void 0 ? void 0 : (_stream$stream_ops$du = _stream$stream_ops.dup) === null || _stream$stream_ops$du === void 0 ? void 0 : _stream$stream_ops$du.call(_stream$stream_ops, stream);\n        return stream;\n      },\n      chrdev_stream_ops: {\n        open(stream) {\n          var _stream$stream_ops$op, _stream$stream_ops2;\n          var device = FS.getDevice(stream.node.rdev);\n          // override node's stream ops with the device's\n          stream.stream_ops = device.stream_ops;\n          // forward the open call\n          (_stream$stream_ops$op = (_stream$stream_ops2 = stream.stream_ops).open) === null || _stream$stream_ops$op === void 0 ? void 0 : _stream$stream_ops$op.call(_stream$stream_ops2, stream);\n        },\n        llseek() {\n          throw new FS.ErrnoError(70);\n        }\n      },\n      major: dev => dev >> 8,\n      minor: dev => dev & 0xff,\n      makedev: (ma, mi) => ma << 8 | mi,\n      registerDevice(dev, ops) {\n        FS.devices[dev] = {\n          stream_ops: ops\n        };\n      },\n      getDevice: dev => FS.devices[dev],\n      getMounts(mount) {\n        var mounts = [];\n        var check = [mount];\n        while (check.length) {\n          var m = check.pop();\n          mounts.push(m);\n          check.push(...m.mounts);\n        }\n        return mounts;\n      },\n      syncfs(populate, callback) {\n        if (typeof populate == 'function') {\n          callback = populate;\n          populate = false;\n        }\n        FS.syncFSRequests++;\n        if (FS.syncFSRequests > 1) {\n          err(`warning: ${FS.syncFSRequests} FS.syncfs operations in flight at once, probably just doing extra work`);\n        }\n        var mounts = FS.getMounts(FS.root.mount);\n        var completed = 0;\n        function doCallback(errCode) {\n          assert(FS.syncFSRequests > 0);\n          FS.syncFSRequests--;\n          return callback(errCode);\n        }\n        function done(errCode) {\n          if (errCode) {\n            if (!done.errored) {\n              done.errored = true;\n              return doCallback(errCode);\n            }\n            return;\n          }\n          if (++completed >= mounts.length) {\n            doCallback(null);\n          }\n        }\n        ;\n\n        // sync all mounts\n        mounts.forEach(mount => {\n          if (!mount.type.syncfs) {\n            return done(null);\n          }\n          mount.type.syncfs(mount, populate, done);\n        });\n      },\n      mount(type, opts, mountpoint) {\n        if (typeof type == 'string') {\n          // The filesystem was not included, and instead we have an error\n          // message stored in the variable.\n          throw type;\n        }\n        var root = mountpoint === '/';\n        var pseudo = !mountpoint;\n        var node;\n        if (root && FS.root) {\n          throw new FS.ErrnoError(10);\n        } else if (!root && !pseudo) {\n          var lookup = FS.lookupPath(mountpoint, {\n            follow_mount: false\n          });\n          mountpoint = lookup.path; // use the absolute path\n          node = lookup.node;\n          if (FS.isMountpoint(node)) {\n            throw new FS.ErrnoError(10);\n          }\n          if (!FS.isDir(node.mode)) {\n            throw new FS.ErrnoError(54);\n          }\n        }\n        var mount = {\n          type,\n          opts,\n          mountpoint,\n          mounts: []\n        };\n\n        // create a root node for the fs\n        var mountRoot = type.mount(mount);\n        mountRoot.mount = mount;\n        mount.root = mountRoot;\n        if (root) {\n          FS.root = mountRoot;\n        } else if (node) {\n          // set as a mountpoint\n          node.mounted = mount;\n\n          // add the new mount to the current mount's children\n          if (node.mount) {\n            node.mount.mounts.push(mount);\n          }\n        }\n        return mountRoot;\n      },\n      unmount(mountpoint) {\n        var lookup = FS.lookupPath(mountpoint, {\n          follow_mount: false\n        });\n        if (!FS.isMountpoint(lookup.node)) {\n          throw new FS.ErrnoError(28);\n        }\n\n        // destroy the nodes for this mount, and all its child mounts\n        var node = lookup.node;\n        var mount = node.mounted;\n        var mounts = FS.getMounts(mount);\n        Object.keys(FS.nameTable).forEach(hash => {\n          var current = FS.nameTable[hash];\n          while (current) {\n            var next = current.name_next;\n            if (mounts.includes(current.mount)) {\n              FS.destroyNode(current);\n            }\n            current = next;\n          }\n        });\n\n        // no longer a mountpoint\n        node.mounted = null;\n\n        // remove this mount from the child mounts\n        var idx = node.mount.mounts.indexOf(mount);\n        assert(idx !== -1);\n        node.mount.mounts.splice(idx, 1);\n      },\n      lookup(parent, name) {\n        return parent.node_ops.lookup(parent, name);\n      },\n      mknod(path, mode, dev) {\n        var lookup = FS.lookupPath(path, {\n          parent: true\n        });\n        var parent = lookup.node;\n        var name = PATH.basename(path);\n        if (!name || name === '.' || name === '..') {\n          throw new FS.ErrnoError(28);\n        }\n        var errCode = FS.mayCreate(parent, name);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.mknod) {\n          throw new FS.ErrnoError(63);\n        }\n        return parent.node_ops.mknod(parent, name, mode, dev);\n      },\n      create(path, mode) {\n        mode = mode !== undefined ? mode : 438 /* 0666 */;\n        mode &= 4095;\n        mode |= 32768;\n        return FS.mknod(path, mode, 0);\n      },\n      mkdir(path, mode) {\n        mode = mode !== undefined ? mode : 511 /* 0777 */;\n        mode &= 511 | 512;\n        mode |= 16384;\n        return FS.mknod(path, mode, 0);\n      },\n      mkdirTree(path, mode) {\n        var dirs = path.split('/');\n        var d = '';\n        for (var i = 0; i < dirs.length; ++i) {\n          if (!dirs[i]) continue;\n          d += '/' + dirs[i];\n          try {\n            FS.mkdir(d, mode);\n          } catch (e) {\n            if (e.errno != 20) throw e;\n          }\n        }\n      },\n      mkdev(path, mode, dev) {\n        if (typeof dev == 'undefined') {\n          dev = mode;\n          mode = 438 /* 0666 */;\n        }\n        mode |= 8192;\n        return FS.mknod(path, mode, dev);\n      },\n      symlink(oldpath, newpath) {\n        if (!PATH_FS.resolve(oldpath)) {\n          throw new FS.ErrnoError(44);\n        }\n        var lookup = FS.lookupPath(newpath, {\n          parent: true\n        });\n        var parent = lookup.node;\n        if (!parent) {\n          throw new FS.ErrnoError(44);\n        }\n        var newname = PATH.basename(newpath);\n        var errCode = FS.mayCreate(parent, newname);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.symlink) {\n          throw new FS.ErrnoError(63);\n        }\n        return parent.node_ops.symlink(parent, newname, oldpath);\n      },\n      rename(old_path, new_path) {\n        var old_dirname = PATH.dirname(old_path);\n        var new_dirname = PATH.dirname(new_path);\n        var old_name = PATH.basename(old_path);\n        var new_name = PATH.basename(new_path);\n        // parents must exist\n        var lookup, old_dir, new_dir;\n\n        // let the errors from non existent directories percolate up\n        lookup = FS.lookupPath(old_path, {\n          parent: true\n        });\n        old_dir = lookup.node;\n        lookup = FS.lookupPath(new_path, {\n          parent: true\n        });\n        new_dir = lookup.node;\n        if (!old_dir || !new_dir) throw new FS.ErrnoError(44);\n        // need to be part of the same mount\n        if (old_dir.mount !== new_dir.mount) {\n          throw new FS.ErrnoError(75);\n        }\n        // source must exist\n        var old_node = FS.lookupNode(old_dir, old_name);\n        // old path should not be an ancestor of the new path\n        var relative = PATH_FS.relative(old_path, new_dirname);\n        if (relative.charAt(0) !== '.') {\n          throw new FS.ErrnoError(28);\n        }\n        // new path should not be an ancestor of the old path\n        relative = PATH_FS.relative(new_path, old_dirname);\n        if (relative.charAt(0) !== '.') {\n          throw new FS.ErrnoError(55);\n        }\n        // see if the new path already exists\n        var new_node;\n        try {\n          new_node = FS.lookupNode(new_dir, new_name);\n        } catch (e) {\n          // not fatal\n        }\n        // early out if nothing needs to change\n        if (old_node === new_node) {\n          return;\n        }\n        // we'll need to delete the old entry\n        var isdir = FS.isDir(old_node.mode);\n        var errCode = FS.mayDelete(old_dir, old_name, isdir);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        // need delete permissions if we'll be overwriting.\n        // need create permissions if new doesn't already exist.\n        errCode = new_node ? FS.mayDelete(new_dir, new_name, isdir) : FS.mayCreate(new_dir, new_name);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!old_dir.node_ops.rename) {\n          throw new FS.ErrnoError(63);\n        }\n        if (FS.isMountpoint(old_node) || new_node && FS.isMountpoint(new_node)) {\n          throw new FS.ErrnoError(10);\n        }\n        // if we are going to change the parent, check write permissions\n        if (new_dir !== old_dir) {\n          errCode = FS.nodePermissions(old_dir, 'w');\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n        }\n        // remove the node from the lookup hash\n        FS.hashRemoveNode(old_node);\n        // do the underlying fs rename\n        try {\n          old_dir.node_ops.rename(old_node, new_dir, new_name);\n          // update old node (we do this here to avoid each backend \n          // needing to)\n          old_node.parent = new_dir;\n        } catch (e) {\n          throw e;\n        } finally {\n          // add the node back to the hash (in case node_ops.rename\n          // changed its name)\n          FS.hashAddNode(old_node);\n        }\n      },\n      rmdir(path) {\n        var lookup = FS.lookupPath(path, {\n          parent: true\n        });\n        var parent = lookup.node;\n        var name = PATH.basename(path);\n        var node = FS.lookupNode(parent, name);\n        var errCode = FS.mayDelete(parent, name, true);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.rmdir) {\n          throw new FS.ErrnoError(63);\n        }\n        if (FS.isMountpoint(node)) {\n          throw new FS.ErrnoError(10);\n        }\n        parent.node_ops.rmdir(parent, name);\n        FS.destroyNode(node);\n      },\n      readdir(path) {\n        var lookup = FS.lookupPath(path, {\n          follow: true\n        });\n        var node = lookup.node;\n        if (!node.node_ops.readdir) {\n          throw new FS.ErrnoError(54);\n        }\n        return node.node_ops.readdir(node);\n      },\n      unlink(path) {\n        var lookup = FS.lookupPath(path, {\n          parent: true\n        });\n        var parent = lookup.node;\n        if (!parent) {\n          throw new FS.ErrnoError(44);\n        }\n        var name = PATH.basename(path);\n        var node = FS.lookupNode(parent, name);\n        var errCode = FS.mayDelete(parent, name, false);\n        if (errCode) {\n          // According to POSIX, we should map EISDIR to EPERM, but\n          // we instead do what Linux does (and we must, as we use\n          // the musl linux libc).\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.unlink) {\n          throw new FS.ErrnoError(63);\n        }\n        if (FS.isMountpoint(node)) {\n          throw new FS.ErrnoError(10);\n        }\n        parent.node_ops.unlink(parent, name);\n        FS.destroyNode(node);\n      },\n      readlink(path) {\n        var lookup = FS.lookupPath(path);\n        var link = lookup.node;\n        if (!link) {\n          throw new FS.ErrnoError(44);\n        }\n        if (!link.node_ops.readlink) {\n          throw new FS.ErrnoError(28);\n        }\n        return PATH_FS.resolve(FS.getPath(link.parent), link.node_ops.readlink(link));\n      },\n      stat(path, dontFollow) {\n        var lookup = FS.lookupPath(path, {\n          follow: !dontFollow\n        });\n        var node = lookup.node;\n        if (!node) {\n          throw new FS.ErrnoError(44);\n        }\n        if (!node.node_ops.getattr) {\n          throw new FS.ErrnoError(63);\n        }\n        return node.node_ops.getattr(node);\n      },\n      lstat(path) {\n        return FS.stat(path, true);\n      },\n      chmod(path, mode, dontFollow) {\n        var node;\n        if (typeof path == 'string') {\n          var lookup = FS.lookupPath(path, {\n            follow: !dontFollow\n          });\n          node = lookup.node;\n        } else {\n          node = path;\n        }\n        if (!node.node_ops.setattr) {\n          throw new FS.ErrnoError(63);\n        }\n        node.node_ops.setattr(node, {\n          mode: mode & 4095 | node.mode & ~4095,\n          timestamp: Date.now()\n        });\n      },\n      lchmod(path, mode) {\n        FS.chmod(path, mode, true);\n      },\n      fchmod(fd, mode) {\n        var stream = FS.getStreamChecked(fd);\n        FS.chmod(stream.node, mode);\n      },\n      chown(path, uid, gid, dontFollow) {\n        var node;\n        if (typeof path == 'string') {\n          var lookup = FS.lookupPath(path, {\n            follow: !dontFollow\n          });\n          node = lookup.node;\n        } else {\n          node = path;\n        }\n        if (!node.node_ops.setattr) {\n          throw new FS.ErrnoError(63);\n        }\n        node.node_ops.setattr(node, {\n          timestamp: Date.now()\n          // we ignore the uid / gid for now\n        });\n      },\n      lchown(path, uid, gid) {\n        FS.chown(path, uid, gid, true);\n      },\n      fchown(fd, uid, gid) {\n        var stream = FS.getStreamChecked(fd);\n        FS.chown(stream.node, uid, gid);\n      },\n      truncate(path, len) {\n        if (len < 0) {\n          throw new FS.ErrnoError(28);\n        }\n        var node;\n        if (typeof path == 'string') {\n          var lookup = FS.lookupPath(path, {\n            follow: true\n          });\n          node = lookup.node;\n        } else {\n          node = path;\n        }\n        if (!node.node_ops.setattr) {\n          throw new FS.ErrnoError(63);\n        }\n        if (FS.isDir(node.mode)) {\n          throw new FS.ErrnoError(31);\n        }\n        if (!FS.isFile(node.mode)) {\n          throw new FS.ErrnoError(28);\n        }\n        var errCode = FS.nodePermissions(node, 'w');\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        node.node_ops.setattr(node, {\n          size: len,\n          timestamp: Date.now()\n        });\n      },\n      ftruncate(fd, len) {\n        var stream = FS.getStreamChecked(fd);\n        if ((stream.flags & 2097155) === 0) {\n          throw new FS.ErrnoError(28);\n        }\n        FS.truncate(stream.node, len);\n      },\n      utime(path, atime, mtime) {\n        var lookup = FS.lookupPath(path, {\n          follow: true\n        });\n        var node = lookup.node;\n        node.node_ops.setattr(node, {\n          timestamp: Math.max(atime, mtime)\n        });\n      },\n      open(path, flags, mode) {\n        if (path === \"\") {\n          throw new FS.ErrnoError(44);\n        }\n        flags = typeof flags == 'string' ? FS_modeStringToFlags(flags) : flags;\n        if (flags & 64) {\n          mode = typeof mode == 'undefined' ? 438 /* 0666 */ : mode;\n          mode = mode & 4095 | 32768;\n        } else {\n          mode = 0;\n        }\n        var node;\n        if (typeof path == 'object') {\n          node = path;\n        } else {\n          path = PATH.normalize(path);\n          try {\n            var lookup = FS.lookupPath(path, {\n              follow: !(flags & 131072)\n            });\n            node = lookup.node;\n          } catch (e) {\n            // ignore\n          }\n        }\n        // perhaps we need to create the node\n        var created = false;\n        if (flags & 64) {\n          if (node) {\n            // if O_CREAT and O_EXCL are set, error out if the node already exists\n            if (flags & 128) {\n              throw new FS.ErrnoError(20);\n            }\n          } else {\n            // node doesn't exist, try to create it\n            node = FS.mknod(path, mode, 0);\n            created = true;\n          }\n        }\n        if (!node) {\n          throw new FS.ErrnoError(44);\n        }\n        // can't truncate a device\n        if (FS.isChrdev(node.mode)) {\n          flags &= ~512;\n        }\n        // if asked only for a directory, then this must be one\n        if (flags & 65536 && !FS.isDir(node.mode)) {\n          throw new FS.ErrnoError(54);\n        }\n        // check permissions, if this is not a file we just created now (it is ok to\n        // create and write to a file with read-only permissions; it is read-only\n        // for later use)\n        if (!created) {\n          var errCode = FS.mayOpen(node, flags);\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n        }\n        // do truncation if necessary\n        if (flags & 512 && !created) {\n          FS.truncate(node, 0);\n        }\n        // we've already handled these, don't pass down to the underlying vfs\n        flags &= ~(128 | 512 | 131072);\n\n        // register the stream with the filesystem\n        var stream = FS.createStream({\n          node,\n          path: FS.getPath(node),\n          // we want the absolute path to the node\n          flags,\n          seekable: true,\n          position: 0,\n          stream_ops: node.stream_ops,\n          // used by the file family libc calls (fopen, fwrite, ferror, etc.)\n          ungotten: [],\n          error: false\n        });\n        // call the new stream's open function\n        if (stream.stream_ops.open) {\n          stream.stream_ops.open(stream);\n        }\n        if (Module['logReadFiles'] && !(flags & 1)) {\n          if (!(path in FS.readFiles)) {\n            FS.readFiles[path] = 1;\n          }\n        }\n        return stream;\n      },\n      close(stream) {\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if (stream.getdents) stream.getdents = null; // free readdir state\n        try {\n          if (stream.stream_ops.close) {\n            stream.stream_ops.close(stream);\n          }\n        } catch (e) {\n          throw e;\n        } finally {\n          FS.closeStream(stream.fd);\n        }\n        stream.fd = null;\n      },\n      isClosed(stream) {\n        return stream.fd === null;\n      },\n      llseek(stream, offset, whence) {\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if (!stream.seekable || !stream.stream_ops.llseek) {\n          throw new FS.ErrnoError(70);\n        }\n        if (whence != 0 && whence != 1 && whence != 2) {\n          throw new FS.ErrnoError(28);\n        }\n        stream.position = stream.stream_ops.llseek(stream, offset, whence);\n        stream.ungotten = [];\n        return stream.position;\n      },\n      read(stream, buffer, offset, length, position) {\n        assert(offset >= 0);\n        if (length < 0 || position < 0) {\n          throw new FS.ErrnoError(28);\n        }\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if ((stream.flags & 2097155) === 1) {\n          throw new FS.ErrnoError(8);\n        }\n        if (FS.isDir(stream.node.mode)) {\n          throw new FS.ErrnoError(31);\n        }\n        if (!stream.stream_ops.read) {\n          throw new FS.ErrnoError(28);\n        }\n        var seeking = typeof position != 'undefined';\n        if (!seeking) {\n          position = stream.position;\n        } else if (!stream.seekable) {\n          throw new FS.ErrnoError(70);\n        }\n        var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);\n        if (!seeking) stream.position += bytesRead;\n        return bytesRead;\n      },\n      write(stream, buffer, offset, length, position, canOwn) {\n        assert(offset >= 0);\n        if (length < 0 || position < 0) {\n          throw new FS.ErrnoError(28);\n        }\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if ((stream.flags & 2097155) === 0) {\n          throw new FS.ErrnoError(8);\n        }\n        if (FS.isDir(stream.node.mode)) {\n          throw new FS.ErrnoError(31);\n        }\n        if (!stream.stream_ops.write) {\n          throw new FS.ErrnoError(28);\n        }\n        if (stream.seekable && stream.flags & 1024) {\n          // seek to the end before writing in append mode\n          FS.llseek(stream, 0, 2);\n        }\n        var seeking = typeof position != 'undefined';\n        if (!seeking) {\n          position = stream.position;\n        } else if (!stream.seekable) {\n          throw new FS.ErrnoError(70);\n        }\n        var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);\n        if (!seeking) stream.position += bytesWritten;\n        return bytesWritten;\n      },\n      allocate(stream, offset, length) {\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if (offset < 0 || length <= 0) {\n          throw new FS.ErrnoError(28);\n        }\n        if ((stream.flags & 2097155) === 0) {\n          throw new FS.ErrnoError(8);\n        }\n        if (!FS.isFile(stream.node.mode) && !FS.isDir(stream.node.mode)) {\n          throw new FS.ErrnoError(43);\n        }\n        if (!stream.stream_ops.allocate) {\n          throw new FS.ErrnoError(138);\n        }\n        stream.stream_ops.allocate(stream, offset, length);\n      },\n      mmap(stream, length, position, prot, flags) {\n        // User requests writing to file (prot & PROT_WRITE != 0).\n        // Checking if we have permissions to write to the file unless\n        // MAP_PRIVATE flag is set. According to POSIX spec it is possible\n        // to write to file opened in read-only mode with MAP_PRIVATE flag,\n        // as all modifications will be visible only in the memory of\n        // the current process.\n        if ((prot & 2) !== 0 && (flags & 2) === 0 && (stream.flags & 2097155) !== 2) {\n          throw new FS.ErrnoError(2);\n        }\n        if ((stream.flags & 2097155) === 1) {\n          throw new FS.ErrnoError(2);\n        }\n        if (!stream.stream_ops.mmap) {\n          throw new FS.ErrnoError(43);\n        }\n        if (!length) {\n          throw new FS.ErrnoError(28);\n        }\n        return stream.stream_ops.mmap(stream, length, position, prot, flags);\n      },\n      msync(stream, buffer, offset, length, mmapFlags) {\n        assert(offset >= 0);\n        if (!stream.stream_ops.msync) {\n          return 0;\n        }\n        return stream.stream_ops.msync(stream, buffer, offset, length, mmapFlags);\n      },\n      ioctl(stream, cmd, arg) {\n        if (!stream.stream_ops.ioctl) {\n          throw new FS.ErrnoError(59);\n        }\n        return stream.stream_ops.ioctl(stream, cmd, arg);\n      },\n      readFile(path, opts = {}) {\n        opts.flags = opts.flags || 0;\n        opts.encoding = opts.encoding || 'binary';\n        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {\n          throw new Error(`Invalid encoding type \"${opts.encoding}\"`);\n        }\n        var ret;\n        var stream = FS.open(path, opts.flags);\n        var stat = FS.stat(path);\n        var length = stat.size;\n        var buf = new Uint8Array(length);\n        FS.read(stream, buf, 0, length, 0);\n        if (opts.encoding === 'utf8') {\n          ret = UTF8ArrayToString(buf);\n        } else if (opts.encoding === 'binary') {\n          ret = buf;\n        }\n        FS.close(stream);\n        return ret;\n      },\n      writeFile(path, data, opts = {}) {\n        opts.flags = opts.flags || 577;\n        var stream = FS.open(path, opts.flags, opts.mode);\n        if (typeof data == 'string') {\n          var buf = new Uint8Array(lengthBytesUTF8(data) + 1);\n          var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);\n          FS.write(stream, buf, 0, actualNumBytes, undefined, opts.canOwn);\n        } else if (ArrayBuffer.isView(data)) {\n          FS.write(stream, data, 0, data.byteLength, undefined, opts.canOwn);\n        } else {\n          throw new Error('Unsupported data type');\n        }\n        FS.close(stream);\n      },\n      cwd: () => FS.currentPath,\n      chdir(path) {\n        var lookup = FS.lookupPath(path, {\n          follow: true\n        });\n        if (lookup.node === null) {\n          throw new FS.ErrnoError(44);\n        }\n        if (!FS.isDir(lookup.node.mode)) {\n          throw new FS.ErrnoError(54);\n        }\n        var errCode = FS.nodePermissions(lookup.node, 'x');\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        FS.currentPath = lookup.path;\n      },\n      createDefaultDirectories() {\n        FS.mkdir('/tmp');\n        FS.mkdir('/home');\n        FS.mkdir('/home/web_user');\n      },\n      createDefaultDevices() {\n        // create /dev\n        FS.mkdir('/dev');\n        // setup /dev/null\n        FS.registerDevice(FS.makedev(1, 3), {\n          read: () => 0,\n          write: (stream, buffer, offset, length, pos) => length\n        });\n        FS.mkdev('/dev/null', FS.makedev(1, 3));\n        // setup /dev/tty and /dev/tty1\n        // stderr needs to print output using err() rather than out()\n        // so we register a second tty just for it.\n        TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);\n        TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);\n        FS.mkdev('/dev/tty', FS.makedev(5, 0));\n        FS.mkdev('/dev/tty1', FS.makedev(6, 0));\n        // setup /dev/[u]random\n        // use a buffer to avoid overhead of individual crypto calls per byte\n        var randomBuffer = new Uint8Array(1024),\n          randomLeft = 0;\n        var randomByte = () => {\n          if (randomLeft === 0) {\n            randomLeft = randomFill(randomBuffer).byteLength;\n          }\n          return randomBuffer[--randomLeft];\n        };\n        FS.createDevice('/dev', 'random', randomByte);\n        FS.createDevice('/dev', 'urandom', randomByte);\n        // we're not going to emulate the actual shm device,\n        // just create the tmp dirs that reside in it commonly\n        FS.mkdir('/dev/shm');\n        FS.mkdir('/dev/shm/tmp');\n      },\n      createSpecialDirectories() {\n        // create /proc/self/fd which allows /proc/self/fd/6 => readlink gives the\n        // name of the stream for fd 6 (see test_unistd_ttyname)\n        FS.mkdir('/proc');\n        var proc_self = FS.mkdir('/proc/self');\n        FS.mkdir('/proc/self/fd');\n        FS.mount({\n          mount() {\n            var node = FS.createNode(proc_self, 'fd', 16384 | 511 /* 0777 */, 73);\n            node.node_ops = {\n              lookup(parent, name) {\n                var fd = +name;\n                var stream = FS.getStreamChecked(fd);\n                var ret = {\n                  parent: null,\n                  mount: {\n                    mountpoint: 'fake'\n                  },\n                  node_ops: {\n                    readlink: () => stream.path\n                  }\n                };\n                ret.parent = ret; // make it look like a simple root node\n                return ret;\n              }\n            };\n            return node;\n          }\n        }, {}, '/proc/self/fd');\n      },\n      createStandardStreams(input, output, error) {\n        // TODO deprecate the old functionality of a single\n        // input / output callback and that utilizes FS.createDevice\n        // and instead require a unique set of stream ops\n\n        // by default, we symlink the standard streams to the\n        // default tty devices. however, if the standard streams\n        // have been overwritten we create a unique device for\n        // them instead.\n        if (input) {\n          FS.createDevice('/dev', 'stdin', input);\n        } else {\n          FS.symlink('/dev/tty', '/dev/stdin');\n        }\n        if (output) {\n          FS.createDevice('/dev', 'stdout', null, output);\n        } else {\n          FS.symlink('/dev/tty', '/dev/stdout');\n        }\n        if (error) {\n          FS.createDevice('/dev', 'stderr', null, error);\n        } else {\n          FS.symlink('/dev/tty1', '/dev/stderr');\n        }\n\n        // open default streams for the stdin, stdout and stderr devices\n        var stdin = FS.open('/dev/stdin', 0);\n        var stdout = FS.open('/dev/stdout', 1);\n        var stderr = FS.open('/dev/stderr', 1);\n        assert(stdin.fd === 0, `invalid handle for stdin (${stdin.fd})`);\n        assert(stdout.fd === 1, `invalid handle for stdout (${stdout.fd})`);\n        assert(stderr.fd === 2, `invalid handle for stderr (${stderr.fd})`);\n      },\n      staticInit() {\n        // Some errors may happen quite a bit, to avoid overhead we reuse them (and suffer a lack of stack info)\n        [44].forEach(code => {\n          FS.genericErrors[code] = new FS.ErrnoError(code);\n          FS.genericErrors[code].stack = '<generic error, no stack>';\n        });\n        FS.nameTable = new Array(4096);\n        FS.mount(MEMFS, {}, '/');\n        FS.createDefaultDirectories();\n        FS.createDefaultDevices();\n        FS.createSpecialDirectories();\n        FS.filesystems = {\n          'MEMFS': MEMFS\n        };\n      },\n      init(input, output, error) {\n        assert(!FS.initialized, 'FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)');\n        FS.initialized = true;\n\n        // Allow Module.stdin etc. to provide defaults, if none explicitly passed to us here\n        input ??= Module['stdin'];\n        output ??= Module['stdout'];\n        error ??= Module['stderr'];\n        FS.createStandardStreams(input, output, error);\n      },\n      quit() {\n        FS.initialized = false;\n        // force-flush all streams, so we get musl std streams printed out\n        _fflush(0);\n        // close all of our streams\n        for (var i = 0; i < FS.streams.length; i++) {\n          var stream = FS.streams[i];\n          if (!stream) {\n            continue;\n          }\n          FS.close(stream);\n        }\n      },\n      findObject(path, dontResolveLastLink) {\n        var ret = FS.analyzePath(path, dontResolveLastLink);\n        if (!ret.exists) {\n          return null;\n        }\n        return ret.object;\n      },\n      analyzePath(path, dontResolveLastLink) {\n        // operate from within the context of the symlink's target\n        try {\n          var lookup = FS.lookupPath(path, {\n            follow: !dontResolveLastLink\n          });\n          path = lookup.path;\n        } catch (e) {}\n        var ret = {\n          isRoot: false,\n          exists: false,\n          error: 0,\n          name: null,\n          path: null,\n          object: null,\n          parentExists: false,\n          parentPath: null,\n          parentObject: null\n        };\n        try {\n          var lookup = FS.lookupPath(path, {\n            parent: true\n          });\n          ret.parentExists = true;\n          ret.parentPath = lookup.path;\n          ret.parentObject = lookup.node;\n          ret.name = PATH.basename(path);\n          lookup = FS.lookupPath(path, {\n            follow: !dontResolveLastLink\n          });\n          ret.exists = true;\n          ret.path = lookup.path;\n          ret.object = lookup.node;\n          ret.name = lookup.node.name;\n          ret.isRoot = lookup.path === '/';\n        } catch (e) {\n          ret.error = e.errno;\n        }\n        ;\n        return ret;\n      },\n      createPath(parent, path, canRead, canWrite) {\n        parent = typeof parent == 'string' ? parent : FS.getPath(parent);\n        var parts = path.split('/').reverse();\n        while (parts.length) {\n          var part = parts.pop();\n          if (!part) continue;\n          var current = PATH.join2(parent, part);\n          try {\n            FS.mkdir(current);\n          } catch (e) {\n            // ignore EEXIST\n          }\n          parent = current;\n        }\n        return current;\n      },\n      createFile(parent, name, properties, canRead, canWrite) {\n        var path = PATH.join2(typeof parent == 'string' ? parent : FS.getPath(parent), name);\n        var mode = FS_getMode(canRead, canWrite);\n        return FS.create(path, mode);\n      },\n      createDataFile(parent, name, data, canRead, canWrite, canOwn) {\n        var path = name;\n        if (parent) {\n          parent = typeof parent == 'string' ? parent : FS.getPath(parent);\n          path = name ? PATH.join2(parent, name) : parent;\n        }\n        var mode = FS_getMode(canRead, canWrite);\n        var node = FS.create(path, mode);\n        if (data) {\n          if (typeof data == 'string') {\n            var arr = new Array(data.length);\n            for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);\n            data = arr;\n          }\n          // make sure we can write to the file\n          FS.chmod(node, mode | 146);\n          var stream = FS.open(node, 577);\n          FS.write(stream, data, 0, data.length, 0, canOwn);\n          FS.close(stream);\n          FS.chmod(node, mode);\n        }\n      },\n      createDevice(parent, name, input, output) {\n        var path = PATH.join2(typeof parent == 'string' ? parent : FS.getPath(parent), name);\n        var mode = FS_getMode(!!input, !!output);\n        FS.createDevice.major ??= 64;\n        var dev = FS.makedev(FS.createDevice.major++, 0);\n        // Create a fake device that a set of stream ops to emulate\n        // the old behavior.\n        FS.registerDevice(dev, {\n          open(stream) {\n            stream.seekable = false;\n          },\n          close(stream) {\n            var _output$buffer;\n            // flush any pending line data\n            if (output !== null && output !== void 0 && (_output$buffer = output.buffer) !== null && _output$buffer !== void 0 && _output$buffer.length) {\n              output(10);\n            }\n          },\n          read(stream, buffer, offset, length, pos /* ignored */) {\n            var bytesRead = 0;\n            for (var i = 0; i < length; i++) {\n              var result;\n              try {\n                result = input();\n              } catch (e) {\n                throw new FS.ErrnoError(29);\n              }\n              if (result === undefined && bytesRead === 0) {\n                throw new FS.ErrnoError(6);\n              }\n              if (result === null || result === undefined) break;\n              bytesRead++;\n              buffer[offset + i] = result;\n            }\n            if (bytesRead) {\n              stream.node.timestamp = Date.now();\n            }\n            return bytesRead;\n          },\n          write(stream, buffer, offset, length, pos) {\n            for (var i = 0; i < length; i++) {\n              try {\n                output(buffer[offset + i]);\n              } catch (e) {\n                throw new FS.ErrnoError(29);\n              }\n            }\n            if (length) {\n              stream.node.timestamp = Date.now();\n            }\n            return i;\n          }\n        });\n        return FS.mkdev(path, mode, dev);\n      },\n      forceLoadFile(obj) {\n        if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;\n        if (typeof XMLHttpRequest != 'undefined') {\n          throw new Error(\"Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.\");\n        } else {\n          // Command-line.\n          try {\n            obj.contents = readBinary(obj.url);\n            obj.usedBytes = obj.contents.length;\n          } catch (e) {\n            throw new FS.ErrnoError(29);\n          }\n        }\n      },\n      createLazyFile(parent, name, url, canRead, canWrite) {\n        // Lazy chunked Uint8Array (implements get and length from Uint8Array).\n        // Actual getting is abstracted away for eventual reuse.\n        class LazyUint8Array {\n          constructor() {\n            this.lengthKnown = false;\n            this.chunks = []; // Loaded chunks. Index is the chunk number\n          }\n          get(idx) {\n            if (idx > this.length - 1 || idx < 0) {\n              return undefined;\n            }\n            var chunkOffset = idx % this.chunkSize;\n            var chunkNum = idx / this.chunkSize | 0;\n            return this.getter(chunkNum)[chunkOffset];\n          }\n          setDataGetter(getter) {\n            this.getter = getter;\n          }\n          cacheLength() {\n            // Find length\n            var xhr = new XMLHttpRequest();\n            xhr.open('HEAD', url, false);\n            xhr.send(null);\n            if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr.status);\n            var datalength = Number(xhr.getResponseHeader(\"Content-length\"));\n            var header;\n            var hasByteServing = (header = xhr.getResponseHeader(\"Accept-Ranges\")) && header === \"bytes\";\n            var usesGzip = (header = xhr.getResponseHeader(\"Content-Encoding\")) && header === \"gzip\";\n            var chunkSize = 1024 * 1024; // Chunk size in bytes\n\n            if (!hasByteServing) chunkSize = datalength;\n\n            // Function to get a range from the remote URL.\n            var doXHR = (from, to) => {\n              if (from > to) throw new Error(\"invalid range (\" + from + \", \" + to + \") or no bytes requested!\");\n              if (to > datalength - 1) throw new Error(\"only \" + datalength + \" bytes available! programmer error!\");\n\n              // TODO: Use mozResponseArrayBuffer, responseStream, etc. if available.\n              var xhr = new XMLHttpRequest();\n              xhr.open('GET', url, false);\n              if (datalength !== chunkSize) xhr.setRequestHeader(\"Range\", \"bytes=\" + from + \"-\" + to);\n\n              // Some hints to the browser that we want binary data.\n              xhr.responseType = 'arraybuffer';\n              if (xhr.overrideMimeType) {\n                xhr.overrideMimeType('text/plain; charset=x-user-defined');\n              }\n              xhr.send(null);\n              if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr.status);\n              if (xhr.response !== undefined) {\n                return new Uint8Array(/** @type{Array<number>} */xhr.response || []);\n              }\n              return intArrayFromString(xhr.responseText || '', true);\n            };\n            var lazyArray = this;\n            lazyArray.setDataGetter(chunkNum => {\n              var start = chunkNum * chunkSize;\n              var end = (chunkNum + 1) * chunkSize - 1; // including this byte\n              end = Math.min(end, datalength - 1); // if datalength-1 is selected, this is the last block\n              if (typeof lazyArray.chunks[chunkNum] == 'undefined') {\n                lazyArray.chunks[chunkNum] = doXHR(start, end);\n              }\n              if (typeof lazyArray.chunks[chunkNum] == 'undefined') throw new Error('doXHR failed!');\n              return lazyArray.chunks[chunkNum];\n            });\n            if (usesGzip || !datalength) {\n              // if the server uses gzip or doesn't supply the length, we have to download the whole file to get the (uncompressed) length\n              chunkSize = datalength = 1; // this will force getter(0)/doXHR do download the whole file\n              datalength = this.getter(0).length;\n              chunkSize = datalength;\n              out(\"LazyFiles on gzip forces download of the whole file when length is accessed\");\n            }\n            this._length = datalength;\n            this._chunkSize = chunkSize;\n            this.lengthKnown = true;\n          }\n          get length() {\n            if (!this.lengthKnown) {\n              this.cacheLength();\n            }\n            return this._length;\n          }\n          get chunkSize() {\n            if (!this.lengthKnown) {\n              this.cacheLength();\n            }\n            return this._chunkSize;\n          }\n        }\n        if (typeof XMLHttpRequest != 'undefined') {\n          if (!ENVIRONMENT_IS_WORKER) throw 'Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc';\n          var lazyArray = new LazyUint8Array();\n          var properties = {\n            isDevice: false,\n            contents: lazyArray\n          };\n        } else {\n          var properties = {\n            isDevice: false,\n            url: url\n          };\n        }\n        var node = FS.createFile(parent, name, properties, canRead, canWrite);\n        // This is a total hack, but I want to get this lazy file code out of the\n        // core of MEMFS. If we want to keep this lazy file concept I feel it should\n        // be its own thin LAZYFS proxying calls to MEMFS.\n        if (properties.contents) {\n          node.contents = properties.contents;\n        } else if (properties.url) {\n          node.contents = null;\n          node.url = properties.url;\n        }\n        // Add a function that defers querying the file size until it is asked the first time.\n        Object.defineProperties(node, {\n          usedBytes: {\n            get: function () {\n              return this.contents.length;\n            }\n          }\n        });\n        // override each stream op with one that tries to force load the lazy file first\n        var stream_ops = {};\n        var keys = Object.keys(node.stream_ops);\n        keys.forEach(key => {\n          var fn = node.stream_ops[key];\n          stream_ops[key] = (...args) => {\n            FS.forceLoadFile(node);\n            return fn(...args);\n          };\n        });\n        function writeChunks(stream, buffer, offset, length, position) {\n          var contents = stream.node.contents;\n          if (position >= contents.length) return 0;\n          var size = Math.min(contents.length - position, length);\n          assert(size >= 0);\n          if (contents.slice) {\n            // normal array\n            for (var i = 0; i < size; i++) {\n              buffer[offset + i] = contents[position + i];\n            }\n          } else {\n            for (var i = 0; i < size; i++) {\n              // LazyUint8Array from sync binary XHR\n              buffer[offset + i] = contents.get(position + i);\n            }\n          }\n          return size;\n        }\n        // use a custom read function\n        stream_ops.read = (stream, buffer, offset, length, position) => {\n          FS.forceLoadFile(node);\n          return writeChunks(stream, buffer, offset, length, position);\n        };\n        // use a custom mmap function\n        stream_ops.mmap = (stream, length, position, prot, flags) => {\n          FS.forceLoadFile(node);\n          var ptr = mmapAlloc(length);\n          if (!ptr) {\n            throw new FS.ErrnoError(48);\n          }\n          writeChunks(stream, HEAP8, ptr, length, position);\n          return {\n            ptr,\n            allocated: true\n          };\n        };\n        node.stream_ops = stream_ops;\n        return node;\n      },\n      absolutePath() {\n        abort('FS.absolutePath has been removed; use PATH_FS.resolve instead');\n      },\n      createFolder() {\n        abort('FS.createFolder has been removed; use FS.mkdir instead');\n      },\n      createLink() {\n        abort('FS.createLink has been removed; use FS.symlink instead');\n      },\n      joinPath() {\n        abort('FS.joinPath has been removed; use PATH.join instead');\n      },\n      mmapAlloc() {\n        abort('FS.mmapAlloc has been replaced by the top level function mmapAlloc');\n      },\n      standardizePath() {\n        abort('FS.standardizePath has been removed; use PATH.normalize instead');\n      }\n    };\n    var SYSCALLS = {\n      DEFAULT_POLLMASK: 5,\n      calculateAt(dirfd, path, allowEmpty) {\n        if (PATH.isAbs(path)) {\n          return path;\n        }\n        // relative path\n        var dir;\n        if (dirfd === -100) {\n          dir = FS.cwd();\n        } else {\n          var dirstream = SYSCALLS.getStreamFromFD(dirfd);\n          dir = dirstream.path;\n        }\n        if (path.length == 0) {\n          if (!allowEmpty) {\n            throw new FS.ErrnoError(44);\n            ;\n          }\n          return dir;\n        }\n        return PATH.join2(dir, path);\n      },\n      doStat(func, path, buf) {\n        var stat = func(path);\n        HEAP32[buf >> 2] = stat.dev;\n        HEAP32[buf + 4 >> 2] = stat.mode;\n        HEAPU32[buf + 8 >> 2] = stat.nlink;\n        HEAP32[buf + 12 >> 2] = stat.uid;\n        HEAP32[buf + 16 >> 2] = stat.gid;\n        HEAP32[buf + 20 >> 2] = stat.rdev;\n        tempI64 = [stat.size >>> 0, (tempDouble = stat.size, +Math.abs(tempDouble) >= 1.0 ? tempDouble > 0.0 ? +Math.floor(tempDouble / 4294967296.0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296.0) >>> 0 : 0)], HEAP32[buf + 24 >> 2] = tempI64[0], HEAP32[buf + 28 >> 2] = tempI64[1];\n        HEAP32[buf + 32 >> 2] = 4096;\n        HEAP32[buf + 36 >> 2] = stat.blocks;\n        var atime = stat.atime.getTime();\n        var mtime = stat.mtime.getTime();\n        var ctime = stat.ctime.getTime();\n        tempI64 = [Math.floor(atime / 1000) >>> 0, (tempDouble = Math.floor(atime / 1000), +Math.abs(tempDouble) >= 1.0 ? tempDouble > 0.0 ? +Math.floor(tempDouble / 4294967296.0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296.0) >>> 0 : 0)], HEAP32[buf + 40 >> 2] = tempI64[0], HEAP32[buf + 44 >> 2] = tempI64[1];\n        HEAPU32[buf + 48 >> 2] = atime % 1000 * 1000 * 1000;\n        tempI64 = [Math.floor(mtime / 1000) >>> 0, (tempDouble = Math.floor(mtime / 1000), +Math.abs(tempDouble) >= 1.0 ? tempDouble > 0.0 ? +Math.floor(tempDouble / 4294967296.0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296.0) >>> 0 : 0)], HEAP32[buf + 56 >> 2] = tempI64[0], HEAP32[buf + 60 >> 2] = tempI64[1];\n        HEAPU32[buf + 64 >> 2] = mtime % 1000 * 1000 * 1000;\n        tempI64 = [Math.floor(ctime / 1000) >>> 0, (tempDouble = Math.floor(ctime / 1000), +Math.abs(tempDouble) >= 1.0 ? tempDouble > 0.0 ? +Math.floor(tempDouble / 4294967296.0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296.0) >>> 0 : 0)], HEAP32[buf + 72 >> 2] = tempI64[0], HEAP32[buf + 76 >> 2] = tempI64[1];\n        HEAPU32[buf + 80 >> 2] = ctime % 1000 * 1000 * 1000;\n        tempI64 = [stat.ino >>> 0, (tempDouble = stat.ino, +Math.abs(tempDouble) >= 1.0 ? tempDouble > 0.0 ? +Math.floor(tempDouble / 4294967296.0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296.0) >>> 0 : 0)], HEAP32[buf + 88 >> 2] = tempI64[0], HEAP32[buf + 92 >> 2] = tempI64[1];\n        return 0;\n      },\n      doMsync(addr, stream, len, flags, offset) {\n        if (!FS.isFile(stream.node.mode)) {\n          throw new FS.ErrnoError(43);\n        }\n        if (flags & 2) {\n          // MAP_PRIVATE calls need not to be synced back to underlying fs\n          return 0;\n        }\n        var buffer = HEAPU8.slice(addr, addr + len);\n        FS.msync(stream, buffer, offset, len, flags);\n      },\n      getStreamFromFD(fd) {\n        var stream = FS.getStreamChecked(fd);\n        return stream;\n      },\n      varargs: undefined,\n      getStr(ptr) {\n        var ret = UTF8ToString(ptr);\n        return ret;\n      }\n    };\n    function _fd_close(fd) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        FS.close(stream);\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return e.errno;\n      }\n    }\n\n    /** @param {number=} offset */\n    var doReadv = (stream, iov, iovcnt, offset) => {\n      var ret = 0;\n      for (var i = 0; i < iovcnt; i++) {\n        var ptr = HEAPU32[iov >> 2];\n        var len = HEAPU32[iov + 4 >> 2];\n        iov += 8;\n        var curr = FS.read(stream, HEAP8, ptr, len, offset);\n        if (curr < 0) return -1;\n        ret += curr;\n        if (curr < len) break; // nothing more to read\n        if (typeof offset != 'undefined') {\n          offset += curr;\n        }\n      }\n      return ret;\n    };\n    function _fd_read(fd, iov, iovcnt, pnum) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        var num = doReadv(stream, iov, iovcnt);\n        HEAPU32[pnum >> 2] = num;\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return e.errno;\n      }\n    }\n    var convertI32PairToI53Checked = (lo, hi) => {\n      assert(lo == lo >>> 0 || lo == (lo | 0)); // lo should either be a i32 or a u32\n      assert(hi === (hi | 0)); // hi should be a i32\n      return hi + 0x200000 >>> 0 < 0x400001 - !!lo ? (lo >>> 0) + hi * 4294967296 : NaN;\n    };\n    function _fd_seek(fd, offset_low, offset_high, whence, newOffset) {\n      var offset = convertI32PairToI53Checked(offset_low, offset_high);\n      try {\n        if (isNaN(offset)) return 61;\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        FS.llseek(stream, offset, whence);\n        tempI64 = [stream.position >>> 0, (tempDouble = stream.position, +Math.abs(tempDouble) >= 1.0 ? tempDouble > 0.0 ? +Math.floor(tempDouble / 4294967296.0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296.0) >>> 0 : 0)], HEAP32[newOffset >> 2] = tempI64[0], HEAP32[newOffset + 4 >> 2] = tempI64[1];\n        if (stream.getdents && offset === 0 && whence === 0) stream.getdents = null; // reset readdir state\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return e.errno;\n      }\n      ;\n    }\n\n    /** @param {number=} offset */\n    var doWritev = (stream, iov, iovcnt, offset) => {\n      var ret = 0;\n      for (var i = 0; i < iovcnt; i++) {\n        var ptr = HEAPU32[iov >> 2];\n        var len = HEAPU32[iov + 4 >> 2];\n        iov += 8;\n        var curr = FS.write(stream, HEAP8, ptr, len, offset);\n        if (curr < 0) return -1;\n        ret += curr;\n        if (curr < len) {\n          // No more space to write.\n          break;\n        }\n        if (typeof offset != 'undefined') {\n          offset += curr;\n        }\n      }\n      return ret;\n    };\n    function _fd_write(fd, iov, iovcnt, pnum) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        var num = doWritev(stream, iov, iovcnt);\n        HEAPU32[pnum >> 2] = num;\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\n        return e.errno;\n      }\n    }\n    var runtimeKeepaliveCounter = 0;\n    var keepRuntimeAlive = () => noExitRuntime || runtimeKeepaliveCounter > 0;\n    var _proc_exit = code => {\n      EXITSTATUS = code;\n      if (!keepRuntimeAlive()) {\n        var _Module$onExit;\n        (_Module$onExit = Module['onExit']) === null || _Module$onExit === void 0 ? void 0 : _Module$onExit.call(Module, code);\n        ABORT = true;\n      }\n      quit_(code, new ExitStatus(code));\n    };\n\n    /** @param {boolean|number=} implicit */\n    var exitJS = (status, implicit) => {\n      EXITSTATUS = status;\n      checkUnflushedContent();\n\n      // if exit() was called explicitly, warn the user if the runtime isn't actually being shut down\n      if (keepRuntimeAlive() && !implicit) {\n        var msg = `program exited (with status: ${status}), but keepRuntimeAlive() is set (counter=${runtimeKeepaliveCounter}) due to an async operation, so halting execution but not exiting the runtime or preventing further async execution (you can use emscripten_force_exit, if you want to force a true shutdown)`;\n        readyPromiseReject(msg);\n        err(msg);\n      }\n      _proc_exit(status);\n    };\n    var handleException = e => {\n      // Certain exception types we do not treat as errors since they are used for\n      // internal control flow.\n      // 1. ExitStatus, which is thrown by exit()\n      // 2. \"unwind\", which is thrown by emscripten_unwind_to_js_event_loop() and others\n      //    that wish to return to JS event loop.\n      if (e instanceof ExitStatus || e == 'unwind') {\n        return EXITSTATUS;\n      }\n      checkStackCookie();\n      if (e instanceof WebAssembly.RuntimeError) {\n        if (_emscripten_stack_get_current() <= 0) {\n          err('Stack overflow detected.  You can try increasing -sSTACK_SIZE (currently set to 65536)');\n        }\n      }\n      quit_(1, e);\n    };\n    FS.createPreloadedFile = FS_createPreloadedFile;\n    FS.staticInit();\n    // Set module methods based on EXPORTED_RUNTIME_METHODS\n    ;\n    function checkIncomingModuleAPI() {\n      ignoredModuleProp('fetchSettings');\n    }\n    var wasmImports = {\n      /** @export */\n      _emscripten_memcpy_js: __emscripten_memcpy_js,\n      /** @export */\n      emscripten_resize_heap: _emscripten_resize_heap,\n      /** @export */\n      fd_close: _fd_close,\n      /** @export */\n      fd_read: _fd_read,\n      /** @export */\n      fd_seek: _fd_seek,\n      /** @export */\n      fd_write: _fd_write\n    };\n    var wasmExports = createWasm();\n    var ___wasm_call_ctors = createExportWrapper('__wasm_call_ctors', 0);\n    var _main = Module['_main'] = createExportWrapper('main', 2);\n    var _fflush = createExportWrapper('fflush', 1);\n    var _strerror = createExportWrapper('strerror', 1);\n    var _emscripten_stack_init = () => (_emscripten_stack_init = wasmExports['emscripten_stack_init'])();\n    var _emscripten_stack_get_free = () => (_emscripten_stack_get_free = wasmExports['emscripten_stack_get_free'])();\n    var _emscripten_stack_get_base = () => (_emscripten_stack_get_base = wasmExports['emscripten_stack_get_base'])();\n    var _emscripten_stack_get_end = () => (_emscripten_stack_get_end = wasmExports['emscripten_stack_get_end'])();\n    var __emscripten_stack_restore = a0 => (__emscripten_stack_restore = wasmExports['_emscripten_stack_restore'])(a0);\n    var __emscripten_stack_alloc = a0 => (__emscripten_stack_alloc = wasmExports['_emscripten_stack_alloc'])(a0);\n    var _emscripten_stack_get_current = () => (_emscripten_stack_get_current = wasmExports['emscripten_stack_get_current'])();\n    var dynCall_jiji = Module['dynCall_jiji'] = createExportWrapper('dynCall_jiji', 5);\n\n    // include: postamble.js\n    // === Auto-generated postamble setup entry stuff ===\n\n    var missingLibrarySymbols = ['writeI53ToI64', 'writeI53ToI64Clamped', 'writeI53ToI64Signaling', 'writeI53ToU64Clamped', 'writeI53ToU64Signaling', 'readI53FromI64', 'readI53FromU64', 'convertI32PairToI53', 'convertU32PairToI53', 'stackAlloc', 'getTempRet0', 'setTempRet0', 'growMemory', 'inetPton4', 'inetNtop4', 'inetPton6', 'inetNtop6', 'readSockaddr', 'writeSockaddr', 'emscriptenLog', 'readEmAsmArgs', 'jstoi_q', 'getExecutableName', 'listenOnce', 'autoResumeAudioContext', 'dynCallLegacy', 'getDynCaller', 'dynCall', 'runtimeKeepalivePush', 'runtimeKeepalivePop', 'callUserCallback', 'maybeExit', 'asmjsMangle', 'HandleAllocator', 'getNativeTypeSize', 'STACK_SIZE', 'STACK_ALIGN', 'POINTER_SIZE', 'ASSERTIONS', 'getCFunc', 'ccall', 'cwrap', 'uleb128Encode', 'sigToWasmTypes', 'generateFuncType', 'convertJsFunctionToWasm', 'getEmptyTableSlot', 'updateTableMap', 'getFunctionAddress', 'addFunction', 'removeFunction', 'reallyNegative', 'unSign', 'strLen', 'reSign', 'formatString', 'stringToUTF8', 'intArrayToString', 'AsciiToString', 'stringToAscii', 'UTF16ToString', 'stringToUTF16', 'lengthBytesUTF16', 'UTF32ToString', 'stringToUTF32', 'lengthBytesUTF32', 'stringToNewUTF8', 'stringToUTF8OnStack', 'writeArrayToMemory', 'registerKeyEventCallback', 'maybeCStringToJsString', 'findEventTarget', 'getBoundingClientRect', 'fillMouseEventData', 'registerMouseEventCallback', 'registerWheelEventCallback', 'registerUiEventCallback', 'registerFocusEventCallback', 'fillDeviceOrientationEventData', 'registerDeviceOrientationEventCallback', 'fillDeviceMotionEventData', 'registerDeviceMotionEventCallback', 'screenOrientation', 'fillOrientationChangeEventData', 'registerOrientationChangeEventCallback', 'fillFullscreenChangeEventData', 'registerFullscreenChangeEventCallback', 'JSEvents_requestFullscreen', 'JSEvents_resizeCanvasForFullscreen', 'registerRestoreOldStyle', 'hideEverythingExceptGivenElement', 'restoreHiddenElements', 'setLetterbox', 'softFullscreenResizeWebGLRenderTarget', 'doRequestFullscreen', 'fillPointerlockChangeEventData', 'registerPointerlockChangeEventCallback', 'registerPointerlockErrorEventCallback', 'requestPointerLock', 'fillVisibilityChangeEventData', 'registerVisibilityChangeEventCallback', 'registerTouchEventCallback', 'fillGamepadEventData', 'registerGamepadEventCallback', 'registerBeforeUnloadEventCallback', 'fillBatteryEventData', 'battery', 'registerBatteryEventCallback', 'setCanvasElementSize', 'getCanvasElementSize', 'jsStackTrace', 'getCallstack', 'convertPCtoSourceLocation', 'getEnvStrings', 'checkWasiClock', 'wasiRightsToMuslOFlags', 'wasiOFlagsToMuslOFlags', 'createDyncallWrapper', 'safeSetTimeout', 'setImmediateWrapped', 'clearImmediateWrapped', 'polyfillSetImmediate', 'registerPostMainLoop', 'registerPreMainLoop', 'getPromise', 'makePromise', 'idsToPromises', 'makePromiseCallback', 'ExceptionInfo', 'findMatchingCatch', 'Browser_asyncPrepareDataCounter', 'safeRequestAnimationFrame', 'isLeapYear', 'ydayFromDate', 'arraySum', 'addDays', 'getSocketFromFD', 'getSocketAddress', 'FS_unlink', 'FS_mkdirTree', '_setNetworkCallback', 'heapObjectForWebGLType', 'toTypedArrayIndex', 'webgl_enable_ANGLE_instanced_arrays', 'webgl_enable_OES_vertex_array_object', 'webgl_enable_WEBGL_draw_buffers', 'webgl_enable_WEBGL_multi_draw', 'webgl_enable_EXT_polygon_offset_clamp', 'webgl_enable_EXT_clip_control', 'webgl_enable_WEBGL_polygon_mode', 'emscriptenWebGLGet', 'computeUnpackAlignedImageSize', 'colorChannelsInGlTextureFormat', 'emscriptenWebGLGetTexPixelData', 'emscriptenWebGLGetUniform', 'webglGetUniformLocation', 'webglPrepareUniformLocationsBeforeFirstUse', 'webglGetLeftBracePos', 'emscriptenWebGLGetVertexAttrib', '__glGetActiveAttribOrUniform', 'writeGLArray', 'registerWebGlEventCallback', 'runAndAbortIfError', 'ALLOC_NORMAL', 'ALLOC_STACK', 'allocate', 'writeStringToMemory', 'writeAsciiToMemory', 'setErrNo', 'demangle', 'stackTrace'];\n    missingLibrarySymbols.forEach(missingLibrarySymbol);\n    var unexportedSymbols = ['run', 'addOnPreRun', 'addOnInit', 'addOnPreMain', 'addOnExit', 'addOnPostRun', 'addRunDependency', 'removeRunDependency', 'out', 'err', 'callMain', 'abort', 'wasmMemory', 'wasmExports', 'writeStackCookie', 'checkStackCookie', 'convertI32PairToI53Checked', 'stackSave', 'stackRestore', 'ptrToString', 'zeroMemory', 'exitJS', 'getHeapMax', 'abortOnCannotGrowMemory', 'ENV', 'ERRNO_CODES', 'strError', 'DNS', 'Protocols', 'Sockets', 'initRandomFill', 'randomFill', 'timers', 'warnOnce', 'readEmAsmArgsArray', 'jstoi_s', 'handleException', 'keepRuntimeAlive', 'asyncLoad', 'alignMemory', 'mmapAlloc', 'wasmTable', 'noExitRuntime', 'freeTableIndexes', 'functionsInTableMap', 'setValue', 'getValue', 'PATH', 'PATH_FS', 'UTF8Decoder', 'UTF8ArrayToString', 'UTF8ToString', 'stringToUTF8Array', 'lengthBytesUTF8', 'intArrayFromString', 'UTF16Decoder', 'JSEvents', 'specialHTMLTargets', 'findCanvasEventTarget', 'currentFullscreenStrategy', 'restoreOldWindowedStyle', 'UNWIND_CACHE', 'ExitStatus', 'doReadv', 'doWritev', 'promiseMap', 'uncaughtExceptionCount', 'exceptionLast', 'exceptionCaught', 'Browser', 'getPreloadedImageData__data', 'wget', 'MONTH_DAYS_REGULAR', 'MONTH_DAYS_LEAP', 'MONTH_DAYS_REGULAR_CUMULATIVE', 'MONTH_DAYS_LEAP_CUMULATIVE', 'SYSCALLS', 'preloadPlugins', 'FS_createPreloadedFile', 'FS_modeStringToFlags', 'FS_getMode', 'FS_stdin_getChar_buffer', 'FS_stdin_getChar', 'FS_createPath', 'FS_createDevice', 'FS_readFile', 'FS', 'FS_createDataFile', 'FS_createLazyFile', 'MEMFS', 'TTY', 'PIPEFS', 'SOCKFS', 'tempFixedLengthArray', 'miniTempWebGLFloatBuffers', 'miniTempWebGLIntBuffers', 'GL', 'AL', 'GLUT', 'EGL', 'GLEW', 'IDBStore', 'SDL', 'SDL_gfx', 'allocateUTF8', 'allocateUTF8OnStack', 'print', 'printErr'];\n    unexportedSymbols.forEach(unexportedRuntimeSymbol);\n    var calledRun;\n    var calledPrerun;\n    dependenciesFulfilled = function runCaller() {\n      // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)\n      if (!calledRun) run();\n      if (!calledRun) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled\n    };\n    function callMain() {\n      assert(runDependencies == 0, 'cannot call main when async dependencies remain! (listen on Module[\"onRuntimeInitialized\"])');\n      assert(calledPrerun, 'cannot call main without calling preRun first');\n      var entryFunction = _main;\n      var argc = 0;\n      var argv = 0;\n      try {\n        var ret = entryFunction(argc, argv);\n\n        // if we're not running an evented main loop, it's time to exit\n        exitJS(ret, /* implicit = */true);\n        return ret;\n      } catch (e) {\n        return handleException(e);\n      }\n    }\n    function stackCheckInit() {\n      // This is normally called automatically during __wasm_call_ctors but need to\n      // get these values before even running any of the ctors so we call it redundantly\n      // here.\n      _emscripten_stack_init();\n      // TODO(sbc): Move writeStackCookie to native to to avoid this.\n      writeStackCookie();\n    }\n    function run() {\n      if (runDependencies > 0) {\n        return;\n      }\n      stackCheckInit();\n      if (!calledPrerun) {\n        calledPrerun = 1;\n        preRun();\n\n        // a preRun added a dependency, run will be called later\n        if (runDependencies > 0) {\n          return;\n        }\n      }\n      function doRun() {\n        var _Module$onRuntimeInit;\n        // run may have just been called through dependencies being fulfilled just in this very frame,\n        // or while the async setStatus time below was happening\n        if (calledRun) return;\n        calledRun = 1;\n        Module['calledRun'] = 1;\n        if (ABORT) return;\n        initRuntime();\n        preMain();\n        readyPromiseResolve(Module);\n        (_Module$onRuntimeInit = Module['onRuntimeInitialized']) === null || _Module$onRuntimeInit === void 0 ? void 0 : _Module$onRuntimeInit.call(Module);\n        if (shouldRunNow) callMain();\n        postRun();\n      }\n      if (Module['setStatus']) {\n        Module['setStatus']('Running...');\n        setTimeout(() => {\n          setTimeout(() => Module['setStatus'](''), 1);\n          doRun();\n        }, 1);\n      } else {\n        doRun();\n      }\n      checkStackCookie();\n    }\n    function checkUnflushedContent() {\n      // Compiler settings do not allow exiting the runtime, so flushing\n      // the streams is not possible. but in ASSERTIONS mode we check\n      // if there was something to flush, and if so tell the user they\n      // should request that the runtime be exitable.\n      // Normally we would not even include flush() at all, but in ASSERTIONS\n      // builds we do so just for this check, and here we see if there is any\n      // content to flush, that is, we check if there would have been\n      // something a non-ASSERTIONS build would have not seen.\n      // How we flush the streams depends on whether we are in SYSCALLS_REQUIRE_FILESYSTEM=0\n      // mode (which has its own special function for this; otherwise, all\n      // the code is inside libc)\n      var oldOut = out;\n      var oldErr = err;\n      var has = false;\n      out = err = x => {\n        has = true;\n      };\n      try {\n        // it doesn't matter if it fails\n        _fflush(0);\n        // also flush in the JS FS layer\n        ['stdout', 'stderr'].forEach(name => {\n          var _tty$output;\n          var info = FS.analyzePath('/dev/' + name);\n          if (!info) return;\n          var stream = info.object;\n          var rdev = stream.rdev;\n          var tty = TTY.ttys[rdev];\n          if (tty !== null && tty !== void 0 && (_tty$output = tty.output) !== null && _tty$output !== void 0 && _tty$output.length) {\n            has = true;\n          }\n        });\n      } catch (e) {}\n      out = oldOut;\n      err = oldErr;\n      if (has) {\n        warnOnce('stdio streams had content in them that was not flushed. you should set EXIT_RUNTIME to 1 (see the Emscripten FAQ), or make sure to emit a newline when you printf etc.');\n      }\n    }\n    if (Module['preInit']) {\n      if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];\n      while (Module['preInit'].length > 0) {\n        Module['preInit'].pop()();\n      }\n    }\n\n    // shouldRunNow refers to calling main(), not run().\n    var shouldRunNow = true;\n    if (Module['noInitialRun']) shouldRunNow = false;\n    run();\n\n    // end include: postamble.js\n\n    // include: postamble_modularize.js\n    // In MODULARIZE mode we wrap the generated code in a factory function\n    // and return either the Module itself, or a promise of the module.\n    //\n    // We assign to the `moduleRtn` global here and configure closure to see\n    // this as and extern so it won't get minified.\n\n    moduleRtn = readyPromise;\n\n    // Assertion for attempting to access module properties on the incoming\n    // moduleArg.  In the past we used this object as the prototype of the module\n    // and assigned properties to it, but now we return a distinct object.  This\n    // keeps the instance private until it is ready (i.e the promise has been\n    // resolved).\n    for (const prop of Object.keys(Module)) {\n      if (!(prop in moduleArg)) {\n        Object.defineProperty(moduleArg, prop, {\n          configurable: true,\n          get() {\n            abort(`Access to module property ('${prop}') is no longer possible via the module constructor argument; Instead, use the result of the module constructor.`);\n          }\n        });\n      }\n    }\n    // end include: postamble_modularize.js\n\n    return moduleRtn;\n  };\n})();\nif (typeof exports === 'object' && typeof module === 'object') module.exports = createModule;else if (typeof define === 'function' && define['amd']) define([], () => createModule);","map":{"version":3,"names":["createModule","_document$currentScri","_scriptName","document","currentScript","src","undefined","__filename","moduleArg","moduleRtn","Module","readyPromiseResolve","readyPromiseReject","readyPromise","Promise","resolve","reject","forEach","prop","Object","getOwnPropertyDescriptor","defineProperty","get","abort","set","ENVIRONMENT_IS_WEB","window","ENVIRONMENT_IS_WORKER","importScripts","ENVIRONMENT_IS_NODE","process","versions","node","type","ENVIRONMENT_IS_SHELL","moduleOverrides","assign","arguments_","thisProgram","quit_","status","toThrow","scriptDirectory","locateFile","path","readAsync","readBinary","release","name","Error","nodeVersion","numericVersion","split","slice","minVersion","fs","require","nodePath","__dirname","filename","isFileURI","URL","normalize","ret","readFileSync","assert","buffer","binary","readFile","err","data","argv","length","replace","exitCode","self","location","href","startsWith","substr","lastIndexOf","url","xhr","XMLHttpRequest","open","responseType","send","Uint8Array","response","onload","onerror","fetch","credentials","then","ok","arrayBuffer","out","console","log","bind","error","checkIncomingModuleAPI","legacyModuleProp","IDBFS","PROXYFS","WORKERFS","FETCHFS","ICASEFS","JSFILEFS","OPFS","NODEFS","wasmBinary","WebAssembly","wasmMemory","ABORT","EXITSTATUS","condition","text","_malloc","_free","HEAP","HEAP8","HEAPU8","HEAP16","HEAPU16","HEAP32","HEAPU32","HEAPF32","HEAPF64","updateMemoryViews","b","Int8Array","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","prototype","subarray","writeStackCookie","max","_emscripten_stack_get_end","checkStackCookie","cookie1","cookie2","ptrToString","__ATPRERUN__","__ATINIT__","__ATMAIN__","__ATEXIT__","__ATPOSTRUN__","runtimeInitialized","preRun","preRuns","addOnPreRun","callRuntimeCallbacks","initRuntime","FS","initialized","init","ignorePermissions","TTY","preMain","postRun","postRuns","addOnPostRun","cb","unshift","addOnInit","addOnPreMain","addOnExit","Math","imul","fround","clz32","trunc","runDependencies","runDependencyWatcher","dependenciesFulfilled","runDependencyTracking","getUniqueRunDependency","id","orig","random","addRunDependency","_Module$monitorRunDep","call","setInterval","clearInterval","shown","dep","removeRunDependency","_Module$monitorRunDep2","callback","what","_Module$onAbort","e","RuntimeError","dataURIPrefix","isDataURI","createExportWrapper","nargs","args","f","wasmExports","findWasmBinary","wasmBinaryFile","getBinarySync","file","getBinaryPromise","binaryFile","instantiateArrayBuffer","imports","receiver","instantiate","reason","instantiateAsync","instantiateStreaming","result","getWasmImports","wasmImports","createWasm","info","receiveInstance","instance","module","exports","trueModule","receiveInstantiationResult","catch","tempDouble","tempI64","h16","h8","newName","incoming","configurable","extra","ignoredModuleProp","isExportedByForceFilesystem","hookGlobalSymbolAccess","sym","func","missingGlobal","msg","warnOnce","missingLibrarySymbol","librarySymbol","unexportedRuntimeSymbol","dbg","warn","ExitStatus","message","callbacks","getValue","ptr","endsWith","noExitRuntime","toString","padStart","setValue","value","stackRestore","val","__emscripten_stack_restore","stackSave","_emscripten_stack_get_current","__emscripten_memcpy_js","dest","num","copyWithin","getHeapMax","alignMemory","size","alignment","ceil","abortOnCannotGrowMemory","requestedSize","_emscripten_resize_heap","oldSize","PATH","isAbs","charAt","splitPath","splitPathRe","exec","normalizeArray","parts","allowAboveRoot","up","i","last","splice","isAbsolute","trailingSlash","filter","p","join","dirname","root","dir","basename","lastSlash","paths","join2","l","r","initRandomFill","crypto","view","getRandomValues","crypto_module","randomFillSync","randomBytes","byteLength","randomFill","PATH_FS","resolvedPath","resolvedAbsolute","cwd","TypeError","relative","from","to","trim","arr","start","end","fromParts","toParts","min","samePartsLength","outputParts","push","concat","UTF8Decoder","TextDecoder","UTF8ArrayToString","heapOrArray","idx","maxBytesToRead","NaN","endIdx","endPtr","decode","str","u0","String","fromCharCode","u1","u2","ch","FS_stdin_getChar_buffer","lengthBytesUTF8","len","c","charCodeAt","stringToUTF8Array","heap","outIdx","maxBytesToWrite","startIdx","u","intArrayFromString","stringy","dontAddNull","u8array","Array","numBytesWritten","FS_stdin_getChar","BUFSIZE","buf","Buffer","alloc","bytesRead","fd","stdin","readSync","includes","prompt","shift","ttys","shutdown","register","dev","ops","input","output","registerDevice","stream_ops","stream","tty","rdev","ErrnoError","seekable","close","fsync","read","offset","pos","get_char","timestamp","Date","now","write","put_char","default_tty_ops","ioctl_tcgets","c_iflag","c_oflag","c_cflag","c_lflag","c_cc","ioctl_tcsets","optional_actions","ioctl_tiocgwinsz","default_tty1_ops","zeroMemory","address","fill","mmapAlloc","MEMFS","ops_table","mount","createNode","parent","mode","isBlkdev","isFIFO","getattr","node_ops","setattr","lookup","mknod","rename","unlink","rmdir","readdir","symlink","llseek","allocate","mmap","msync","link","readlink","chrdev","chrdev_stream_ops","isDir","contents","isFile","usedBytes","isLink","isChrdev","getFileDataAsTypedArray","expandFileStorage","newCapacity","prevCapacity","CAPACITY_DOUBLING_MAX","oldContents","resizeFileStorage","newSize","attr","ino","nlink","uid","gid","atime","mtime","ctime","blksize","blocks","genericErrors","old_node","new_dir","new_name","new_node","lookupNode","entries","key","keys","newname","oldpath","position","canOwn","ArrayBuffer","whence","prot","flags","allocated","byteOffset","mmapFlags","asyncLoad","noRunDep","FS_createDataFile","fileData","canRead","canWrite","createDataFile","preloadPlugins","FS_handledByPreloadPlugin","byteArray","fullname","finish","Browser","handled","plugin","FS_createPreloadedFile","dontCreateFile","preFinish","processData","FS_modeStringToFlags","flagModes","FS_getMode","UTF8ToString","strError","errno","_strerror","ERRNO_CODES","mounts","devices","streams","nextInode","nameTable","currentPath","constructor","code","filesystems","syncFSRequests","readFiles","FSStream","shared","object","isRead","isWrite","isAppend","FSNode","mounted","readMode","writeMode","isFolder","isDevice","lookupPath","opts","defaults","follow_mount","recurse_count","current","current_path","islast","isMountpoint","follow","count","getPath","isRoot","mountpoint","hashName","parentid","hash","hashAddNode","name_next","hashRemoveNode","errCode","mayLookup","nodeName","destroyNode","isSocket","flagsToPermissionString","flag","perms","nodePermissions","mayCreate","mayDelete","isdir","mayOpen","MAX_OPEN_FDS","nextfd","getStreamChecked","getStream","createStream","closeStream","dupStream","origStream","_stream$stream_ops","_stream$stream_ops$du","dup","_stream$stream_ops$op","_stream$stream_ops2","device","getDevice","major","minor","makedev","ma","mi","getMounts","check","m","pop","syncfs","populate","completed","doCallback","done","errored","pseudo","mountRoot","unmount","next","indexOf","create","mkdir","mkdirTree","dirs","d","mkdev","newpath","old_path","new_path","old_dirname","new_dirname","old_name","old_dir","stat","dontFollow","lstat","chmod","lchmod","fchmod","chown","lchown","fchown","truncate","ftruncate","utime","created","ungotten","isClosed","getdents","seeking","bytesWritten","ioctl","cmd","arg","encoding","writeFile","actualNumBytes","isView","chdir","createDefaultDirectories","createDefaultDevices","randomBuffer","randomLeft","randomByte","createDevice","createSpecialDirectories","proc_self","createStandardStreams","stdout","stderr","staticInit","stack","quit","_fflush","findObject","dontResolveLastLink","analyzePath","exists","parentExists","parentPath","parentObject","createPath","reverse","part","createFile","properties","_output$buffer","forceLoadFile","obj","createLazyFile","LazyUint8Array","lengthKnown","chunks","chunkOffset","chunkSize","chunkNum","getter","setDataGetter","cacheLength","datalength","Number","getResponseHeader","header","hasByteServing","usesGzip","doXHR","setRequestHeader","overrideMimeType","responseText","lazyArray","_length","_chunkSize","defineProperties","fn","writeChunks","absolutePath","createFolder","createLink","joinPath","standardizePath","SYSCALLS","DEFAULT_POLLMASK","calculateAt","dirfd","allowEmpty","dirstream","getStreamFromFD","doStat","abs","floor","getTime","doMsync","addr","varargs","getStr","_fd_close","doReadv","iov","iovcnt","curr","_fd_read","pnum","convertI32PairToI53Checked","lo","hi","_fd_seek","offset_low","offset_high","newOffset","isNaN","doWritev","_fd_write","runtimeKeepaliveCounter","keepRuntimeAlive","_proc_exit","_Module$onExit","exitJS","implicit","checkUnflushedContent","handleException","createPreloadedFile","_emscripten_memcpy_js","emscripten_resize_heap","fd_close","fd_read","fd_seek","fd_write","___wasm_call_ctors","_main","_emscripten_stack_init","_emscripten_stack_get_free","_emscripten_stack_get_base","a0","__emscripten_stack_alloc","dynCall_jiji","missingLibrarySymbols","unexportedSymbols","calledRun","calledPrerun","runCaller","run","callMain","entryFunction","argc","stackCheckInit","doRun","_Module$onRuntimeInit","shouldRunNow","setTimeout","oldOut","oldErr","has","x","_tty$output","define"],"sources":["C:/Users/jackb/OneDrive/Desktop/Code/Hackathon2024/src/yield.js"],"sourcesContent":["\r\nvar createModule = (() => {\r\n  var _scriptName = typeof document != 'undefined' ? document.currentScript?.src : undefined;\r\n  if (typeof __filename != 'undefined') _scriptName = _scriptName || __filename;\r\n  return (\r\nfunction(moduleArg = {}) {\r\n  var moduleRtn;\r\n\r\n// include: shell.js\r\n// The Module object: Our interface to the outside world. We import\r\n// and export values on it. There are various ways Module can be used:\r\n// 1. Not defined. We create it here\r\n// 2. A function parameter, function(moduleArg) => Promise<Module>\r\n// 3. pre-run appended it, var Module = {}; ..generated code..\r\n// 4. External script tag defines var Module.\r\n// We need to check if Module already exists (e.g. case 3 above).\r\n// Substitution will be replaced with actual code on later stage of the build,\r\n// this way Closure Compiler will not mangle it (e.g. case 4. above).\r\n// Note that if you want to run closure, and also to use Module\r\n// after the generated code, you will need to define   var Module = {};\r\n// before the code. Then that object will be used in the code, and you\r\n// can continue to use Module afterwards as well.\r\nvar Module = moduleArg;\r\n\r\n// Set up the promise that indicates the Module is initialized\r\nvar readyPromiseResolve, readyPromiseReject;\r\nvar readyPromise = new Promise((resolve, reject) => {\r\n  readyPromiseResolve = resolve;\r\n  readyPromiseReject = reject;\r\n});\r\n[\"_memory\",\"___indirect_function_table\",\"_main\",\"onRuntimeInitialized\"].forEach((prop) => {\r\n  if (!Object.getOwnPropertyDescriptor(readyPromise, prop)) {\r\n    Object.defineProperty(readyPromise, prop, {\r\n      get: () => abort('You are getting ' + prop + ' on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js'),\r\n      set: () => abort('You are setting ' + prop + ' on the Promise object, instead of the instance. Use .then() to get called back with the instance, see the MODULARIZE docs in src/settings.js'),\r\n    });\r\n  }\r\n});\r\n\r\n// Determine the runtime environment we are in. You can customize this by\r\n// setting the ENVIRONMENT setting at compile time (see settings.js).\r\n\r\n// Attempt to auto-detect the environment\r\nvar ENVIRONMENT_IS_WEB = typeof window == 'object';\r\nvar ENVIRONMENT_IS_WORKER = typeof importScripts == 'function';\r\n// N.b. Electron.js environment is simultaneously a NODE-environment, but\r\n// also a web environment.\r\nvar ENVIRONMENT_IS_NODE = typeof process == 'object' && typeof process.versions == 'object' && typeof process.versions.node == 'string' && process.type != 'renderer';\r\nvar ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;\r\n\r\nif (ENVIRONMENT_IS_NODE) {\r\n  // `require()` is no-op in an ESM module, use `createRequire()` to construct\r\n  // the require()` function.  This is only necessary for multi-environment\r\n  // builds, `-sENVIRONMENT=node` emits a static import declaration instead.\r\n  // TODO: Swap all `require()`'s with `import()`'s?\r\n\r\n}\r\n\r\n// --pre-jses are emitted after the Module integration code, so that they can\r\n// refer to Module (if they choose; they can also define Module)\r\n\r\n\r\n// Sometimes an existing Module object exists with properties\r\n// meant to overwrite the default module functionality. Here\r\n// we collect those properties and reapply _after_ we configure\r\n// the current environment's defaults to avoid having to be so\r\n// defensive during initialization.\r\nvar moduleOverrides = Object.assign({}, Module);\r\n\r\nvar arguments_ = [];\r\nvar thisProgram = './this.program';\r\nvar quit_ = (status, toThrow) => {\r\n  throw toThrow;\r\n};\r\n\r\n// `/` should be present at the end if `scriptDirectory` is not empty\r\nvar scriptDirectory = '';\r\nfunction locateFile(path) {\r\n  if (Module['locateFile']) {\r\n    return Module['locateFile'](path, scriptDirectory);\r\n  }\r\n  return scriptDirectory + path;\r\n}\r\n\r\n// Hooks that are implemented differently in different runtime environments.\r\nvar readAsync, readBinary;\r\n\r\nif (ENVIRONMENT_IS_NODE) {\r\n  if (typeof process == 'undefined' || !process.release || process.release.name !== 'node') throw new Error('not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)');\r\n\r\n  var nodeVersion = process.versions.node;\r\n  var numericVersion = nodeVersion.split('.').slice(0, 3);\r\n  numericVersion = (numericVersion[0] * 10000) + (numericVersion[1] * 100) + (numericVersion[2].split('-')[0] * 1);\r\n  var minVersion = 160000;\r\n  if (numericVersion < 160000) {\r\n    throw new Error('This emscripten-generated code requires node v16.0.0 (detected v' + nodeVersion + ')');\r\n  }\r\n\r\n  // These modules will usually be used on Node.js. Load them eagerly to avoid\r\n  // the complexity of lazy-loading.\r\n  var fs = require('fs');\r\n  var nodePath = require('path');\r\n\r\n  scriptDirectory = __dirname + '/';\r\n\r\n// include: node_shell_read.js\r\nreadBinary = (filename) => {\r\n  // We need to re-wrap `file://` strings to URLs. Normalizing isn't\r\n  // necessary in that case, the path should already be absolute.\r\n  filename = isFileURI(filename) ? new URL(filename) : nodePath.normalize(filename);\r\n  var ret = fs.readFileSync(filename);\r\n  assert(ret.buffer);\r\n  return ret;\r\n};\r\n\r\nreadAsync = (filename, binary = true) => {\r\n  // See the comment in the `readBinary` function.\r\n  filename = isFileURI(filename) ? new URL(filename) : nodePath.normalize(filename);\r\n  return new Promise((resolve, reject) => {\r\n    fs.readFile(filename, binary ? undefined : 'utf8', (err, data) => {\r\n      if (err) reject(err);\r\n      else resolve(binary ? data.buffer : data);\r\n    });\r\n  });\r\n};\r\n// end include: node_shell_read.js\r\n  if (!Module['thisProgram'] && process.argv.length > 1) {\r\n    thisProgram = process.argv[1].replace(/\\\\/g, '/');\r\n  }\r\n\r\n  arguments_ = process.argv.slice(2);\r\n\r\n  // MODULARIZE will export the module in the proper place outside, we don't need to export here\r\n\r\n  quit_ = (status, toThrow) => {\r\n    process.exitCode = status;\r\n    throw toThrow;\r\n  };\r\n\r\n} else\r\nif (ENVIRONMENT_IS_SHELL) {\r\n\r\n  if ((typeof process == 'object' && typeof require === 'function') || typeof window == 'object' || typeof importScripts == 'function') throw new Error('not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)');\r\n\r\n} else\r\n\r\n// Note that this includes Node.js workers when relevant (pthreads is enabled).\r\n// Node.js workers are detected as a combination of ENVIRONMENT_IS_WORKER and\r\n// ENVIRONMENT_IS_NODE.\r\nif (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\r\n  if (ENVIRONMENT_IS_WORKER) { // Check worker, not web, since window could be polyfilled\r\n    scriptDirectory = self.location.href;\r\n  } else if (typeof document != 'undefined' && document.currentScript) { // web\r\n    scriptDirectory = document.currentScript.src;\r\n  }\r\n  // When MODULARIZE, this JS may be executed later, after document.currentScript\r\n  // is gone, so we saved it, and we use it here instead of any other info.\r\n  if (_scriptName) {\r\n    scriptDirectory = _scriptName;\r\n  }\r\n  // blob urls look like blob:http://site.com/etc/etc and we cannot infer anything from them.\r\n  // otherwise, slice off the final part of the url to find the script directory.\r\n  // if scriptDirectory does not contain a slash, lastIndexOf will return -1,\r\n  // and scriptDirectory will correctly be replaced with an empty string.\r\n  // If scriptDirectory contains a query (starting with ?) or a fragment (starting with #),\r\n  // they are removed because they could contain a slash.\r\n  if (scriptDirectory.startsWith('blob:')) {\r\n    scriptDirectory = '';\r\n  } else {\r\n    scriptDirectory = scriptDirectory.substr(0, scriptDirectory.replace(/[?#].*/, '').lastIndexOf('/')+1);\r\n  }\r\n\r\n  if (!(typeof window == 'object' || typeof importScripts == 'function')) throw new Error('not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)');\r\n\r\n  {\r\n// include: web_or_worker_shell_read.js\r\nif (ENVIRONMENT_IS_WORKER) {\r\n    readBinary = (url) => {\r\n      var xhr = new XMLHttpRequest();\r\n      xhr.open('GET', url, false);\r\n      xhr.responseType = 'arraybuffer';\r\n      xhr.send(null);\r\n      return new Uint8Array(/** @type{!ArrayBuffer} */(xhr.response));\r\n    };\r\n  }\r\n\r\n  readAsync = (url) => {\r\n    // Fetch has some additional restrictions over XHR, like it can't be used on a file:// url.\r\n    // See https://github.com/github/fetch/pull/92#issuecomment-140665932\r\n    // Cordova or Electron apps are typically loaded from a file:// url.\r\n    // So use XHR on webview if URL is a file URL.\r\n    if (isFileURI(url)) {\r\n      return new Promise((resolve, reject) => {\r\n        var xhr = new XMLHttpRequest();\r\n        xhr.open('GET', url, true);\r\n        xhr.responseType = 'arraybuffer';\r\n        xhr.onload = () => {\r\n          if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0\r\n            resolve(xhr.response);\r\n            return;\r\n          }\r\n          reject(xhr.status);\r\n        };\r\n        xhr.onerror = reject;\r\n        xhr.send(null);\r\n      });\r\n    }\r\n    return fetch(url, { credentials: 'same-origin' })\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response.arrayBuffer();\r\n        }\r\n        return Promise.reject(new Error(response.status + ' : ' + response.url));\r\n      })\r\n  };\r\n// end include: web_or_worker_shell_read.js\r\n  }\r\n} else\r\n{\r\n  throw new Error('environment detection error');\r\n}\r\n\r\nvar out = Module['print'] || console.log.bind(console);\r\nvar err = Module['printErr'] || console.error.bind(console);\r\n\r\n// Merge back in the overrides\r\nObject.assign(Module, moduleOverrides);\r\n// Free the object hierarchy contained in the overrides, this lets the GC\r\n// reclaim data used.\r\nmoduleOverrides = null;\r\ncheckIncomingModuleAPI();\r\n\r\n// Emit code to handle expected values on the Module object. This applies Module.x\r\n// to the proper local x. This has two benefits: first, we only emit it if it is\r\n// expected to arrive, and second, by using a local everywhere else that can be\r\n// minified.\r\n\r\nif (Module['arguments']) arguments_ = Module['arguments'];legacyModuleProp('arguments', 'arguments_');\r\n\r\nif (Module['thisProgram']) thisProgram = Module['thisProgram'];legacyModuleProp('thisProgram', 'thisProgram');\r\n\r\n// perform assertions in shell.js after we set up out() and err(), as otherwise if an assertion fails it cannot print the message\r\n// Assertions on removed incoming Module JS APIs.\r\nassert(typeof Module['memoryInitializerPrefixURL'] == 'undefined', 'Module.memoryInitializerPrefixURL option was removed, use Module.locateFile instead');\r\nassert(typeof Module['pthreadMainPrefixURL'] == 'undefined', 'Module.pthreadMainPrefixURL option was removed, use Module.locateFile instead');\r\nassert(typeof Module['cdInitializerPrefixURL'] == 'undefined', 'Module.cdInitializerPrefixURL option was removed, use Module.locateFile instead');\r\nassert(typeof Module['filePackagePrefixURL'] == 'undefined', 'Module.filePackagePrefixURL option was removed, use Module.locateFile instead');\r\nassert(typeof Module['read'] == 'undefined', 'Module.read option was removed');\r\nassert(typeof Module['readAsync'] == 'undefined', 'Module.readAsync option was removed (modify readAsync in JS)');\r\nassert(typeof Module['readBinary'] == 'undefined', 'Module.readBinary option was removed (modify readBinary in JS)');\r\nassert(typeof Module['setWindowTitle'] == 'undefined', 'Module.setWindowTitle option was removed (modify emscripten_set_window_title in JS)');\r\nassert(typeof Module['TOTAL_MEMORY'] == 'undefined', 'Module.TOTAL_MEMORY has been renamed Module.INITIAL_MEMORY');\r\nlegacyModuleProp('asm', 'wasmExports');\r\nlegacyModuleProp('readAsync', 'readAsync');\r\nlegacyModuleProp('readBinary', 'readBinary');\r\nlegacyModuleProp('setWindowTitle', 'setWindowTitle');\r\nvar IDBFS = 'IDBFS is no longer included by default; build with -lidbfs.js';\r\nvar PROXYFS = 'PROXYFS is no longer included by default; build with -lproxyfs.js';\r\nvar WORKERFS = 'WORKERFS is no longer included by default; build with -lworkerfs.js';\r\nvar FETCHFS = 'FETCHFS is no longer included by default; build with -lfetchfs.js';\r\nvar ICASEFS = 'ICASEFS is no longer included by default; build with -licasefs.js';\r\nvar JSFILEFS = 'JSFILEFS is no longer included by default; build with -ljsfilefs.js';\r\nvar OPFS = 'OPFS is no longer included by default; build with -lopfs.js';\r\n\r\nvar NODEFS = 'NODEFS is no longer included by default; build with -lnodefs.js';\r\n\r\nassert(!ENVIRONMENT_IS_SHELL, 'shell environment detected but not enabled at build time.  Add `shell` to `-sENVIRONMENT` to enable.');\r\n\r\n// end include: shell.js\r\n\r\n// include: preamble.js\r\n// === Preamble library stuff ===\r\n\r\n// Documentation for the public APIs defined in this file must be updated in:\r\n//    site/source/docs/api_reference/preamble.js.rst\r\n// A prebuilt local version of the documentation is available at:\r\n//    site/build/text/docs/api_reference/preamble.js.txt\r\n// You can also build docs locally as HTML or other formats in site/\r\n// An online HTML version (which may be of a different version of Emscripten)\r\n//    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html\r\n\r\nvar wasmBinary = Module['wasmBinary'];legacyModuleProp('wasmBinary', 'wasmBinary');\r\n\r\nif (typeof WebAssembly != 'object') {\r\n  err('no native wasm support detected');\r\n}\r\n\r\n// Wasm globals\r\n\r\nvar wasmMemory;\r\n\r\n//========================================\r\n// Runtime essentials\r\n//========================================\r\n\r\n// whether we are quitting the application. no code should run after this.\r\n// set in exit() and abort()\r\nvar ABORT = false;\r\n\r\n// set by exit() and abort().  Passed to 'onExit' handler.\r\n// NOTE: This is also used as the process return code code in shell environments\r\n// but only when noExitRuntime is false.\r\nvar EXITSTATUS;\r\n\r\n// In STRICT mode, we only define assert() when ASSERTIONS is set.  i.e. we\r\n// don't define it at all in release modes.  This matches the behaviour of\r\n// MINIMAL_RUNTIME.\r\n// TODO(sbc): Make this the default even without STRICT enabled.\r\n/** @type {function(*, string=)} */\r\nfunction assert(condition, text) {\r\n  if (!condition) {\r\n    abort('Assertion failed' + (text ? ': ' + text : ''));\r\n  }\r\n}\r\n\r\n// We used to include malloc/free by default in the past. Show a helpful error in\r\n// builds with assertions.\r\nfunction _malloc() {\r\n  abort('malloc() called but not included in the build - add `_malloc` to EXPORTED_FUNCTIONS');\r\n}\r\nfunction _free() {\r\n  // Show a helpful error since we used to include free by default in the past.\r\n  abort('free() called but not included in the build - add `_free` to EXPORTED_FUNCTIONS');\r\n}\r\n\r\n// Memory management\r\n\r\nvar HEAP,\r\n/** @type {!Int8Array} */\r\n  HEAP8,\r\n/** @type {!Uint8Array} */\r\n  HEAPU8,\r\n/** @type {!Int16Array} */\r\n  HEAP16,\r\n/** @type {!Uint16Array} */\r\n  HEAPU16,\r\n/** @type {!Int32Array} */\r\n  HEAP32,\r\n/** @type {!Uint32Array} */\r\n  HEAPU32,\r\n/** @type {!Float32Array} */\r\n  HEAPF32,\r\n/** @type {!Float64Array} */\r\n  HEAPF64;\r\n\r\n// include: runtime_shared.js\r\nfunction updateMemoryViews() {\r\n  var b = wasmMemory.buffer;\r\n  Module['HEAP8'] = HEAP8 = new Int8Array(b);\r\n  Module['HEAP16'] = HEAP16 = new Int16Array(b);\r\n  Module['HEAPU8'] = HEAPU8 = new Uint8Array(b);\r\n  Module['HEAPU16'] = HEAPU16 = new Uint16Array(b);\r\n  Module['HEAP32'] = HEAP32 = new Int32Array(b);\r\n  Module['HEAPU32'] = HEAPU32 = new Uint32Array(b);\r\n  Module['HEAPF32'] = HEAPF32 = new Float32Array(b);\r\n  Module['HEAPF64'] = HEAPF64 = new Float64Array(b);\r\n}\r\n\r\n// end include: runtime_shared.js\r\nassert(!Module['STACK_SIZE'], 'STACK_SIZE can no longer be set at runtime.  Use -sSTACK_SIZE at link time')\r\n\r\nassert(typeof Int32Array != 'undefined' && typeof Float64Array !== 'undefined' && Int32Array.prototype.subarray != undefined && Int32Array.prototype.set != undefined,\r\n       'JS engine does not provide full typed array support');\r\n\r\n// If memory is defined in wasm, the user can't provide it, or set INITIAL_MEMORY\r\nassert(!Module['wasmMemory'], 'Use of `wasmMemory` detected.  Use -sIMPORTED_MEMORY to define wasmMemory externally');\r\nassert(!Module['INITIAL_MEMORY'], 'Detected runtime INITIAL_MEMORY setting.  Use -sIMPORTED_MEMORY to define wasmMemory dynamically');\r\n\r\n// include: runtime_stack_check.js\r\n// Initializes the stack cookie. Called at the startup of main and at the startup of each thread in pthreads mode.\r\nfunction writeStackCookie() {\r\n  var max = _emscripten_stack_get_end();\r\n  assert((max & 3) == 0);\r\n  // If the stack ends at address zero we write our cookies 4 bytes into the\r\n  // stack.  This prevents interference with SAFE_HEAP and ASAN which also\r\n  // monitor writes to address zero.\r\n  if (max == 0) {\r\n    max += 4;\r\n  }\r\n  // The stack grow downwards towards _emscripten_stack_get_end.\r\n  // We write cookies to the final two words in the stack and detect if they are\r\n  // ever overwritten.\r\n  HEAPU32[((max)>>2)] = 0x02135467;\r\n  HEAPU32[(((max)+(4))>>2)] = 0x89BACDFE;\r\n  // Also test the global address 0 for integrity.\r\n  HEAPU32[((0)>>2)] = 1668509029;\r\n}\r\n\r\nfunction checkStackCookie() {\r\n  if (ABORT) return;\r\n  var max = _emscripten_stack_get_end();\r\n  // See writeStackCookie().\r\n  if (max == 0) {\r\n    max += 4;\r\n  }\r\n  var cookie1 = HEAPU32[((max)>>2)];\r\n  var cookie2 = HEAPU32[(((max)+(4))>>2)];\r\n  if (cookie1 != 0x02135467 || cookie2 != 0x89BACDFE) {\r\n    abort(`Stack overflow! Stack cookie has been overwritten at ${ptrToString(max)}, expected hex dwords 0x89BACDFE and 0x2135467, but received ${ptrToString(cookie2)} ${ptrToString(cookie1)}`);\r\n  }\r\n  // Also test the global address 0 for integrity.\r\n  if (HEAPU32[((0)>>2)] != 0x63736d65 /* 'emsc' */) {\r\n    abort('Runtime error: The application has corrupted its heap memory area (address zero)!');\r\n  }\r\n}\r\n// end include: runtime_stack_check.js\r\nvar __ATPRERUN__  = []; // functions called before the runtime is initialized\r\nvar __ATINIT__    = []; // functions called during startup\r\nvar __ATMAIN__    = []; // functions called when main() is to be run\r\nvar __ATEXIT__    = []; // functions called during shutdown\r\nvar __ATPOSTRUN__ = []; // functions called after the main() is called\r\n\r\nvar runtimeInitialized = false;\r\n\r\nfunction preRun() {\r\n  var preRuns = Module['preRun'];\r\n  if (preRuns) {\r\n    if (typeof preRuns == 'function') preRuns = [preRuns];\r\n    preRuns.forEach(addOnPreRun);\r\n  }\r\n  callRuntimeCallbacks(__ATPRERUN__);\r\n}\r\n\r\nfunction initRuntime() {\r\n  assert(!runtimeInitialized);\r\n  runtimeInitialized = true;\r\n\r\n  checkStackCookie();\r\n\r\n  \r\nif (!Module['noFSInit'] && !FS.initialized)\r\n  FS.init();\r\nFS.ignorePermissions = false;\r\n\r\nTTY.init();\r\n  callRuntimeCallbacks(__ATINIT__);\r\n}\r\n\r\nfunction preMain() {\r\n  checkStackCookie();\r\n  \r\n  callRuntimeCallbacks(__ATMAIN__);\r\n}\r\n\r\nfunction postRun() {\r\n  checkStackCookie();\r\n\r\n  var postRuns = Module['postRun'];\r\n  if (postRuns) {\r\n    if (typeof postRuns == 'function') postRuns = [postRuns];\r\n    postRuns.forEach(addOnPostRun);\r\n  }\r\n\r\n  callRuntimeCallbacks(__ATPOSTRUN__);\r\n}\r\n\r\nfunction addOnPreRun(cb) {\r\n  __ATPRERUN__.unshift(cb);\r\n}\r\n\r\nfunction addOnInit(cb) {\r\n  __ATINIT__.unshift(cb);\r\n}\r\n\r\nfunction addOnPreMain(cb) {\r\n  __ATMAIN__.unshift(cb);\r\n}\r\n\r\nfunction addOnExit(cb) {\r\n}\r\n\r\nfunction addOnPostRun(cb) {\r\n  __ATPOSTRUN__.unshift(cb);\r\n}\r\n\r\n// include: runtime_math.js\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/imul\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/fround\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/clz32\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/trunc\r\n\r\nassert(Math.imul, 'This browser does not support Math.imul(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');\r\nassert(Math.fround, 'This browser does not support Math.fround(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');\r\nassert(Math.clz32, 'This browser does not support Math.clz32(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');\r\nassert(Math.trunc, 'This browser does not support Math.trunc(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');\r\n// end include: runtime_math.js\r\n// A counter of dependencies for calling run(). If we need to\r\n// do asynchronous work before running, increment this and\r\n// decrement it. Incrementing must happen in a place like\r\n// Module.preRun (used by emcc to add file preloading).\r\n// Note that you can add dependencies in preRun, even though\r\n// it happens right before run - run will be postponed until\r\n// the dependencies are met.\r\nvar runDependencies = 0;\r\nvar runDependencyWatcher = null;\r\nvar dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled\r\nvar runDependencyTracking = {};\r\n\r\nfunction getUniqueRunDependency(id) {\r\n  var orig = id;\r\n  while (1) {\r\n    if (!runDependencyTracking[id]) return id;\r\n    id = orig + Math.random();\r\n  }\r\n}\r\n\r\nfunction addRunDependency(id) {\r\n  runDependencies++;\r\n\r\n  Module['monitorRunDependencies']?.(runDependencies);\r\n\r\n  if (id) {\r\n    assert(!runDependencyTracking[id]);\r\n    runDependencyTracking[id] = 1;\r\n    if (runDependencyWatcher === null && typeof setInterval != 'undefined') {\r\n      // Check for missing dependencies every few seconds\r\n      runDependencyWatcher = setInterval(() => {\r\n        if (ABORT) {\r\n          clearInterval(runDependencyWatcher);\r\n          runDependencyWatcher = null;\r\n          return;\r\n        }\r\n        var shown = false;\r\n        for (var dep in runDependencyTracking) {\r\n          if (!shown) {\r\n            shown = true;\r\n            err('still waiting on run dependencies:');\r\n          }\r\n          err(`dependency: ${dep}`);\r\n        }\r\n        if (shown) {\r\n          err('(end of list)');\r\n        }\r\n      }, 10000);\r\n    }\r\n  } else {\r\n    err('warning: run dependency added without ID');\r\n  }\r\n}\r\n\r\nfunction removeRunDependency(id) {\r\n  runDependencies--;\r\n\r\n  Module['monitorRunDependencies']?.(runDependencies);\r\n\r\n  if (id) {\r\n    assert(runDependencyTracking[id]);\r\n    delete runDependencyTracking[id];\r\n  } else {\r\n    err('warning: run dependency removed without ID');\r\n  }\r\n  if (runDependencies == 0) {\r\n    if (runDependencyWatcher !== null) {\r\n      clearInterval(runDependencyWatcher);\r\n      runDependencyWatcher = null;\r\n    }\r\n    if (dependenciesFulfilled) {\r\n      var callback = dependenciesFulfilled;\r\n      dependenciesFulfilled = null;\r\n      callback(); // can add another dependenciesFulfilled\r\n    }\r\n  }\r\n}\r\n\r\n/** @param {string|number=} what */\r\nfunction abort(what) {\r\n  Module['onAbort']?.(what);\r\n\r\n  what = 'Aborted(' + what + ')';\r\n  // TODO(sbc): Should we remove printing and leave it up to whoever\r\n  // catches the exception?\r\n  err(what);\r\n\r\n  ABORT = true;\r\n\r\n  // Use a wasm runtime error, because a JS error might be seen as a foreign\r\n  // exception, which means we'd run destructors on it. We need the error to\r\n  // simply make the program stop.\r\n  // FIXME This approach does not work in Wasm EH because it currently does not assume\r\n  // all RuntimeErrors are from traps; it decides whether a RuntimeError is from\r\n  // a trap or not based on a hidden field within the object. So at the moment\r\n  // we don't have a way of throwing a wasm trap from JS. TODO Make a JS API that\r\n  // allows this in the wasm spec.\r\n\r\n  // Suppress closure compiler warning here. Closure compiler's builtin extern\r\n  // definition for WebAssembly.RuntimeError claims it takes no arguments even\r\n  // though it can.\r\n  // TODO(https://github.com/google/closure-compiler/pull/3913): Remove if/when upstream closure gets fixed.\r\n  /** @suppress {checkTypes} */\r\n  var e = new WebAssembly.RuntimeError(what);\r\n\r\n  readyPromiseReject(e);\r\n  // Throw the error whether or not MODULARIZE is set because abort is used\r\n  // in code paths apart from instantiation where an exception is expected\r\n  // to be thrown when abort is called.\r\n  throw e;\r\n}\r\n\r\n// include: memoryprofiler.js\r\n// end include: memoryprofiler.js\r\n// include: URIUtils.js\r\n// Prefix of data URIs emitted by SINGLE_FILE and related options.\r\nvar dataURIPrefix = 'data:application/octet-stream;base64,';\r\n\r\n/**\r\n * Indicates whether filename is a base64 data URI.\r\n * @noinline\r\n */\r\nvar isDataURI = (filename) => filename.startsWith(dataURIPrefix);\r\n\r\n/**\r\n * Indicates whether filename is delivered via file protocol (as opposed to http/https)\r\n * @noinline\r\n */\r\nvar isFileURI = (filename) => filename.startsWith('file://');\r\n// end include: URIUtils.js\r\nfunction createExportWrapper(name, nargs) {\r\n  return (...args) => {\r\n    assert(runtimeInitialized, `native function \\`${name}\\` called before runtime initialization`);\r\n    var f = wasmExports[name];\r\n    assert(f, `exported native function \\`${name}\\` not found`);\r\n    // Only assert for too many arguments. Too few can be valid since the missing arguments will be zero filled.\r\n    assert(args.length <= nargs, `native function \\`${name}\\` called with ${args.length} args but expects ${nargs}`);\r\n    return f(...args);\r\n  };\r\n}\r\n\r\n// include: runtime_exceptions.js\r\n// end include: runtime_exceptions.js\r\nfunction findWasmBinary() {\r\n    var f = 'yield.wasm';\r\n    if (!isDataURI(f)) {\r\n      return locateFile(f);\r\n    }\r\n    return f;\r\n}\r\n\r\nvar wasmBinaryFile;\r\n\r\nfunction getBinarySync(file) {\r\n  if (file == wasmBinaryFile && wasmBinary) {\r\n    return new Uint8Array(wasmBinary);\r\n  }\r\n  if (readBinary) {\r\n    return readBinary(file);\r\n  }\r\n  throw 'both async and sync fetching of the wasm failed';\r\n}\r\n\r\nfunction getBinaryPromise(binaryFile) {\r\n  // If we don't have the binary yet, load it asynchronously using readAsync.\r\n  if (!wasmBinary\r\n      ) {\r\n    // Fetch the binary using readAsync\r\n    return readAsync(binaryFile).then(\r\n      (response) => new Uint8Array(/** @type{!ArrayBuffer} */(response)),\r\n      // Fall back to getBinarySync if readAsync fails\r\n      () => getBinarySync(binaryFile)\r\n    );\r\n  }\r\n\r\n  // Otherwise, getBinarySync should be able to get it synchronously\r\n  return Promise.resolve().then(() => getBinarySync(binaryFile));\r\n}\r\n\r\nfunction instantiateArrayBuffer(binaryFile, imports, receiver) {\r\n  return getBinaryPromise(binaryFile).then((binary) => {\r\n    return WebAssembly.instantiate(binary, imports);\r\n  }).then(receiver, (reason) => {\r\n    err(`failed to asynchronously prepare wasm: ${reason}`);\r\n\r\n    // Warn on some common problems.\r\n    if (isFileURI(wasmBinaryFile)) {\r\n      err(`warning: Loading from a file URI (${wasmBinaryFile}) is not supported in most browsers. See https://emscripten.org/docs/getting_started/FAQ.html#how-do-i-run-a-local-webserver-for-testing-why-does-my-program-stall-in-downloading-or-preparing`);\r\n    }\r\n    abort(reason);\r\n  });\r\n}\r\n\r\nfunction instantiateAsync(binary, binaryFile, imports, callback) {\r\n  if (!binary &&\r\n      typeof WebAssembly.instantiateStreaming == 'function' &&\r\n      !isDataURI(binaryFile) &&\r\n      // Don't use streaming for file:// delivered objects in a webview, fetch them synchronously.\r\n      !isFileURI(binaryFile) &&\r\n      // Avoid instantiateStreaming() on Node.js environment for now, as while\r\n      // Node.js v18.1.0 implements it, it does not have a full fetch()\r\n      // implementation yet.\r\n      //\r\n      // Reference:\r\n      //   https://github.com/emscripten-core/emscripten/pull/16917\r\n      !ENVIRONMENT_IS_NODE &&\r\n      typeof fetch == 'function') {\r\n    return fetch(binaryFile, { credentials: 'same-origin' }).then((response) => {\r\n      // Suppress closure warning here since the upstream definition for\r\n      // instantiateStreaming only allows Promise<Repsponse> rather than\r\n      // an actual Response.\r\n      // TODO(https://github.com/google/closure-compiler/pull/3913): Remove if/when upstream closure is fixed.\r\n      /** @suppress {checkTypes} */\r\n      var result = WebAssembly.instantiateStreaming(response, imports);\r\n\r\n      return result.then(\r\n        callback,\r\n        function(reason) {\r\n          // We expect the most common failure cause to be a bad MIME type for the binary,\r\n          // in which case falling back to ArrayBuffer instantiation should work.\r\n          err(`wasm streaming compile failed: ${reason}`);\r\n          err('falling back to ArrayBuffer instantiation');\r\n          return instantiateArrayBuffer(binaryFile, imports, callback);\r\n        });\r\n    });\r\n  }\r\n  return instantiateArrayBuffer(binaryFile, imports, callback);\r\n}\r\n\r\nfunction getWasmImports() {\r\n  // prepare imports\r\n  return {\r\n    'env': wasmImports,\r\n    'wasi_snapshot_preview1': wasmImports,\r\n  }\r\n}\r\n\r\n// Create the wasm instance.\r\n// Receives the wasm imports, returns the exports.\r\nfunction createWasm() {\r\n  var info = getWasmImports();\r\n  // Load the wasm module and create an instance of using native support in the JS engine.\r\n  // handle a generated wasm instance, receiving its exports and\r\n  // performing other necessary setup\r\n  /** @param {WebAssembly.Module=} module*/\r\n  function receiveInstance(instance, module) {\r\n    wasmExports = instance.exports;\r\n\r\n    \r\n\r\n    wasmMemory = wasmExports['memory'];\r\n    \r\n    assert(wasmMemory, 'memory not found in wasm exports');\r\n    updateMemoryViews();\r\n\r\n    addOnInit(wasmExports['__wasm_call_ctors']);\r\n\r\n    removeRunDependency('wasm-instantiate');\r\n    return wasmExports;\r\n  }\r\n  // wait for the pthread pool (if any)\r\n  addRunDependency('wasm-instantiate');\r\n\r\n  // Prefer streaming instantiation if available.\r\n  // Async compilation can be confusing when an error on the page overwrites Module\r\n  // (for example, if the order of elements is wrong, and the one defining Module is\r\n  // later), so we save Module and check it later.\r\n  var trueModule = Module;\r\n  function receiveInstantiationResult(result) {\r\n    // 'result' is a ResultObject object which has both the module and instance.\r\n    // receiveInstance() will swap in the exports (to Module.asm) so they can be called\r\n    assert(Module === trueModule, 'the Module object should not be replaced during async compilation - perhaps the order of HTML elements is wrong?');\r\n    trueModule = null;\r\n    // TODO: Due to Closure regression https://github.com/google/closure-compiler/issues/3193, the above line no longer optimizes out down to the following line.\r\n    // When the regression is fixed, can restore the above PTHREADS-enabled path.\r\n    receiveInstance(result['instance']);\r\n  }\r\n\r\n  // User shell pages can write their own Module.instantiateWasm = function(imports, successCallback) callback\r\n  // to manually instantiate the Wasm module themselves. This allows pages to\r\n  // run the instantiation parallel to any other async startup actions they are\r\n  // performing.\r\n  // Also pthreads and wasm workers initialize the wasm instance through this\r\n  // path.\r\n  if (Module['instantiateWasm']) {\r\n    try {\r\n      return Module['instantiateWasm'](info, receiveInstance);\r\n    } catch(e) {\r\n      err(`Module.instantiateWasm callback failed with error: ${e}`);\r\n        // If instantiation fails, reject the module ready promise.\r\n        readyPromiseReject(e);\r\n    }\r\n  }\r\n\r\n  wasmBinaryFile ??= findWasmBinary();\r\n\r\n  // If instantiation fails, reject the module ready promise.\r\n  instantiateAsync(wasmBinary, wasmBinaryFile, info, receiveInstantiationResult).catch(readyPromiseReject);\r\n  return {}; // no exports yet; we'll fill them in later\r\n}\r\n\r\n// Globals used by JS i64 conversions (see makeSetValue)\r\nvar tempDouble;\r\nvar tempI64;\r\n\r\n// include: runtime_debug.js\r\n// Endianness check\r\n(() => {\r\n  var h16 = new Int16Array(1);\r\n  var h8 = new Int8Array(h16.buffer);\r\n  h16[0] = 0x6373;\r\n  if (h8[0] !== 0x73 || h8[1] !== 0x63) throw 'Runtime error: expected the system to be little-endian! (Run with -sSUPPORT_BIG_ENDIAN to bypass)';\r\n})();\r\n\r\nif (Module['ENVIRONMENT']) {\r\n  throw new Error('Module.ENVIRONMENT has been deprecated. To force the environment, use the ENVIRONMENT compile-time option (for example, -sENVIRONMENT=web or -sENVIRONMENT=node)');\r\n}\r\n\r\nfunction legacyModuleProp(prop, newName, incoming=true) {\r\n  if (!Object.getOwnPropertyDescriptor(Module, prop)) {\r\n    Object.defineProperty(Module, prop, {\r\n      configurable: true,\r\n      get() {\r\n        let extra = incoming ? ' (the initial value can be provided on Module, but after startup the value is only looked for on a local variable of that name)' : '';\r\n        abort(`\\`Module.${prop}\\` has been replaced by \\`${newName}\\`` + extra);\r\n\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction ignoredModuleProp(prop) {\r\n  if (Object.getOwnPropertyDescriptor(Module, prop)) {\r\n    abort(`\\`Module.${prop}\\` was supplied but \\`${prop}\\` not included in INCOMING_MODULE_JS_API`);\r\n  }\r\n}\r\n\r\n// forcing the filesystem exports a few things by default\r\nfunction isExportedByForceFilesystem(name) {\r\n  return name === 'FS_createPath' ||\r\n         name === 'FS_createDataFile' ||\r\n         name === 'FS_createPreloadedFile' ||\r\n         name === 'FS_unlink' ||\r\n         name === 'addRunDependency' ||\r\n         // The old FS has some functionality that WasmFS lacks.\r\n         name === 'FS_createLazyFile' ||\r\n         name === 'FS_createDevice' ||\r\n         name === 'removeRunDependency';\r\n}\r\n\r\n/**\r\n * Intercept access to a global symbol.  This enables us to give informative\r\n * warnings/errors when folks attempt to use symbols they did not include in\r\n * their build, or no symbols that no longer exist.\r\n */\r\nfunction hookGlobalSymbolAccess(sym, func) {\r\n  // In MODULARIZE mode the generated code runs inside a function scope and not\r\n  // the global scope, and JavaScript does not provide access to function scopes\r\n  // so we cannot dynamically modify the scrope using `defineProperty` in this\r\n  // case.\r\n  //\r\n  // In this mode we simply ignore requests for `hookGlobalSymbolAccess`. Since\r\n  // this is a debug-only feature, skipping it is not major issue.\r\n}\r\n\r\nfunction missingGlobal(sym, msg) {\r\n  hookGlobalSymbolAccess(sym, () => {\r\n    warnOnce(`\\`${sym}\\` is not longer defined by emscripten. ${msg}`);\r\n  });\r\n}\r\n\r\nmissingGlobal('buffer', 'Please use HEAP8.buffer or wasmMemory.buffer');\r\nmissingGlobal('asm', 'Please use wasmExports instead');\r\n\r\nfunction missingLibrarySymbol(sym) {\r\n  hookGlobalSymbolAccess(sym, () => {\r\n    // Can't `abort()` here because it would break code that does runtime\r\n    // checks.  e.g. `if (typeof SDL === 'undefined')`.\r\n    var msg = `\\`${sym}\\` is a library symbol and not included by default; add it to your library.js __deps or to DEFAULT_LIBRARY_FUNCS_TO_INCLUDE on the command line`;\r\n    // DEFAULT_LIBRARY_FUNCS_TO_INCLUDE requires the name as it appears in\r\n    // library.js, which means $name for a JS name with no prefix, or name\r\n    // for a JS name like _name.\r\n    var librarySymbol = sym;\r\n    if (!librarySymbol.startsWith('_')) {\r\n      librarySymbol = '$' + sym;\r\n    }\r\n    msg += ` (e.g. -sDEFAULT_LIBRARY_FUNCS_TO_INCLUDE='${librarySymbol}')`;\r\n    if (isExportedByForceFilesystem(sym)) {\r\n      msg += '. Alternatively, forcing filesystem support (-sFORCE_FILESYSTEM) can export this for you';\r\n    }\r\n    warnOnce(msg);\r\n  });\r\n\r\n  // Any symbol that is not included from the JS library is also (by definition)\r\n  // not exported on the Module object.\r\n  unexportedRuntimeSymbol(sym);\r\n}\r\n\r\nfunction unexportedRuntimeSymbol(sym) {\r\n  if (!Object.getOwnPropertyDescriptor(Module, sym)) {\r\n    Object.defineProperty(Module, sym, {\r\n      configurable: true,\r\n      get() {\r\n        var msg = `'${sym}' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the Emscripten FAQ)`;\r\n        if (isExportedByForceFilesystem(sym)) {\r\n          msg += '. Alternatively, forcing filesystem support (-sFORCE_FILESYSTEM) can export this for you';\r\n        }\r\n        abort(msg);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n// Used by XXXXX_DEBUG settings to output debug messages.\r\nfunction dbg(...args) {\r\n  // TODO(sbc): Make this configurable somehow.  Its not always convenient for\r\n  // logging to show up as warnings.\r\n  console.warn(...args);\r\n}\r\n// end include: runtime_debug.js\r\n// === Body ===\r\n// end include: preamble.js\r\n\r\n\r\n  /** @constructor */\r\n  function ExitStatus(status) {\r\n      this.name = 'ExitStatus';\r\n      this.message = `Program terminated with exit(${status})`;\r\n      this.status = status;\r\n    }\r\n\r\n  var callRuntimeCallbacks = (callbacks) => {\r\n      // Pass the module as the first argument.\r\n      callbacks.forEach((f) => f(Module));\r\n    };\r\n\r\n  \r\n    /**\r\n     * @param {number} ptr\r\n     * @param {string} type\r\n     */\r\n  function getValue(ptr, type = 'i8') {\r\n    if (type.endsWith('*')) type = '*';\r\n    switch (type) {\r\n      case 'i1': return HEAP8[ptr];\r\n      case 'i8': return HEAP8[ptr];\r\n      case 'i16': return HEAP16[((ptr)>>1)];\r\n      case 'i32': return HEAP32[((ptr)>>2)];\r\n      case 'i64': abort('to do getValue(i64) use WASM_BIGINT');\r\n      case 'float': return HEAPF32[((ptr)>>2)];\r\n      case 'double': return HEAPF64[((ptr)>>3)];\r\n      case '*': return HEAPU32[((ptr)>>2)];\r\n      default: abort(`invalid type for getValue: ${type}`);\r\n    }\r\n  }\r\n\r\n  var noExitRuntime = Module['noExitRuntime'] || true;\r\n\r\n  var ptrToString = (ptr) => {\r\n      assert(typeof ptr === 'number');\r\n      // With CAN_ADDRESS_2GB or MEMORY64, pointers are already unsigned.\r\n      ptr >>>= 0;\r\n      return '0x' + ptr.toString(16).padStart(8, '0');\r\n    };\r\n\r\n  \r\n    /**\r\n     * @param {number} ptr\r\n     * @param {number} value\r\n     * @param {string} type\r\n     */\r\n  function setValue(ptr, value, type = 'i8') {\r\n    if (type.endsWith('*')) type = '*';\r\n    switch (type) {\r\n      case 'i1': HEAP8[ptr] = value; break;\r\n      case 'i8': HEAP8[ptr] = value; break;\r\n      case 'i16': HEAP16[((ptr)>>1)] = value; break;\r\n      case 'i32': HEAP32[((ptr)>>2)] = value; break;\r\n      case 'i64': abort('to do setValue(i64) use WASM_BIGINT');\r\n      case 'float': HEAPF32[((ptr)>>2)] = value; break;\r\n      case 'double': HEAPF64[((ptr)>>3)] = value; break;\r\n      case '*': HEAPU32[((ptr)>>2)] = value; break;\r\n      default: abort(`invalid type for setValue: ${type}`);\r\n    }\r\n  }\r\n\r\n  var stackRestore = (val) => __emscripten_stack_restore(val);\r\n\r\n  var stackSave = () => _emscripten_stack_get_current();\r\n\r\n  var warnOnce = (text) => {\r\n      warnOnce.shown ||= {};\r\n      if (!warnOnce.shown[text]) {\r\n        warnOnce.shown[text] = 1;\r\n        if (ENVIRONMENT_IS_NODE) text = 'warning: ' + text;\r\n        err(text);\r\n      }\r\n    };\r\n\r\n  var __emscripten_memcpy_js = (dest, src, num) => HEAPU8.copyWithin(dest, src, src + num);\r\n\r\n  var getHeapMax = () =>\r\n      HEAPU8.length;\r\n  \r\n  var alignMemory = (size, alignment) => {\r\n      assert(alignment, \"alignment argument is required\");\r\n      return Math.ceil(size / alignment) * alignment;\r\n    };\r\n  \r\n  var abortOnCannotGrowMemory = (requestedSize) => {\r\n      abort(`Cannot enlarge memory arrays to size ${requestedSize} bytes (OOM). Either (1) compile with -sINITIAL_MEMORY=X with X higher than the current value ${HEAP8.length}, (2) compile with -sALLOW_MEMORY_GROWTH which allows increasing the size at runtime, or (3) if you want malloc to return NULL (0) instead of this abort, compile with -sABORTING_MALLOC=0`);\r\n    };\r\n  var _emscripten_resize_heap = (requestedSize) => {\r\n      var oldSize = HEAPU8.length;\r\n      // With CAN_ADDRESS_2GB or MEMORY64, pointers are already unsigned.\r\n      requestedSize >>>= 0;\r\n      abortOnCannotGrowMemory(requestedSize);\r\n    };\r\n\r\n  var PATH = {\r\n  isAbs:(path) => path.charAt(0) === '/',\r\n  splitPath:(filename) => {\r\n        var splitPathRe = /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\r\n        return splitPathRe.exec(filename).slice(1);\r\n      },\r\n  normalizeArray:(parts, allowAboveRoot) => {\r\n        // if the path tries to go above the root, `up` ends up > 0\r\n        var up = 0;\r\n        for (var i = parts.length - 1; i >= 0; i--) {\r\n          var last = parts[i];\r\n          if (last === '.') {\r\n            parts.splice(i, 1);\r\n          } else if (last === '..') {\r\n            parts.splice(i, 1);\r\n            up++;\r\n          } else if (up) {\r\n            parts.splice(i, 1);\r\n            up--;\r\n          }\r\n        }\r\n        // if the path is allowed to go above the root, restore leading ..s\r\n        if (allowAboveRoot) {\r\n          for (; up; up--) {\r\n            parts.unshift('..');\r\n          }\r\n        }\r\n        return parts;\r\n      },\r\n  normalize:(path) => {\r\n        var isAbsolute = PATH.isAbs(path),\r\n            trailingSlash = path.substr(-1) === '/';\r\n        // Normalize the path\r\n        path = PATH.normalizeArray(path.split('/').filter((p) => !!p), !isAbsolute).join('/');\r\n        if (!path && !isAbsolute) {\r\n          path = '.';\r\n        }\r\n        if (path && trailingSlash) {\r\n          path += '/';\r\n        }\r\n        return (isAbsolute ? '/' : '') + path;\r\n      },\r\n  dirname:(path) => {\r\n        var result = PATH.splitPath(path),\r\n            root = result[0],\r\n            dir = result[1];\r\n        if (!root && !dir) {\r\n          // No dirname whatsoever\r\n          return '.';\r\n        }\r\n        if (dir) {\r\n          // It has a dirname, strip trailing slash\r\n          dir = dir.substr(0, dir.length - 1);\r\n        }\r\n        return root + dir;\r\n      },\r\n  basename:(path) => {\r\n        // EMSCRIPTEN return '/'' for '/', not an empty string\r\n        if (path === '/') return '/';\r\n        path = PATH.normalize(path);\r\n        path = path.replace(/\\/$/, \"\");\r\n        var lastSlash = path.lastIndexOf('/');\r\n        if (lastSlash === -1) return path;\r\n        return path.substr(lastSlash+1);\r\n      },\r\n  join:(...paths) => PATH.normalize(paths.join('/')),\r\n  join2:(l, r) => PATH.normalize(l + '/' + r),\r\n  };\r\n  \r\n  var initRandomFill = () => {\r\n      if (typeof crypto == 'object' && typeof crypto['getRandomValues'] == 'function') {\r\n        // for modern web browsers\r\n        return (view) => crypto.getRandomValues(view);\r\n      } else\r\n      if (ENVIRONMENT_IS_NODE) {\r\n        // for nodejs with or without crypto support included\r\n        try {\r\n          var crypto_module = require('crypto');\r\n          var randomFillSync = crypto_module['randomFillSync'];\r\n          if (randomFillSync) {\r\n            // nodejs with LTS crypto support\r\n            return (view) => crypto_module['randomFillSync'](view);\r\n          }\r\n          // very old nodejs with the original crypto API\r\n          var randomBytes = crypto_module['randomBytes'];\r\n          return (view) => (\r\n            view.set(randomBytes(view.byteLength)),\r\n            // Return the original view to match modern native implementations.\r\n            view\r\n          );\r\n        } catch (e) {\r\n          // nodejs doesn't have crypto support\r\n        }\r\n      }\r\n      // we couldn't find a proper implementation, as Math.random() is not suitable for /dev/random, see emscripten-core/emscripten/pull/7096\r\n      abort('no cryptographic support found for randomDevice. consider polyfilling it if you want to use something insecure like Math.random(), e.g. put this in a --pre-js: var crypto = { getRandomValues: (array) => { for (var i = 0; i < array.length; i++) array[i] = (Math.random()*256)|0 } };');\r\n    };\r\n  var randomFill = (view) => {\r\n      // Lazily init on the first invocation.\r\n      return (randomFill = initRandomFill())(view);\r\n    };\r\n  \r\n  \r\n  \r\n  var PATH_FS = {\r\n  resolve:(...args) => {\r\n        var resolvedPath = '',\r\n          resolvedAbsolute = false;\r\n        for (var i = args.length - 1; i >= -1 && !resolvedAbsolute; i--) {\r\n          var path = (i >= 0) ? args[i] : FS.cwd();\r\n          // Skip empty and invalid entries\r\n          if (typeof path != 'string') {\r\n            throw new TypeError('Arguments to path.resolve must be strings');\r\n          } else if (!path) {\r\n            return ''; // an invalid portion invalidates the whole thing\r\n          }\r\n          resolvedPath = path + '/' + resolvedPath;\r\n          resolvedAbsolute = PATH.isAbs(path);\r\n        }\r\n        // At this point the path should be resolved to a full absolute path, but\r\n        // handle relative paths to be safe (might happen when process.cwd() fails)\r\n        resolvedPath = PATH.normalizeArray(resolvedPath.split('/').filter((p) => !!p), !resolvedAbsolute).join('/');\r\n        return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\r\n      },\r\n  relative:(from, to) => {\r\n        from = PATH_FS.resolve(from).substr(1);\r\n        to = PATH_FS.resolve(to).substr(1);\r\n        function trim(arr) {\r\n          var start = 0;\r\n          for (; start < arr.length; start++) {\r\n            if (arr[start] !== '') break;\r\n          }\r\n          var end = arr.length - 1;\r\n          for (; end >= 0; end--) {\r\n            if (arr[end] !== '') break;\r\n          }\r\n          if (start > end) return [];\r\n          return arr.slice(start, end - start + 1);\r\n        }\r\n        var fromParts = trim(from.split('/'));\r\n        var toParts = trim(to.split('/'));\r\n        var length = Math.min(fromParts.length, toParts.length);\r\n        var samePartsLength = length;\r\n        for (var i = 0; i < length; i++) {\r\n          if (fromParts[i] !== toParts[i]) {\r\n            samePartsLength = i;\r\n            break;\r\n          }\r\n        }\r\n        var outputParts = [];\r\n        for (var i = samePartsLength; i < fromParts.length; i++) {\r\n          outputParts.push('..');\r\n        }\r\n        outputParts = outputParts.concat(toParts.slice(samePartsLength));\r\n        return outputParts.join('/');\r\n      },\r\n  };\r\n  \r\n  \r\n  var UTF8Decoder = typeof TextDecoder != 'undefined' ? new TextDecoder() : undefined;\r\n  \r\n    /**\r\n     * Given a pointer 'idx' to a null-terminated UTF8-encoded string in the given\r\n     * array that contains uint8 values, returns a copy of that string as a\r\n     * Javascript String object.\r\n     * heapOrArray is either a regular array, or a JavaScript typed array view.\r\n     * @param {number=} idx\r\n     * @param {number=} maxBytesToRead\r\n     * @return {string}\r\n     */\r\n  var UTF8ArrayToString = (heapOrArray, idx = 0, maxBytesToRead = NaN) => {\r\n      var endIdx = idx + maxBytesToRead;\r\n      var endPtr = idx;\r\n      // TextDecoder needs to know the byte length in advance, it doesn't stop on\r\n      // null terminator by itself.  Also, use the length info to avoid running tiny\r\n      // strings through TextDecoder, since .subarray() allocates garbage.\r\n      // (As a tiny code save trick, compare endPtr against endIdx using a negation,\r\n      // so that undefined/NaN means Infinity)\r\n      while (heapOrArray[endPtr] && !(endPtr >= endIdx)) ++endPtr;\r\n  \r\n      if (endPtr - idx > 16 && heapOrArray.buffer && UTF8Decoder) {\r\n        return UTF8Decoder.decode(heapOrArray.subarray(idx, endPtr));\r\n      }\r\n      var str = '';\r\n      // If building with TextDecoder, we have already computed the string length\r\n      // above, so test loop end condition against that\r\n      while (idx < endPtr) {\r\n        // For UTF8 byte structure, see:\r\n        // http://en.wikipedia.org/wiki/UTF-8#Description\r\n        // https://www.ietf.org/rfc/rfc2279.txt\r\n        // https://tools.ietf.org/html/rfc3629\r\n        var u0 = heapOrArray[idx++];\r\n        if (!(u0 & 0x80)) { str += String.fromCharCode(u0); continue; }\r\n        var u1 = heapOrArray[idx++] & 63;\r\n        if ((u0 & 0xE0) == 0xC0) { str += String.fromCharCode(((u0 & 31) << 6) | u1); continue; }\r\n        var u2 = heapOrArray[idx++] & 63;\r\n        if ((u0 & 0xF0) == 0xE0) {\r\n          u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;\r\n        } else {\r\n          if ((u0 & 0xF8) != 0xF0) warnOnce('Invalid UTF-8 leading byte ' + ptrToString(u0) + ' encountered when deserializing a UTF-8 string in wasm memory to a JS string!');\r\n          u0 = ((u0 & 7) << 18) | (u1 << 12) | (u2 << 6) | (heapOrArray[idx++] & 63);\r\n        }\r\n  \r\n        if (u0 < 0x10000) {\r\n          str += String.fromCharCode(u0);\r\n        } else {\r\n          var ch = u0 - 0x10000;\r\n          str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));\r\n        }\r\n      }\r\n      return str;\r\n    };\r\n  \r\n  var FS_stdin_getChar_buffer = [];\r\n  \r\n  var lengthBytesUTF8 = (str) => {\r\n      var len = 0;\r\n      for (var i = 0; i < str.length; ++i) {\r\n        // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code\r\n        // unit, not a Unicode code point of the character! So decode\r\n        // UTF16->UTF32->UTF8.\r\n        // See http://unicode.org/faq/utf_bom.html#utf16-3\r\n        var c = str.charCodeAt(i); // possibly a lead surrogate\r\n        if (c <= 0x7F) {\r\n          len++;\r\n        } else if (c <= 0x7FF) {\r\n          len += 2;\r\n        } else if (c >= 0xD800 && c <= 0xDFFF) {\r\n          len += 4; ++i;\r\n        } else {\r\n          len += 3;\r\n        }\r\n      }\r\n      return len;\r\n    };\r\n  \r\n  var stringToUTF8Array = (str, heap, outIdx, maxBytesToWrite) => {\r\n      assert(typeof str === 'string', `stringToUTF8Array expects a string (got ${typeof str})`);\r\n      // Parameter maxBytesToWrite is not optional. Negative values, 0, null,\r\n      // undefined and false each don't write out any bytes.\r\n      if (!(maxBytesToWrite > 0))\r\n        return 0;\r\n  \r\n      var startIdx = outIdx;\r\n      var endIdx = outIdx + maxBytesToWrite - 1; // -1 for string null terminator.\r\n      for (var i = 0; i < str.length; ++i) {\r\n        // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code\r\n        // unit, not a Unicode code point of the character! So decode\r\n        // UTF16->UTF32->UTF8.\r\n        // See http://unicode.org/faq/utf_bom.html#utf16-3\r\n        // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description\r\n        // and https://www.ietf.org/rfc/rfc2279.txt\r\n        // and https://tools.ietf.org/html/rfc3629\r\n        var u = str.charCodeAt(i); // possibly a lead surrogate\r\n        if (u >= 0xD800 && u <= 0xDFFF) {\r\n          var u1 = str.charCodeAt(++i);\r\n          u = 0x10000 + ((u & 0x3FF) << 10) | (u1 & 0x3FF);\r\n        }\r\n        if (u <= 0x7F) {\r\n          if (outIdx >= endIdx) break;\r\n          heap[outIdx++] = u;\r\n        } else if (u <= 0x7FF) {\r\n          if (outIdx + 1 >= endIdx) break;\r\n          heap[outIdx++] = 0xC0 | (u >> 6);\r\n          heap[outIdx++] = 0x80 | (u & 63);\r\n        } else if (u <= 0xFFFF) {\r\n          if (outIdx + 2 >= endIdx) break;\r\n          heap[outIdx++] = 0xE0 | (u >> 12);\r\n          heap[outIdx++] = 0x80 | ((u >> 6) & 63);\r\n          heap[outIdx++] = 0x80 | (u & 63);\r\n        } else {\r\n          if (outIdx + 3 >= endIdx) break;\r\n          if (u > 0x10FFFF) warnOnce('Invalid Unicode code point ' + ptrToString(u) + ' encountered when serializing a JS string to a UTF-8 string in wasm memory! (Valid unicode code points should be in range 0-0x10FFFF).');\r\n          heap[outIdx++] = 0xF0 | (u >> 18);\r\n          heap[outIdx++] = 0x80 | ((u >> 12) & 63);\r\n          heap[outIdx++] = 0x80 | ((u >> 6) & 63);\r\n          heap[outIdx++] = 0x80 | (u & 63);\r\n        }\r\n      }\r\n      // Null-terminate the pointer to the buffer.\r\n      heap[outIdx] = 0;\r\n      return outIdx - startIdx;\r\n    };\r\n  /** @type {function(string, boolean=, number=)} */\r\n  function intArrayFromString(stringy, dontAddNull, length) {\r\n    var len = length > 0 ? length : lengthBytesUTF8(stringy)+1;\r\n    var u8array = new Array(len);\r\n    var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);\r\n    if (dontAddNull) u8array.length = numBytesWritten;\r\n    return u8array;\r\n  }\r\n  var FS_stdin_getChar = () => {\r\n      if (!FS_stdin_getChar_buffer.length) {\r\n        var result = null;\r\n        if (ENVIRONMENT_IS_NODE) {\r\n          // we will read data by chunks of BUFSIZE\r\n          var BUFSIZE = 256;\r\n          var buf = Buffer.alloc(BUFSIZE);\r\n          var bytesRead = 0;\r\n  \r\n          // For some reason we must suppress a closure warning here, even though\r\n          // fd definitely exists on process.stdin, and is even the proper way to\r\n          // get the fd of stdin,\r\n          // https://github.com/nodejs/help/issues/2136#issuecomment-523649904\r\n          // This started to happen after moving this logic out of library_tty.js,\r\n          // so it is related to the surrounding code in some unclear manner.\r\n          /** @suppress {missingProperties} */\r\n          var fd = process.stdin.fd;\r\n  \r\n          try {\r\n            bytesRead = fs.readSync(fd, buf, 0, BUFSIZE);\r\n          } catch(e) {\r\n            // Cross-platform differences: on Windows, reading EOF throws an\r\n            // exception, but on other OSes, reading EOF returns 0. Uniformize\r\n            // behavior by treating the EOF exception to return 0.\r\n            if (e.toString().includes('EOF')) bytesRead = 0;\r\n            else throw e;\r\n          }\r\n  \r\n          if (bytesRead > 0) {\r\n            result = buf.slice(0, bytesRead).toString('utf-8');\r\n          }\r\n        } else\r\n        if (typeof window != 'undefined' &&\r\n          typeof window.prompt == 'function') {\r\n          // Browser.\r\n          result = window.prompt('Input: ');  // returns null on cancel\r\n          if (result !== null) {\r\n            result += '\\n';\r\n          }\r\n        } else\r\n        {}\r\n        if (!result) {\r\n          return null;\r\n        }\r\n        FS_stdin_getChar_buffer = intArrayFromString(result, true);\r\n      }\r\n      return FS_stdin_getChar_buffer.shift();\r\n    };\r\n  var TTY = {\r\n  ttys:[],\r\n  init() {\r\n        // https://github.com/emscripten-core/emscripten/pull/1555\r\n        // if (ENVIRONMENT_IS_NODE) {\r\n        //   // currently, FS.init does not distinguish if process.stdin is a file or TTY\r\n        //   // device, it always assumes it's a TTY device. because of this, we're forcing\r\n        //   // process.stdin to UTF8 encoding to at least make stdin reading compatible\r\n        //   // with text files until FS.init can be refactored.\r\n        //   process.stdin.setEncoding('utf8');\r\n        // }\r\n      },\r\n  shutdown() {\r\n        // https://github.com/emscripten-core/emscripten/pull/1555\r\n        // if (ENVIRONMENT_IS_NODE) {\r\n        //   // inolen: any idea as to why node -e 'process.stdin.read()' wouldn't exit immediately (with process.stdin being a tty)?\r\n        //   // isaacs: because now it's reading from the stream, you've expressed interest in it, so that read() kicks off a _read() which creates a ReadReq operation\r\n        //   // inolen: I thought read() in that case was a synchronous operation that just grabbed some amount of buffered data if it exists?\r\n        //   // isaacs: it is. but it also triggers a _read() call, which calls readStart() on the handle\r\n        //   // isaacs: do process.stdin.pause() and i'd think it'd probably close the pending call\r\n        //   process.stdin.pause();\r\n        // }\r\n      },\r\n  register(dev, ops) {\r\n        TTY.ttys[dev] = { input: [], output: [], ops: ops };\r\n        FS.registerDevice(dev, TTY.stream_ops);\r\n      },\r\n  stream_ops:{\r\n  open(stream) {\r\n          var tty = TTY.ttys[stream.node.rdev];\r\n          if (!tty) {\r\n            throw new FS.ErrnoError(43);\r\n          }\r\n          stream.tty = tty;\r\n          stream.seekable = false;\r\n        },\r\n  close(stream) {\r\n          // flush any pending line data\r\n          stream.tty.ops.fsync(stream.tty);\r\n        },\r\n  fsync(stream) {\r\n          stream.tty.ops.fsync(stream.tty);\r\n        },\r\n  read(stream, buffer, offset, length, pos /* ignored */) {\r\n          if (!stream.tty || !stream.tty.ops.get_char) {\r\n            throw new FS.ErrnoError(60);\r\n          }\r\n          var bytesRead = 0;\r\n          for (var i = 0; i < length; i++) {\r\n            var result;\r\n            try {\r\n              result = stream.tty.ops.get_char(stream.tty);\r\n            } catch (e) {\r\n              throw new FS.ErrnoError(29);\r\n            }\r\n            if (result === undefined && bytesRead === 0) {\r\n              throw new FS.ErrnoError(6);\r\n            }\r\n            if (result === null || result === undefined) break;\r\n            bytesRead++;\r\n            buffer[offset+i] = result;\r\n          }\r\n          if (bytesRead) {\r\n            stream.node.timestamp = Date.now();\r\n          }\r\n          return bytesRead;\r\n        },\r\n  write(stream, buffer, offset, length, pos) {\r\n          if (!stream.tty || !stream.tty.ops.put_char) {\r\n            throw new FS.ErrnoError(60);\r\n          }\r\n          try {\r\n            for (var i = 0; i < length; i++) {\r\n              stream.tty.ops.put_char(stream.tty, buffer[offset+i]);\r\n            }\r\n          } catch (e) {\r\n            throw new FS.ErrnoError(29);\r\n          }\r\n          if (length) {\r\n            stream.node.timestamp = Date.now();\r\n          }\r\n          return i;\r\n        },\r\n  },\r\n  default_tty_ops:{\r\n  get_char(tty) {\r\n          return FS_stdin_getChar();\r\n        },\r\n  put_char(tty, val) {\r\n          if (val === null || val === 10) {\r\n            out(UTF8ArrayToString(tty.output));\r\n            tty.output = [];\r\n          } else {\r\n            if (val != 0) tty.output.push(val); // val == 0 would cut text output off in the middle.\r\n          }\r\n        },\r\n  fsync(tty) {\r\n          if (tty.output && tty.output.length > 0) {\r\n            out(UTF8ArrayToString(tty.output));\r\n            tty.output = [];\r\n          }\r\n        },\r\n  ioctl_tcgets(tty) {\r\n          // typical setting\r\n          return {\r\n            c_iflag: 25856,\r\n            c_oflag: 5,\r\n            c_cflag: 191,\r\n            c_lflag: 35387,\r\n            c_cc: [\r\n              0x03, 0x1c, 0x7f, 0x15, 0x04, 0x00, 0x01, 0x00, 0x11, 0x13, 0x1a, 0x00,\r\n              0x12, 0x0f, 0x17, 0x16, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\r\n              0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\r\n            ]\r\n          };\r\n        },\r\n  ioctl_tcsets(tty, optional_actions, data) {\r\n          // currently just ignore\r\n          return 0;\r\n        },\r\n  ioctl_tiocgwinsz(tty) {\r\n          return [24, 80];\r\n        },\r\n  },\r\n  default_tty1_ops:{\r\n  put_char(tty, val) {\r\n          if (val === null || val === 10) {\r\n            err(UTF8ArrayToString(tty.output));\r\n            tty.output = [];\r\n          } else {\r\n            if (val != 0) tty.output.push(val);\r\n          }\r\n        },\r\n  fsync(tty) {\r\n          if (tty.output && tty.output.length > 0) {\r\n            err(UTF8ArrayToString(tty.output));\r\n            tty.output = [];\r\n          }\r\n        },\r\n  },\r\n  };\r\n  \r\n  \r\n  var zeroMemory = (address, size) => {\r\n      HEAPU8.fill(0, address, address + size);\r\n    };\r\n  \r\n  var mmapAlloc = (size) => {\r\n      abort('internal error: mmapAlloc called but `emscripten_builtin_memalign` native symbol not exported');\r\n    };\r\n  var MEMFS = {\r\n  ops_table:null,\r\n  mount(mount) {\r\n        return MEMFS.createNode(null, '/', 16384 | 511 /* 0777 */, 0);\r\n      },\r\n  createNode(parent, name, mode, dev) {\r\n        if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {\r\n          // no supported\r\n          throw new FS.ErrnoError(63);\r\n        }\r\n        MEMFS.ops_table ||= {\r\n          dir: {\r\n            node: {\r\n              getattr: MEMFS.node_ops.getattr,\r\n              setattr: MEMFS.node_ops.setattr,\r\n              lookup: MEMFS.node_ops.lookup,\r\n              mknod: MEMFS.node_ops.mknod,\r\n              rename: MEMFS.node_ops.rename,\r\n              unlink: MEMFS.node_ops.unlink,\r\n              rmdir: MEMFS.node_ops.rmdir,\r\n              readdir: MEMFS.node_ops.readdir,\r\n              symlink: MEMFS.node_ops.symlink\r\n            },\r\n            stream: {\r\n              llseek: MEMFS.stream_ops.llseek\r\n            }\r\n          },\r\n          file: {\r\n            node: {\r\n              getattr: MEMFS.node_ops.getattr,\r\n              setattr: MEMFS.node_ops.setattr\r\n            },\r\n            stream: {\r\n              llseek: MEMFS.stream_ops.llseek,\r\n              read: MEMFS.stream_ops.read,\r\n              write: MEMFS.stream_ops.write,\r\n              allocate: MEMFS.stream_ops.allocate,\r\n              mmap: MEMFS.stream_ops.mmap,\r\n              msync: MEMFS.stream_ops.msync\r\n            }\r\n          },\r\n          link: {\r\n            node: {\r\n              getattr: MEMFS.node_ops.getattr,\r\n              setattr: MEMFS.node_ops.setattr,\r\n              readlink: MEMFS.node_ops.readlink\r\n            },\r\n            stream: {}\r\n          },\r\n          chrdev: {\r\n            node: {\r\n              getattr: MEMFS.node_ops.getattr,\r\n              setattr: MEMFS.node_ops.setattr\r\n            },\r\n            stream: FS.chrdev_stream_ops\r\n          }\r\n        };\r\n        var node = FS.createNode(parent, name, mode, dev);\r\n        if (FS.isDir(node.mode)) {\r\n          node.node_ops = MEMFS.ops_table.dir.node;\r\n          node.stream_ops = MEMFS.ops_table.dir.stream;\r\n          node.contents = {};\r\n        } else if (FS.isFile(node.mode)) {\r\n          node.node_ops = MEMFS.ops_table.file.node;\r\n          node.stream_ops = MEMFS.ops_table.file.stream;\r\n          node.usedBytes = 0; // The actual number of bytes used in the typed array, as opposed to contents.length which gives the whole capacity.\r\n          // When the byte data of the file is populated, this will point to either a typed array, or a normal JS array. Typed arrays are preferred\r\n          // for performance, and used by default. However, typed arrays are not resizable like normal JS arrays are, so there is a small disk size\r\n          // penalty involved for appending file writes that continuously grow a file similar to std::vector capacity vs used -scheme.\r\n          node.contents = null; \r\n        } else if (FS.isLink(node.mode)) {\r\n          node.node_ops = MEMFS.ops_table.link.node;\r\n          node.stream_ops = MEMFS.ops_table.link.stream;\r\n        } else if (FS.isChrdev(node.mode)) {\r\n          node.node_ops = MEMFS.ops_table.chrdev.node;\r\n          node.stream_ops = MEMFS.ops_table.chrdev.stream;\r\n        }\r\n        node.timestamp = Date.now();\r\n        // add the new node to the parent\r\n        if (parent) {\r\n          parent.contents[name] = node;\r\n          parent.timestamp = node.timestamp;\r\n        }\r\n        return node;\r\n      },\r\n  getFileDataAsTypedArray(node) {\r\n        if (!node.contents) return new Uint8Array(0);\r\n        if (node.contents.subarray) return node.contents.subarray(0, node.usedBytes); // Make sure to not return excess unused bytes.\r\n        return new Uint8Array(node.contents);\r\n      },\r\n  expandFileStorage(node, newCapacity) {\r\n        var prevCapacity = node.contents ? node.contents.length : 0;\r\n        if (prevCapacity >= newCapacity) return; // No need to expand, the storage was already large enough.\r\n        // Don't expand strictly to the given requested limit if it's only a very small increase, but instead geometrically grow capacity.\r\n        // For small filesizes (<1MB), perform size*2 geometric increase, but for large sizes, do a much more conservative size*1.125 increase to\r\n        // avoid overshooting the allocation cap by a very large margin.\r\n        var CAPACITY_DOUBLING_MAX = 1024 * 1024;\r\n        newCapacity = Math.max(newCapacity, (prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2.0 : 1.125)) >>> 0);\r\n        if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256); // At minimum allocate 256b for each file when expanding.\r\n        var oldContents = node.contents;\r\n        node.contents = new Uint8Array(newCapacity); // Allocate new storage.\r\n        if (node.usedBytes > 0) node.contents.set(oldContents.subarray(0, node.usedBytes), 0); // Copy old data over to the new storage.\r\n      },\r\n  resizeFileStorage(node, newSize) {\r\n        if (node.usedBytes == newSize) return;\r\n        if (newSize == 0) {\r\n          node.contents = null; // Fully decommit when requesting a resize to zero.\r\n          node.usedBytes = 0;\r\n        } else {\r\n          var oldContents = node.contents;\r\n          node.contents = new Uint8Array(newSize); // Allocate new storage.\r\n          if (oldContents) {\r\n            node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes))); // Copy old data over to the new storage.\r\n          }\r\n          node.usedBytes = newSize;\r\n        }\r\n      },\r\n  node_ops:{\r\n  getattr(node) {\r\n          var attr = {};\r\n          // device numbers reuse inode numbers.\r\n          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;\r\n          attr.ino = node.id;\r\n          attr.mode = node.mode;\r\n          attr.nlink = 1;\r\n          attr.uid = 0;\r\n          attr.gid = 0;\r\n          attr.rdev = node.rdev;\r\n          if (FS.isDir(node.mode)) {\r\n            attr.size = 4096;\r\n          } else if (FS.isFile(node.mode)) {\r\n            attr.size = node.usedBytes;\r\n          } else if (FS.isLink(node.mode)) {\r\n            attr.size = node.link.length;\r\n          } else {\r\n            attr.size = 0;\r\n          }\r\n          attr.atime = new Date(node.timestamp);\r\n          attr.mtime = new Date(node.timestamp);\r\n          attr.ctime = new Date(node.timestamp);\r\n          // NOTE: In our implementation, st_blocks = Math.ceil(st_size/st_blksize),\r\n          //       but this is not required by the standard.\r\n          attr.blksize = 4096;\r\n          attr.blocks = Math.ceil(attr.size / attr.blksize);\r\n          return attr;\r\n        },\r\n  setattr(node, attr) {\r\n          if (attr.mode !== undefined) {\r\n            node.mode = attr.mode;\r\n          }\r\n          if (attr.timestamp !== undefined) {\r\n            node.timestamp = attr.timestamp;\r\n          }\r\n          if (attr.size !== undefined) {\r\n            MEMFS.resizeFileStorage(node, attr.size);\r\n          }\r\n        },\r\n  lookup(parent, name) {\r\n          throw FS.genericErrors[44];\r\n        },\r\n  mknod(parent, name, mode, dev) {\r\n          return MEMFS.createNode(parent, name, mode, dev);\r\n        },\r\n  rename(old_node, new_dir, new_name) {\r\n          // if we're overwriting a directory at new_name, make sure it's empty.\r\n          if (FS.isDir(old_node.mode)) {\r\n            var new_node;\r\n            try {\r\n              new_node = FS.lookupNode(new_dir, new_name);\r\n            } catch (e) {\r\n            }\r\n            if (new_node) {\r\n              for (var i in new_node.contents) {\r\n                throw new FS.ErrnoError(55);\r\n              }\r\n            }\r\n          }\r\n          // do the internal rewiring\r\n          delete old_node.parent.contents[old_node.name];\r\n          old_node.parent.timestamp = Date.now()\r\n          old_node.name = new_name;\r\n          new_dir.contents[new_name] = old_node;\r\n          new_dir.timestamp = old_node.parent.timestamp;\r\n        },\r\n  unlink(parent, name) {\r\n          delete parent.contents[name];\r\n          parent.timestamp = Date.now();\r\n        },\r\n  rmdir(parent, name) {\r\n          var node = FS.lookupNode(parent, name);\r\n          for (var i in node.contents) {\r\n            throw new FS.ErrnoError(55);\r\n          }\r\n          delete parent.contents[name];\r\n          parent.timestamp = Date.now();\r\n        },\r\n  readdir(node) {\r\n          var entries = ['.', '..'];\r\n          for (var key of Object.keys(node.contents)) {\r\n            entries.push(key);\r\n          }\r\n          return entries;\r\n        },\r\n  symlink(parent, newname, oldpath) {\r\n          var node = MEMFS.createNode(parent, newname, 511 /* 0777 */ | 40960, 0);\r\n          node.link = oldpath;\r\n          return node;\r\n        },\r\n  readlink(node) {\r\n          if (!FS.isLink(node.mode)) {\r\n            throw new FS.ErrnoError(28);\r\n          }\r\n          return node.link;\r\n        },\r\n  },\r\n  stream_ops:{\r\n  read(stream, buffer, offset, length, position) {\r\n          var contents = stream.node.contents;\r\n          if (position >= stream.node.usedBytes) return 0;\r\n          var size = Math.min(stream.node.usedBytes - position, length);\r\n          assert(size >= 0);\r\n          if (size > 8 && contents.subarray) { // non-trivial, and typed array\r\n            buffer.set(contents.subarray(position, position + size), offset);\r\n          } else {\r\n            for (var i = 0; i < size; i++) buffer[offset + i] = contents[position + i];\r\n          }\r\n          return size;\r\n        },\r\n  write(stream, buffer, offset, length, position, canOwn) {\r\n          // The data buffer should be a typed array view\r\n          assert(!(buffer instanceof ArrayBuffer));\r\n  \r\n          if (!length) return 0;\r\n          var node = stream.node;\r\n          node.timestamp = Date.now();\r\n  \r\n          if (buffer.subarray && (!node.contents || node.contents.subarray)) { // This write is from a typed array to a typed array?\r\n            if (canOwn) {\r\n              assert(position === 0, 'canOwn must imply no weird position inside the file');\r\n              node.contents = buffer.subarray(offset, offset + length);\r\n              node.usedBytes = length;\r\n              return length;\r\n            } else if (node.usedBytes === 0 && position === 0) { // If this is a simple first write to an empty file, do a fast set since we don't need to care about old data.\r\n              node.contents = buffer.slice(offset, offset + length);\r\n              node.usedBytes = length;\r\n              return length;\r\n            } else if (position + length <= node.usedBytes) { // Writing to an already allocated and used subrange of the file?\r\n              node.contents.set(buffer.subarray(offset, offset + length), position);\r\n              return length;\r\n            }\r\n          }\r\n  \r\n          // Appending to an existing file and we need to reallocate, or source data did not come as a typed array.\r\n          MEMFS.expandFileStorage(node, position+length);\r\n          if (node.contents.subarray && buffer.subarray) {\r\n            // Use typed array write which is available.\r\n            node.contents.set(buffer.subarray(offset, offset + length), position);\r\n          } else {\r\n            for (var i = 0; i < length; i++) {\r\n             node.contents[position + i] = buffer[offset + i]; // Or fall back to manual write if not.\r\n            }\r\n          }\r\n          node.usedBytes = Math.max(node.usedBytes, position + length);\r\n          return length;\r\n        },\r\n  llseek(stream, offset, whence) {\r\n          var position = offset;\r\n          if (whence === 1) {\r\n            position += stream.position;\r\n          } else if (whence === 2) {\r\n            if (FS.isFile(stream.node.mode)) {\r\n              position += stream.node.usedBytes;\r\n            }\r\n          }\r\n          if (position < 0) {\r\n            throw new FS.ErrnoError(28);\r\n          }\r\n          return position;\r\n        },\r\n  allocate(stream, offset, length) {\r\n          MEMFS.expandFileStorage(stream.node, offset + length);\r\n          stream.node.usedBytes = Math.max(stream.node.usedBytes, offset + length);\r\n        },\r\n  mmap(stream, length, position, prot, flags) {\r\n          if (!FS.isFile(stream.node.mode)) {\r\n            throw new FS.ErrnoError(43);\r\n          }\r\n          var ptr;\r\n          var allocated;\r\n          var contents = stream.node.contents;\r\n          // Only make a new copy when MAP_PRIVATE is specified.\r\n          if (!(flags & 2) && contents && contents.buffer === HEAP8.buffer) {\r\n            // We can't emulate MAP_SHARED when the file is not backed by the\r\n            // buffer we're mapping to (e.g. the HEAP buffer).\r\n            allocated = false;\r\n            ptr = contents.byteOffset;\r\n          } else {\r\n            allocated = true;\r\n            ptr = mmapAlloc(length);\r\n            if (!ptr) {\r\n              throw new FS.ErrnoError(48);\r\n            }\r\n            if (contents) {\r\n              // Try to avoid unnecessary slices.\r\n              if (position > 0 || position + length < contents.length) {\r\n                if (contents.subarray) {\r\n                  contents = contents.subarray(position, position + length);\r\n                } else {\r\n                  contents = Array.prototype.slice.call(contents, position, position + length);\r\n                }\r\n              }\r\n              HEAP8.set(contents, ptr);\r\n            }\r\n          }\r\n          return { ptr, allocated };\r\n        },\r\n  msync(stream, buffer, offset, length, mmapFlags) {\r\n          MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false);\r\n          // should we check if bytesWritten and length are the same?\r\n          return 0;\r\n        },\r\n  },\r\n  };\r\n  \r\n  /** @param {boolean=} noRunDep */\r\n  var asyncLoad = (url, onload, onerror, noRunDep) => {\r\n      var dep = !noRunDep ? getUniqueRunDependency(`al ${url}`) : '';\r\n      readAsync(url).then(\r\n        (arrayBuffer) => {\r\n          assert(arrayBuffer, `Loading data file \"${url}\" failed (no arrayBuffer).`);\r\n          onload(new Uint8Array(arrayBuffer));\r\n          if (dep) removeRunDependency(dep);\r\n        },\r\n        (err) => {\r\n          if (onerror) {\r\n            onerror();\r\n          } else {\r\n            throw `Loading data file \"${url}\" failed.`;\r\n          }\r\n        }\r\n      );\r\n      if (dep) addRunDependency(dep);\r\n    };\r\n  \r\n  \r\n  var FS_createDataFile = (parent, name, fileData, canRead, canWrite, canOwn) => {\r\n      FS.createDataFile(parent, name, fileData, canRead, canWrite, canOwn);\r\n    };\r\n  \r\n  var preloadPlugins = Module['preloadPlugins'] || [];\r\n  var FS_handledByPreloadPlugin = (byteArray, fullname, finish, onerror) => {\r\n      // Ensure plugins are ready.\r\n      if (typeof Browser != 'undefined') Browser.init();\r\n  \r\n      var handled = false;\r\n      preloadPlugins.forEach((plugin) => {\r\n        if (handled) return;\r\n        if (plugin['canHandle'](fullname)) {\r\n          plugin['handle'](byteArray, fullname, finish, onerror);\r\n          handled = true;\r\n        }\r\n      });\r\n      return handled;\r\n    };\r\n  var FS_createPreloadedFile = (parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn, preFinish) => {\r\n      // TODO we should allow people to just pass in a complete filename instead\r\n      // of parent and name being that we just join them anyways\r\n      var fullname = name ? PATH_FS.resolve(PATH.join2(parent, name)) : parent;\r\n      var dep = getUniqueRunDependency(`cp ${fullname}`); // might have several active requests for the same fullname\r\n      function processData(byteArray) {\r\n        function finish(byteArray) {\r\n          preFinish?.();\r\n          if (!dontCreateFile) {\r\n            FS_createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);\r\n          }\r\n          onload?.();\r\n          removeRunDependency(dep);\r\n        }\r\n        if (FS_handledByPreloadPlugin(byteArray, fullname, finish, () => {\r\n          onerror?.();\r\n          removeRunDependency(dep);\r\n        })) {\r\n          return;\r\n        }\r\n        finish(byteArray);\r\n      }\r\n      addRunDependency(dep);\r\n      if (typeof url == 'string') {\r\n        asyncLoad(url, processData, onerror);\r\n      } else {\r\n        processData(url);\r\n      }\r\n    };\r\n  \r\n  var FS_modeStringToFlags = (str) => {\r\n      var flagModes = {\r\n        'r': 0,\r\n        'r+': 2,\r\n        'w': 512 | 64 | 1,\r\n        'w+': 512 | 64 | 2,\r\n        'a': 1024 | 64 | 1,\r\n        'a+': 1024 | 64 | 2,\r\n      };\r\n      var flags = flagModes[str];\r\n      if (typeof flags == 'undefined') {\r\n        throw new Error(`Unknown file open mode: ${str}`);\r\n      }\r\n      return flags;\r\n    };\r\n  \r\n  var FS_getMode = (canRead, canWrite) => {\r\n      var mode = 0;\r\n      if (canRead) mode |= 292 | 73;\r\n      if (canWrite) mode |= 146;\r\n      return mode;\r\n    };\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n    /**\r\n     * Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the\r\n     * emscripten HEAP, returns a copy of that string as a Javascript String object.\r\n     *\r\n     * @param {number} ptr\r\n     * @param {number=} maxBytesToRead - An optional length that specifies the\r\n     *   maximum number of bytes to read. You can omit this parameter to scan the\r\n     *   string until the first 0 byte. If maxBytesToRead is passed, and the string\r\n     *   at [ptr, ptr+maxBytesToReadr[ contains a null byte in the middle, then the\r\n     *   string will cut short at that byte index (i.e. maxBytesToRead will not\r\n     *   produce a string of exact length [ptr, ptr+maxBytesToRead[) N.B. mixing\r\n     *   frequent uses of UTF8ToString() with and without maxBytesToRead may throw\r\n     *   JS JIT optimizations off, so it is worth to consider consistently using one\r\n     * @return {string}\r\n     */\r\n  var UTF8ToString = (ptr, maxBytesToRead) => {\r\n      assert(typeof ptr == 'number', `UTF8ToString expects a number (got ${typeof ptr})`);\r\n      return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : '';\r\n    };\r\n  \r\n  var strError = (errno) => {\r\n      return UTF8ToString(_strerror(errno));\r\n    };\r\n  \r\n  var ERRNO_CODES = {\r\n      'EPERM': 63,\r\n      'ENOENT': 44,\r\n      'ESRCH': 71,\r\n      'EINTR': 27,\r\n      'EIO': 29,\r\n      'ENXIO': 60,\r\n      'E2BIG': 1,\r\n      'ENOEXEC': 45,\r\n      'EBADF': 8,\r\n      'ECHILD': 12,\r\n      'EAGAIN': 6,\r\n      'EWOULDBLOCK': 6,\r\n      'ENOMEM': 48,\r\n      'EACCES': 2,\r\n      'EFAULT': 21,\r\n      'ENOTBLK': 105,\r\n      'EBUSY': 10,\r\n      'EEXIST': 20,\r\n      'EXDEV': 75,\r\n      'ENODEV': 43,\r\n      'ENOTDIR': 54,\r\n      'EISDIR': 31,\r\n      'EINVAL': 28,\r\n      'ENFILE': 41,\r\n      'EMFILE': 33,\r\n      'ENOTTY': 59,\r\n      'ETXTBSY': 74,\r\n      'EFBIG': 22,\r\n      'ENOSPC': 51,\r\n      'ESPIPE': 70,\r\n      'EROFS': 69,\r\n      'EMLINK': 34,\r\n      'EPIPE': 64,\r\n      'EDOM': 18,\r\n      'ERANGE': 68,\r\n      'ENOMSG': 49,\r\n      'EIDRM': 24,\r\n      'ECHRNG': 106,\r\n      'EL2NSYNC': 156,\r\n      'EL3HLT': 107,\r\n      'EL3RST': 108,\r\n      'ELNRNG': 109,\r\n      'EUNATCH': 110,\r\n      'ENOCSI': 111,\r\n      'EL2HLT': 112,\r\n      'EDEADLK': 16,\r\n      'ENOLCK': 46,\r\n      'EBADE': 113,\r\n      'EBADR': 114,\r\n      'EXFULL': 115,\r\n      'ENOANO': 104,\r\n      'EBADRQC': 103,\r\n      'EBADSLT': 102,\r\n      'EDEADLOCK': 16,\r\n      'EBFONT': 101,\r\n      'ENOSTR': 100,\r\n      'ENODATA': 116,\r\n      'ETIME': 117,\r\n      'ENOSR': 118,\r\n      'ENONET': 119,\r\n      'ENOPKG': 120,\r\n      'EREMOTE': 121,\r\n      'ENOLINK': 47,\r\n      'EADV': 122,\r\n      'ESRMNT': 123,\r\n      'ECOMM': 124,\r\n      'EPROTO': 65,\r\n      'EMULTIHOP': 36,\r\n      'EDOTDOT': 125,\r\n      'EBADMSG': 9,\r\n      'ENOTUNIQ': 126,\r\n      'EBADFD': 127,\r\n      'EREMCHG': 128,\r\n      'ELIBACC': 129,\r\n      'ELIBBAD': 130,\r\n      'ELIBSCN': 131,\r\n      'ELIBMAX': 132,\r\n      'ELIBEXEC': 133,\r\n      'ENOSYS': 52,\r\n      'ENOTEMPTY': 55,\r\n      'ENAMETOOLONG': 37,\r\n      'ELOOP': 32,\r\n      'EOPNOTSUPP': 138,\r\n      'EPFNOSUPPORT': 139,\r\n      'ECONNRESET': 15,\r\n      'ENOBUFS': 42,\r\n      'EAFNOSUPPORT': 5,\r\n      'EPROTOTYPE': 67,\r\n      'ENOTSOCK': 57,\r\n      'ENOPROTOOPT': 50,\r\n      'ESHUTDOWN': 140,\r\n      'ECONNREFUSED': 14,\r\n      'EADDRINUSE': 3,\r\n      'ECONNABORTED': 13,\r\n      'ENETUNREACH': 40,\r\n      'ENETDOWN': 38,\r\n      'ETIMEDOUT': 73,\r\n      'EHOSTDOWN': 142,\r\n      'EHOSTUNREACH': 23,\r\n      'EINPROGRESS': 26,\r\n      'EALREADY': 7,\r\n      'EDESTADDRREQ': 17,\r\n      'EMSGSIZE': 35,\r\n      'EPROTONOSUPPORT': 66,\r\n      'ESOCKTNOSUPPORT': 137,\r\n      'EADDRNOTAVAIL': 4,\r\n      'ENETRESET': 39,\r\n      'EISCONN': 30,\r\n      'ENOTCONN': 53,\r\n      'ETOOMANYREFS': 141,\r\n      'EUSERS': 136,\r\n      'EDQUOT': 19,\r\n      'ESTALE': 72,\r\n      'ENOTSUP': 138,\r\n      'ENOMEDIUM': 148,\r\n      'EILSEQ': 25,\r\n      'EOVERFLOW': 61,\r\n      'ECANCELED': 11,\r\n      'ENOTRECOVERABLE': 56,\r\n      'EOWNERDEAD': 62,\r\n      'ESTRPIPE': 135,\r\n    };\r\n  var FS = {\r\n  root:null,\r\n  mounts:[],\r\n  devices:{\r\n  },\r\n  streams:[],\r\n  nextInode:1,\r\n  nameTable:null,\r\n  currentPath:\"/\",\r\n  initialized:false,\r\n  ignorePermissions:true,\r\n  ErrnoError:class extends Error {\r\n        // We set the `name` property to be able to identify `FS.ErrnoError`\r\n        // - the `name` is a standard ECMA-262 property of error objects. Kind of good to have it anyway.\r\n        // - when using PROXYFS, an error can come from an underlying FS\r\n        // as different FS objects have their own FS.ErrnoError each,\r\n        // the test `err instanceof FS.ErrnoError` won't detect an error coming from another filesystem, causing bugs.\r\n        // we'll use the reliable test `err.name == \"ErrnoError\"` instead\r\n        constructor(errno) {\r\n          super(runtimeInitialized ? strError(errno) : '');\r\n          // TODO(sbc): Use the inline member declaration syntax once we\r\n          // support it in acorn and closure.\r\n          this.name = 'ErrnoError';\r\n          this.errno = errno;\r\n          for (var key in ERRNO_CODES) {\r\n            if (ERRNO_CODES[key] === errno) {\r\n              this.code = key;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      },\r\n  genericErrors:{\r\n  },\r\n  filesystems:null,\r\n  syncFSRequests:0,\r\n  readFiles:{\r\n  },\r\n  FSStream:class {\r\n        constructor() {\r\n          // TODO(https://github.com/emscripten-core/emscripten/issues/21414):\r\n          // Use inline field declarations.\r\n          this.shared = {};\r\n        }\r\n        get object() {\r\n          return this.node;\r\n        }\r\n        set object(val) {\r\n          this.node = val;\r\n        }\r\n        get isRead() {\r\n          return (this.flags & 2097155) !== 1;\r\n        }\r\n        get isWrite() {\r\n          return (this.flags & 2097155) !== 0;\r\n        }\r\n        get isAppend() {\r\n          return (this.flags & 1024);\r\n        }\r\n        get flags() {\r\n          return this.shared.flags;\r\n        }\r\n        set flags(val) {\r\n          this.shared.flags = val;\r\n        }\r\n        get position() {\r\n          return this.shared.position;\r\n        }\r\n        set position(val) {\r\n          this.shared.position = val;\r\n        }\r\n      },\r\n  FSNode:class {\r\n        constructor(parent, name, mode, rdev) {\r\n          if (!parent) {\r\n            parent = this;  // root node sets parent to itself\r\n          }\r\n          this.parent = parent;\r\n          this.mount = parent.mount;\r\n          this.mounted = null;\r\n          this.id = FS.nextInode++;\r\n          this.name = name;\r\n          this.mode = mode;\r\n          this.node_ops = {};\r\n          this.stream_ops = {};\r\n          this.rdev = rdev;\r\n          this.readMode = 292 | 73;\r\n          this.writeMode = 146;\r\n        }\r\n        get read() {\r\n          return (this.mode & this.readMode) === this.readMode;\r\n        }\r\n        set read(val) {\r\n          val ? this.mode |= this.readMode : this.mode &= ~this.readMode;\r\n        }\r\n        get write() {\r\n          return (this.mode & this.writeMode) === this.writeMode;\r\n        }\r\n        set write(val) {\r\n          val ? this.mode |= this.writeMode : this.mode &= ~this.writeMode;\r\n        }\r\n        get isFolder() {\r\n          return FS.isDir(this.mode);\r\n        }\r\n        get isDevice() {\r\n          return FS.isChrdev(this.mode);\r\n        }\r\n      },\r\n  lookupPath(path, opts = {}) {\r\n        path = PATH_FS.resolve(path);\r\n  \r\n        if (!path) return { path: '', node: null };\r\n  \r\n        var defaults = {\r\n          follow_mount: true,\r\n          recurse_count: 0\r\n        };\r\n        opts = Object.assign(defaults, opts)\r\n  \r\n        if (opts.recurse_count > 8) {  // max recursive lookup of 8\r\n          throw new FS.ErrnoError(32);\r\n        }\r\n  \r\n        // split the absolute path\r\n        var parts = path.split('/').filter((p) => !!p);\r\n  \r\n        // start at the root\r\n        var current = FS.root;\r\n        var current_path = '/';\r\n  \r\n        for (var i = 0; i < parts.length; i++) {\r\n          var islast = (i === parts.length-1);\r\n          if (islast && opts.parent) {\r\n            // stop resolving\r\n            break;\r\n          }\r\n  \r\n          current = FS.lookupNode(current, parts[i]);\r\n          current_path = PATH.join2(current_path, parts[i]);\r\n  \r\n          // jump to the mount's root node if this is a mountpoint\r\n          if (FS.isMountpoint(current)) {\r\n            if (!islast || (islast && opts.follow_mount)) {\r\n              current = current.mounted.root;\r\n            }\r\n          }\r\n  \r\n          // by default, lookupPath will not follow a symlink if it is the final path component.\r\n          // setting opts.follow = true will override this behavior.\r\n          if (!islast || opts.follow) {\r\n            var count = 0;\r\n            while (FS.isLink(current.mode)) {\r\n              var link = FS.readlink(current_path);\r\n              current_path = PATH_FS.resolve(PATH.dirname(current_path), link);\r\n  \r\n              var lookup = FS.lookupPath(current_path, { recurse_count: opts.recurse_count + 1 });\r\n              current = lookup.node;\r\n  \r\n              if (count++ > 40) {  // limit max consecutive symlinks to 40 (SYMLOOP_MAX).\r\n                throw new FS.ErrnoError(32);\r\n              }\r\n            }\r\n          }\r\n        }\r\n  \r\n        return { path: current_path, node: current };\r\n      },\r\n  getPath(node) {\r\n        var path;\r\n        while (true) {\r\n          if (FS.isRoot(node)) {\r\n            var mount = node.mount.mountpoint;\r\n            if (!path) return mount;\r\n            return mount[mount.length-1] !== '/' ? `${mount}/${path}` : mount + path;\r\n          }\r\n          path = path ? `${node.name}/${path}` : node.name;\r\n          node = node.parent;\r\n        }\r\n      },\r\n  hashName(parentid, name) {\r\n        var hash = 0;\r\n  \r\n        for (var i = 0; i < name.length; i++) {\r\n          hash = ((hash << 5) - hash + name.charCodeAt(i)) | 0;\r\n        }\r\n        return ((parentid + hash) >>> 0) % FS.nameTable.length;\r\n      },\r\n  hashAddNode(node) {\r\n        var hash = FS.hashName(node.parent.id, node.name);\r\n        node.name_next = FS.nameTable[hash];\r\n        FS.nameTable[hash] = node;\r\n      },\r\n  hashRemoveNode(node) {\r\n        var hash = FS.hashName(node.parent.id, node.name);\r\n        if (FS.nameTable[hash] === node) {\r\n          FS.nameTable[hash] = node.name_next;\r\n        } else {\r\n          var current = FS.nameTable[hash];\r\n          while (current) {\r\n            if (current.name_next === node) {\r\n              current.name_next = node.name_next;\r\n              break;\r\n            }\r\n            current = current.name_next;\r\n          }\r\n        }\r\n      },\r\n  lookupNode(parent, name) {\r\n        var errCode = FS.mayLookup(parent);\r\n        if (errCode) {\r\n          throw new FS.ErrnoError(errCode);\r\n        }\r\n        var hash = FS.hashName(parent.id, name);\r\n        for (var node = FS.nameTable[hash]; node; node = node.name_next) {\r\n          var nodeName = node.name;\r\n          if (node.parent.id === parent.id && nodeName === name) {\r\n            return node;\r\n          }\r\n        }\r\n        // if we failed to find it in the cache, call into the VFS\r\n        return FS.lookup(parent, name);\r\n      },\r\n  createNode(parent, name, mode, rdev) {\r\n        assert(typeof parent == 'object')\r\n        var node = new FS.FSNode(parent, name, mode, rdev);\r\n  \r\n        FS.hashAddNode(node);\r\n  \r\n        return node;\r\n      },\r\n  destroyNode(node) {\r\n        FS.hashRemoveNode(node);\r\n      },\r\n  isRoot(node) {\r\n        return node === node.parent;\r\n      },\r\n  isMountpoint(node) {\r\n        return !!node.mounted;\r\n      },\r\n  isFile(mode) {\r\n        return (mode & 61440) === 32768;\r\n      },\r\n  isDir(mode) {\r\n        return (mode & 61440) === 16384;\r\n      },\r\n  isLink(mode) {\r\n        return (mode & 61440) === 40960;\r\n      },\r\n  isChrdev(mode) {\r\n        return (mode & 61440) === 8192;\r\n      },\r\n  isBlkdev(mode) {\r\n        return (mode & 61440) === 24576;\r\n      },\r\n  isFIFO(mode) {\r\n        return (mode & 61440) === 4096;\r\n      },\r\n  isSocket(mode) {\r\n        return (mode & 49152) === 49152;\r\n      },\r\n  flagsToPermissionString(flag) {\r\n        var perms = ['r', 'w', 'rw'][flag & 3];\r\n        if ((flag & 512)) {\r\n          perms += 'w';\r\n        }\r\n        return perms;\r\n      },\r\n  nodePermissions(node, perms) {\r\n        if (FS.ignorePermissions) {\r\n          return 0;\r\n        }\r\n        // return 0 if any user, group or owner bits are set.\r\n        if (perms.includes('r') && !(node.mode & 292)) {\r\n          return 2;\r\n        } else if (perms.includes('w') && !(node.mode & 146)) {\r\n          return 2;\r\n        } else if (perms.includes('x') && !(node.mode & 73)) {\r\n          return 2;\r\n        }\r\n        return 0;\r\n      },\r\n  mayLookup(dir) {\r\n        if (!FS.isDir(dir.mode)) return 54;\r\n        var errCode = FS.nodePermissions(dir, 'x');\r\n        if (errCode) return errCode;\r\n        if (!dir.node_ops.lookup) return 2;\r\n        return 0;\r\n      },\r\n  mayCreate(dir, name) {\r\n        try {\r\n          var node = FS.lookupNode(dir, name);\r\n          return 20;\r\n        } catch (e) {\r\n        }\r\n        return FS.nodePermissions(dir, 'wx');\r\n      },\r\n  mayDelete(dir, name, isdir) {\r\n        var node;\r\n        try {\r\n          node = FS.lookupNode(dir, name);\r\n        } catch (e) {\r\n          return e.errno;\r\n        }\r\n        var errCode = FS.nodePermissions(dir, 'wx');\r\n        if (errCode) {\r\n          return errCode;\r\n        }\r\n        if (isdir) {\r\n          if (!FS.isDir(node.mode)) {\r\n            return 54;\r\n          }\r\n          if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {\r\n            return 10;\r\n          }\r\n        } else {\r\n          if (FS.isDir(node.mode)) {\r\n            return 31;\r\n          }\r\n        }\r\n        return 0;\r\n      },\r\n  mayOpen(node, flags) {\r\n        if (!node) {\r\n          return 44;\r\n        }\r\n        if (FS.isLink(node.mode)) {\r\n          return 32;\r\n        } else if (FS.isDir(node.mode)) {\r\n          if (FS.flagsToPermissionString(flags) !== 'r' || // opening for write\r\n              (flags & 512)) { // TODO: check for O_SEARCH? (== search for dir only)\r\n            return 31;\r\n          }\r\n        }\r\n        return FS.nodePermissions(node, FS.flagsToPermissionString(flags));\r\n      },\r\n  MAX_OPEN_FDS:4096,\r\n  nextfd() {\r\n        for (var fd = 0; fd <= FS.MAX_OPEN_FDS; fd++) {\r\n          if (!FS.streams[fd]) {\r\n            return fd;\r\n          }\r\n        }\r\n        throw new FS.ErrnoError(33);\r\n      },\r\n  getStreamChecked(fd) {\r\n        var stream = FS.getStream(fd);\r\n        if (!stream) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        return stream;\r\n      },\r\n  getStream:(fd) => FS.streams[fd],\r\n  createStream(stream, fd = -1) {\r\n        assert(fd >= -1);\r\n  \r\n        // clone it, so we can return an instance of FSStream\r\n        stream = Object.assign(new FS.FSStream(), stream);\r\n        if (fd == -1) {\r\n          fd = FS.nextfd();\r\n        }\r\n        stream.fd = fd;\r\n        FS.streams[fd] = stream;\r\n        return stream;\r\n      },\r\n  closeStream(fd) {\r\n        FS.streams[fd] = null;\r\n      },\r\n  dupStream(origStream, fd = -1) {\r\n        var stream = FS.createStream(origStream, fd);\r\n        stream.stream_ops?.dup?.(stream);\r\n        return stream;\r\n      },\r\n  chrdev_stream_ops:{\r\n  open(stream) {\r\n          var device = FS.getDevice(stream.node.rdev);\r\n          // override node's stream ops with the device's\r\n          stream.stream_ops = device.stream_ops;\r\n          // forward the open call\r\n          stream.stream_ops.open?.(stream);\r\n        },\r\n  llseek() {\r\n          throw new FS.ErrnoError(70);\r\n        },\r\n  },\r\n  major:(dev) => ((dev) >> 8),\r\n  minor:(dev) => ((dev) & 0xff),\r\n  makedev:(ma, mi) => ((ma) << 8 | (mi)),\r\n  registerDevice(dev, ops) {\r\n        FS.devices[dev] = { stream_ops: ops };\r\n      },\r\n  getDevice:(dev) => FS.devices[dev],\r\n  getMounts(mount) {\r\n        var mounts = [];\r\n        var check = [mount];\r\n  \r\n        while (check.length) {\r\n          var m = check.pop();\r\n  \r\n          mounts.push(m);\r\n  \r\n          check.push(...m.mounts);\r\n        }\r\n  \r\n        return mounts;\r\n      },\r\n  syncfs(populate, callback) {\r\n        if (typeof populate == 'function') {\r\n          callback = populate;\r\n          populate = false;\r\n        }\r\n  \r\n        FS.syncFSRequests++;\r\n  \r\n        if (FS.syncFSRequests > 1) {\r\n          err(`warning: ${FS.syncFSRequests} FS.syncfs operations in flight at once, probably just doing extra work`);\r\n        }\r\n  \r\n        var mounts = FS.getMounts(FS.root.mount);\r\n        var completed = 0;\r\n  \r\n        function doCallback(errCode) {\r\n          assert(FS.syncFSRequests > 0);\r\n          FS.syncFSRequests--;\r\n          return callback(errCode);\r\n        }\r\n  \r\n        function done(errCode) {\r\n          if (errCode) {\r\n            if (!done.errored) {\r\n              done.errored = true;\r\n              return doCallback(errCode);\r\n            }\r\n            return;\r\n          }\r\n          if (++completed >= mounts.length) {\r\n            doCallback(null);\r\n          }\r\n        };\r\n  \r\n        // sync all mounts\r\n        mounts.forEach((mount) => {\r\n          if (!mount.type.syncfs) {\r\n            return done(null);\r\n          }\r\n          mount.type.syncfs(mount, populate, done);\r\n        });\r\n      },\r\n  mount(type, opts, mountpoint) {\r\n        if (typeof type == 'string') {\r\n          // The filesystem was not included, and instead we have an error\r\n          // message stored in the variable.\r\n          throw type;\r\n        }\r\n        var root = mountpoint === '/';\r\n        var pseudo = !mountpoint;\r\n        var node;\r\n  \r\n        if (root && FS.root) {\r\n          throw new FS.ErrnoError(10);\r\n        } else if (!root && !pseudo) {\r\n          var lookup = FS.lookupPath(mountpoint, { follow_mount: false });\r\n  \r\n          mountpoint = lookup.path;  // use the absolute path\r\n          node = lookup.node;\r\n  \r\n          if (FS.isMountpoint(node)) {\r\n            throw new FS.ErrnoError(10);\r\n          }\r\n  \r\n          if (!FS.isDir(node.mode)) {\r\n            throw new FS.ErrnoError(54);\r\n          }\r\n        }\r\n  \r\n        var mount = {\r\n          type,\r\n          opts,\r\n          mountpoint,\r\n          mounts: []\r\n        };\r\n  \r\n        // create a root node for the fs\r\n        var mountRoot = type.mount(mount);\r\n        mountRoot.mount = mount;\r\n        mount.root = mountRoot;\r\n  \r\n        if (root) {\r\n          FS.root = mountRoot;\r\n        } else if (node) {\r\n          // set as a mountpoint\r\n          node.mounted = mount;\r\n  \r\n          // add the new mount to the current mount's children\r\n          if (node.mount) {\r\n            node.mount.mounts.push(mount);\r\n          }\r\n        }\r\n  \r\n        return mountRoot;\r\n      },\r\n  unmount(mountpoint) {\r\n        var lookup = FS.lookupPath(mountpoint, { follow_mount: false });\r\n  \r\n        if (!FS.isMountpoint(lookup.node)) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n  \r\n        // destroy the nodes for this mount, and all its child mounts\r\n        var node = lookup.node;\r\n        var mount = node.mounted;\r\n        var mounts = FS.getMounts(mount);\r\n  \r\n        Object.keys(FS.nameTable).forEach((hash) => {\r\n          var current = FS.nameTable[hash];\r\n  \r\n          while (current) {\r\n            var next = current.name_next;\r\n  \r\n            if (mounts.includes(current.mount)) {\r\n              FS.destroyNode(current);\r\n            }\r\n  \r\n            current = next;\r\n          }\r\n        });\r\n  \r\n        // no longer a mountpoint\r\n        node.mounted = null;\r\n  \r\n        // remove this mount from the child mounts\r\n        var idx = node.mount.mounts.indexOf(mount);\r\n        assert(idx !== -1);\r\n        node.mount.mounts.splice(idx, 1);\r\n      },\r\n  lookup(parent, name) {\r\n        return parent.node_ops.lookup(parent, name);\r\n      },\r\n  mknod(path, mode, dev) {\r\n        var lookup = FS.lookupPath(path, { parent: true });\r\n        var parent = lookup.node;\r\n        var name = PATH.basename(path);\r\n        if (!name || name === '.' || name === '..') {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        var errCode = FS.mayCreate(parent, name);\r\n        if (errCode) {\r\n          throw new FS.ErrnoError(errCode);\r\n        }\r\n        if (!parent.node_ops.mknod) {\r\n          throw new FS.ErrnoError(63);\r\n        }\r\n        return parent.node_ops.mknod(parent, name, mode, dev);\r\n      },\r\n  create(path, mode) {\r\n        mode = mode !== undefined ? mode : 438 /* 0666 */;\r\n        mode &= 4095;\r\n        mode |= 32768;\r\n        return FS.mknod(path, mode, 0);\r\n      },\r\n  mkdir(path, mode) {\r\n        mode = mode !== undefined ? mode : 511 /* 0777 */;\r\n        mode &= 511 | 512;\r\n        mode |= 16384;\r\n        return FS.mknod(path, mode, 0);\r\n      },\r\n  mkdirTree(path, mode) {\r\n        var dirs = path.split('/');\r\n        var d = '';\r\n        for (var i = 0; i < dirs.length; ++i) {\r\n          if (!dirs[i]) continue;\r\n          d += '/' + dirs[i];\r\n          try {\r\n            FS.mkdir(d, mode);\r\n          } catch(e) {\r\n            if (e.errno != 20) throw e;\r\n          }\r\n        }\r\n      },\r\n  mkdev(path, mode, dev) {\r\n        if (typeof dev == 'undefined') {\r\n          dev = mode;\r\n          mode = 438 /* 0666 */;\r\n        }\r\n        mode |= 8192;\r\n        return FS.mknod(path, mode, dev);\r\n      },\r\n  symlink(oldpath, newpath) {\r\n        if (!PATH_FS.resolve(oldpath)) {\r\n          throw new FS.ErrnoError(44);\r\n        }\r\n        var lookup = FS.lookupPath(newpath, { parent: true });\r\n        var parent = lookup.node;\r\n        if (!parent) {\r\n          throw new FS.ErrnoError(44);\r\n        }\r\n        var newname = PATH.basename(newpath);\r\n        var errCode = FS.mayCreate(parent, newname);\r\n        if (errCode) {\r\n          throw new FS.ErrnoError(errCode);\r\n        }\r\n        if (!parent.node_ops.symlink) {\r\n          throw new FS.ErrnoError(63);\r\n        }\r\n        return parent.node_ops.symlink(parent, newname, oldpath);\r\n      },\r\n  rename(old_path, new_path) {\r\n        var old_dirname = PATH.dirname(old_path);\r\n        var new_dirname = PATH.dirname(new_path);\r\n        var old_name = PATH.basename(old_path);\r\n        var new_name = PATH.basename(new_path);\r\n        // parents must exist\r\n        var lookup, old_dir, new_dir;\r\n  \r\n        // let the errors from non existent directories percolate up\r\n        lookup = FS.lookupPath(old_path, { parent: true });\r\n        old_dir = lookup.node;\r\n        lookup = FS.lookupPath(new_path, { parent: true });\r\n        new_dir = lookup.node;\r\n  \r\n        if (!old_dir || !new_dir) throw new FS.ErrnoError(44);\r\n        // need to be part of the same mount\r\n        if (old_dir.mount !== new_dir.mount) {\r\n          throw new FS.ErrnoError(75);\r\n        }\r\n        // source must exist\r\n        var old_node = FS.lookupNode(old_dir, old_name);\r\n        // old path should not be an ancestor of the new path\r\n        var relative = PATH_FS.relative(old_path, new_dirname);\r\n        if (relative.charAt(0) !== '.') {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        // new path should not be an ancestor of the old path\r\n        relative = PATH_FS.relative(new_path, old_dirname);\r\n        if (relative.charAt(0) !== '.') {\r\n          throw new FS.ErrnoError(55);\r\n        }\r\n        // see if the new path already exists\r\n        var new_node;\r\n        try {\r\n          new_node = FS.lookupNode(new_dir, new_name);\r\n        } catch (e) {\r\n          // not fatal\r\n        }\r\n        // early out if nothing needs to change\r\n        if (old_node === new_node) {\r\n          return;\r\n        }\r\n        // we'll need to delete the old entry\r\n        var isdir = FS.isDir(old_node.mode);\r\n        var errCode = FS.mayDelete(old_dir, old_name, isdir);\r\n        if (errCode) {\r\n          throw new FS.ErrnoError(errCode);\r\n        }\r\n        // need delete permissions if we'll be overwriting.\r\n        // need create permissions if new doesn't already exist.\r\n        errCode = new_node ?\r\n          FS.mayDelete(new_dir, new_name, isdir) :\r\n          FS.mayCreate(new_dir, new_name);\r\n        if (errCode) {\r\n          throw new FS.ErrnoError(errCode);\r\n        }\r\n        if (!old_dir.node_ops.rename) {\r\n          throw new FS.ErrnoError(63);\r\n        }\r\n        if (FS.isMountpoint(old_node) || (new_node && FS.isMountpoint(new_node))) {\r\n          throw new FS.ErrnoError(10);\r\n        }\r\n        // if we are going to change the parent, check write permissions\r\n        if (new_dir !== old_dir) {\r\n          errCode = FS.nodePermissions(old_dir, 'w');\r\n          if (errCode) {\r\n            throw new FS.ErrnoError(errCode);\r\n          }\r\n        }\r\n        // remove the node from the lookup hash\r\n        FS.hashRemoveNode(old_node);\r\n        // do the underlying fs rename\r\n        try {\r\n          old_dir.node_ops.rename(old_node, new_dir, new_name);\r\n          // update old node (we do this here to avoid each backend \r\n          // needing to)\r\n          old_node.parent = new_dir;\r\n        } catch (e) {\r\n          throw e;\r\n        } finally {\r\n          // add the node back to the hash (in case node_ops.rename\r\n          // changed its name)\r\n          FS.hashAddNode(old_node);\r\n        }\r\n      },\r\n  rmdir(path) {\r\n        var lookup = FS.lookupPath(path, { parent: true });\r\n        var parent = lookup.node;\r\n        var name = PATH.basename(path);\r\n        var node = FS.lookupNode(parent, name);\r\n        var errCode = FS.mayDelete(parent, name, true);\r\n        if (errCode) {\r\n          throw new FS.ErrnoError(errCode);\r\n        }\r\n        if (!parent.node_ops.rmdir) {\r\n          throw new FS.ErrnoError(63);\r\n        }\r\n        if (FS.isMountpoint(node)) {\r\n          throw new FS.ErrnoError(10);\r\n        }\r\n        parent.node_ops.rmdir(parent, name);\r\n        FS.destroyNode(node);\r\n      },\r\n  readdir(path) {\r\n        var lookup = FS.lookupPath(path, { follow: true });\r\n        var node = lookup.node;\r\n        if (!node.node_ops.readdir) {\r\n          throw new FS.ErrnoError(54);\r\n        }\r\n        return node.node_ops.readdir(node);\r\n      },\r\n  unlink(path) {\r\n        var lookup = FS.lookupPath(path, { parent: true });\r\n        var parent = lookup.node;\r\n        if (!parent) {\r\n          throw new FS.ErrnoError(44);\r\n        }\r\n        var name = PATH.basename(path);\r\n        var node = FS.lookupNode(parent, name);\r\n        var errCode = FS.mayDelete(parent, name, false);\r\n        if (errCode) {\r\n          // According to POSIX, we should map EISDIR to EPERM, but\r\n          // we instead do what Linux does (and we must, as we use\r\n          // the musl linux libc).\r\n          throw new FS.ErrnoError(errCode);\r\n        }\r\n        if (!parent.node_ops.unlink) {\r\n          throw new FS.ErrnoError(63);\r\n        }\r\n        if (FS.isMountpoint(node)) {\r\n          throw new FS.ErrnoError(10);\r\n        }\r\n        parent.node_ops.unlink(parent, name);\r\n        FS.destroyNode(node);\r\n      },\r\n  readlink(path) {\r\n        var lookup = FS.lookupPath(path);\r\n        var link = lookup.node;\r\n        if (!link) {\r\n          throw new FS.ErrnoError(44);\r\n        }\r\n        if (!link.node_ops.readlink) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        return PATH_FS.resolve(FS.getPath(link.parent), link.node_ops.readlink(link));\r\n      },\r\n  stat(path, dontFollow) {\r\n        var lookup = FS.lookupPath(path, { follow: !dontFollow });\r\n        var node = lookup.node;\r\n        if (!node) {\r\n          throw new FS.ErrnoError(44);\r\n        }\r\n        if (!node.node_ops.getattr) {\r\n          throw new FS.ErrnoError(63);\r\n        }\r\n        return node.node_ops.getattr(node);\r\n      },\r\n  lstat(path) {\r\n        return FS.stat(path, true);\r\n      },\r\n  chmod(path, mode, dontFollow) {\r\n        var node;\r\n        if (typeof path == 'string') {\r\n          var lookup = FS.lookupPath(path, { follow: !dontFollow });\r\n          node = lookup.node;\r\n        } else {\r\n          node = path;\r\n        }\r\n        if (!node.node_ops.setattr) {\r\n          throw new FS.ErrnoError(63);\r\n        }\r\n        node.node_ops.setattr(node, {\r\n          mode: (mode & 4095) | (node.mode & ~4095),\r\n          timestamp: Date.now()\r\n        });\r\n      },\r\n  lchmod(path, mode) {\r\n        FS.chmod(path, mode, true);\r\n      },\r\n  fchmod(fd, mode) {\r\n        var stream = FS.getStreamChecked(fd);\r\n        FS.chmod(stream.node, mode);\r\n      },\r\n  chown(path, uid, gid, dontFollow) {\r\n        var node;\r\n        if (typeof path == 'string') {\r\n          var lookup = FS.lookupPath(path, { follow: !dontFollow });\r\n          node = lookup.node;\r\n        } else {\r\n          node = path;\r\n        }\r\n        if (!node.node_ops.setattr) {\r\n          throw new FS.ErrnoError(63);\r\n        }\r\n        node.node_ops.setattr(node, {\r\n          timestamp: Date.now()\r\n          // we ignore the uid / gid for now\r\n        });\r\n      },\r\n  lchown(path, uid, gid) {\r\n        FS.chown(path, uid, gid, true);\r\n      },\r\n  fchown(fd, uid, gid) {\r\n        var stream = FS.getStreamChecked(fd);\r\n        FS.chown(stream.node, uid, gid);\r\n      },\r\n  truncate(path, len) {\r\n        if (len < 0) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        var node;\r\n        if (typeof path == 'string') {\r\n          var lookup = FS.lookupPath(path, { follow: true });\r\n          node = lookup.node;\r\n        } else {\r\n          node = path;\r\n        }\r\n        if (!node.node_ops.setattr) {\r\n          throw new FS.ErrnoError(63);\r\n        }\r\n        if (FS.isDir(node.mode)) {\r\n          throw new FS.ErrnoError(31);\r\n        }\r\n        if (!FS.isFile(node.mode)) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        var errCode = FS.nodePermissions(node, 'w');\r\n        if (errCode) {\r\n          throw new FS.ErrnoError(errCode);\r\n        }\r\n        node.node_ops.setattr(node, {\r\n          size: len,\r\n          timestamp: Date.now()\r\n        });\r\n      },\r\n  ftruncate(fd, len) {\r\n        var stream = FS.getStreamChecked(fd);\r\n        if ((stream.flags & 2097155) === 0) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        FS.truncate(stream.node, len);\r\n      },\r\n  utime(path, atime, mtime) {\r\n        var lookup = FS.lookupPath(path, { follow: true });\r\n        var node = lookup.node;\r\n        node.node_ops.setattr(node, {\r\n          timestamp: Math.max(atime, mtime)\r\n        });\r\n      },\r\n  open(path, flags, mode) {\r\n        if (path === \"\") {\r\n          throw new FS.ErrnoError(44);\r\n        }\r\n        flags = typeof flags == 'string' ? FS_modeStringToFlags(flags) : flags;\r\n        if ((flags & 64)) {\r\n          mode = typeof mode == 'undefined' ? 438 /* 0666 */ : mode;\r\n          mode = (mode & 4095) | 32768;\r\n        } else {\r\n          mode = 0;\r\n        }\r\n        var node;\r\n        if (typeof path == 'object') {\r\n          node = path;\r\n        } else {\r\n          path = PATH.normalize(path);\r\n          try {\r\n            var lookup = FS.lookupPath(path, {\r\n              follow: !(flags & 131072)\r\n            });\r\n            node = lookup.node;\r\n          } catch (e) {\r\n            // ignore\r\n          }\r\n        }\r\n        // perhaps we need to create the node\r\n        var created = false;\r\n        if ((flags & 64)) {\r\n          if (node) {\r\n            // if O_CREAT and O_EXCL are set, error out if the node already exists\r\n            if ((flags & 128)) {\r\n              throw new FS.ErrnoError(20);\r\n            }\r\n          } else {\r\n            // node doesn't exist, try to create it\r\n            node = FS.mknod(path, mode, 0);\r\n            created = true;\r\n          }\r\n        }\r\n        if (!node) {\r\n          throw new FS.ErrnoError(44);\r\n        }\r\n        // can't truncate a device\r\n        if (FS.isChrdev(node.mode)) {\r\n          flags &= ~512;\r\n        }\r\n        // if asked only for a directory, then this must be one\r\n        if ((flags & 65536) && !FS.isDir(node.mode)) {\r\n          throw new FS.ErrnoError(54);\r\n        }\r\n        // check permissions, if this is not a file we just created now (it is ok to\r\n        // create and write to a file with read-only permissions; it is read-only\r\n        // for later use)\r\n        if (!created) {\r\n          var errCode = FS.mayOpen(node, flags);\r\n          if (errCode) {\r\n            throw new FS.ErrnoError(errCode);\r\n          }\r\n        }\r\n        // do truncation if necessary\r\n        if ((flags & 512) && !created) {\r\n          FS.truncate(node, 0);\r\n        }\r\n        // we've already handled these, don't pass down to the underlying vfs\r\n        flags &= ~(128 | 512 | 131072);\r\n  \r\n        // register the stream with the filesystem\r\n        var stream = FS.createStream({\r\n          node,\r\n          path: FS.getPath(node),  // we want the absolute path to the node\r\n          flags,\r\n          seekable: true,\r\n          position: 0,\r\n          stream_ops: node.stream_ops,\r\n          // used by the file family libc calls (fopen, fwrite, ferror, etc.)\r\n          ungotten: [],\r\n          error: false\r\n        });\r\n        // call the new stream's open function\r\n        if (stream.stream_ops.open) {\r\n          stream.stream_ops.open(stream);\r\n        }\r\n        if (Module['logReadFiles'] && !(flags & 1)) {\r\n          if (!(path in FS.readFiles)) {\r\n            FS.readFiles[path] = 1;\r\n          }\r\n        }\r\n        return stream;\r\n      },\r\n  close(stream) {\r\n        if (FS.isClosed(stream)) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        if (stream.getdents) stream.getdents = null; // free readdir state\r\n        try {\r\n          if (stream.stream_ops.close) {\r\n            stream.stream_ops.close(stream);\r\n          }\r\n        } catch (e) {\r\n          throw e;\r\n        } finally {\r\n          FS.closeStream(stream.fd);\r\n        }\r\n        stream.fd = null;\r\n      },\r\n  isClosed(stream) {\r\n        return stream.fd === null;\r\n      },\r\n  llseek(stream, offset, whence) {\r\n        if (FS.isClosed(stream)) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        if (!stream.seekable || !stream.stream_ops.llseek) {\r\n          throw new FS.ErrnoError(70);\r\n        }\r\n        if (whence != 0 && whence != 1 && whence != 2) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        stream.position = stream.stream_ops.llseek(stream, offset, whence);\r\n        stream.ungotten = [];\r\n        return stream.position;\r\n      },\r\n  read(stream, buffer, offset, length, position) {\r\n        assert(offset >= 0);\r\n        if (length < 0 || position < 0) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        if (FS.isClosed(stream)) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        if ((stream.flags & 2097155) === 1) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        if (FS.isDir(stream.node.mode)) {\r\n          throw new FS.ErrnoError(31);\r\n        }\r\n        if (!stream.stream_ops.read) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        var seeking = typeof position != 'undefined';\r\n        if (!seeking) {\r\n          position = stream.position;\r\n        } else if (!stream.seekable) {\r\n          throw new FS.ErrnoError(70);\r\n        }\r\n        var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);\r\n        if (!seeking) stream.position += bytesRead;\r\n        return bytesRead;\r\n      },\r\n  write(stream, buffer, offset, length, position, canOwn) {\r\n        assert(offset >= 0);\r\n        if (length < 0 || position < 0) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        if (FS.isClosed(stream)) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        if ((stream.flags & 2097155) === 0) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        if (FS.isDir(stream.node.mode)) {\r\n          throw new FS.ErrnoError(31);\r\n        }\r\n        if (!stream.stream_ops.write) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        if (stream.seekable && stream.flags & 1024) {\r\n          // seek to the end before writing in append mode\r\n          FS.llseek(stream, 0, 2);\r\n        }\r\n        var seeking = typeof position != 'undefined';\r\n        if (!seeking) {\r\n          position = stream.position;\r\n        } else if (!stream.seekable) {\r\n          throw new FS.ErrnoError(70);\r\n        }\r\n        var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);\r\n        if (!seeking) stream.position += bytesWritten;\r\n        return bytesWritten;\r\n      },\r\n  allocate(stream, offset, length) {\r\n        if (FS.isClosed(stream)) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        if (offset < 0 || length <= 0) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        if ((stream.flags & 2097155) === 0) {\r\n          throw new FS.ErrnoError(8);\r\n        }\r\n        if (!FS.isFile(stream.node.mode) && !FS.isDir(stream.node.mode)) {\r\n          throw new FS.ErrnoError(43);\r\n        }\r\n        if (!stream.stream_ops.allocate) {\r\n          throw new FS.ErrnoError(138);\r\n        }\r\n        stream.stream_ops.allocate(stream, offset, length);\r\n      },\r\n  mmap(stream, length, position, prot, flags) {\r\n        // User requests writing to file (prot & PROT_WRITE != 0).\r\n        // Checking if we have permissions to write to the file unless\r\n        // MAP_PRIVATE flag is set. According to POSIX spec it is possible\r\n        // to write to file opened in read-only mode with MAP_PRIVATE flag,\r\n        // as all modifications will be visible only in the memory of\r\n        // the current process.\r\n        if ((prot & 2) !== 0\r\n            && (flags & 2) === 0\r\n            && (stream.flags & 2097155) !== 2) {\r\n          throw new FS.ErrnoError(2);\r\n        }\r\n        if ((stream.flags & 2097155) === 1) {\r\n          throw new FS.ErrnoError(2);\r\n        }\r\n        if (!stream.stream_ops.mmap) {\r\n          throw new FS.ErrnoError(43);\r\n        }\r\n        if (!length) {\r\n          throw new FS.ErrnoError(28);\r\n        }\r\n        return stream.stream_ops.mmap(stream, length, position, prot, flags);\r\n      },\r\n  msync(stream, buffer, offset, length, mmapFlags) {\r\n        assert(offset >= 0);\r\n        if (!stream.stream_ops.msync) {\r\n          return 0;\r\n        }\r\n        return stream.stream_ops.msync(stream, buffer, offset, length, mmapFlags);\r\n      },\r\n  ioctl(stream, cmd, arg) {\r\n        if (!stream.stream_ops.ioctl) {\r\n          throw new FS.ErrnoError(59);\r\n        }\r\n        return stream.stream_ops.ioctl(stream, cmd, arg);\r\n      },\r\n  readFile(path, opts = {}) {\r\n        opts.flags = opts.flags || 0;\r\n        opts.encoding = opts.encoding || 'binary';\r\n        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {\r\n          throw new Error(`Invalid encoding type \"${opts.encoding}\"`);\r\n        }\r\n        var ret;\r\n        var stream = FS.open(path, opts.flags);\r\n        var stat = FS.stat(path);\r\n        var length = stat.size;\r\n        var buf = new Uint8Array(length);\r\n        FS.read(stream, buf, 0, length, 0);\r\n        if (opts.encoding === 'utf8') {\r\n          ret = UTF8ArrayToString(buf);\r\n        } else if (opts.encoding === 'binary') {\r\n          ret = buf;\r\n        }\r\n        FS.close(stream);\r\n        return ret;\r\n      },\r\n  writeFile(path, data, opts = {}) {\r\n        opts.flags = opts.flags || 577;\r\n        var stream = FS.open(path, opts.flags, opts.mode);\r\n        if (typeof data == 'string') {\r\n          var buf = new Uint8Array(lengthBytesUTF8(data)+1);\r\n          var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);\r\n          FS.write(stream, buf, 0, actualNumBytes, undefined, opts.canOwn);\r\n        } else if (ArrayBuffer.isView(data)) {\r\n          FS.write(stream, data, 0, data.byteLength, undefined, opts.canOwn);\r\n        } else {\r\n          throw new Error('Unsupported data type');\r\n        }\r\n        FS.close(stream);\r\n      },\r\n  cwd:() => FS.currentPath,\r\n  chdir(path) {\r\n        var lookup = FS.lookupPath(path, { follow: true });\r\n        if (lookup.node === null) {\r\n          throw new FS.ErrnoError(44);\r\n        }\r\n        if (!FS.isDir(lookup.node.mode)) {\r\n          throw new FS.ErrnoError(54);\r\n        }\r\n        var errCode = FS.nodePermissions(lookup.node, 'x');\r\n        if (errCode) {\r\n          throw new FS.ErrnoError(errCode);\r\n        }\r\n        FS.currentPath = lookup.path;\r\n      },\r\n  createDefaultDirectories() {\r\n        FS.mkdir('/tmp');\r\n        FS.mkdir('/home');\r\n        FS.mkdir('/home/web_user');\r\n      },\r\n  createDefaultDevices() {\r\n        // create /dev\r\n        FS.mkdir('/dev');\r\n        // setup /dev/null\r\n        FS.registerDevice(FS.makedev(1, 3), {\r\n          read: () => 0,\r\n          write: (stream, buffer, offset, length, pos) => length,\r\n        });\r\n        FS.mkdev('/dev/null', FS.makedev(1, 3));\r\n        // setup /dev/tty and /dev/tty1\r\n        // stderr needs to print output using err() rather than out()\r\n        // so we register a second tty just for it.\r\n        TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);\r\n        TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);\r\n        FS.mkdev('/dev/tty', FS.makedev(5, 0));\r\n        FS.mkdev('/dev/tty1', FS.makedev(6, 0));\r\n        // setup /dev/[u]random\r\n        // use a buffer to avoid overhead of individual crypto calls per byte\r\n        var randomBuffer = new Uint8Array(1024), randomLeft = 0;\r\n        var randomByte = () => {\r\n          if (randomLeft === 0) {\r\n            randomLeft = randomFill(randomBuffer).byteLength;\r\n          }\r\n          return randomBuffer[--randomLeft];\r\n        };\r\n        FS.createDevice('/dev', 'random', randomByte);\r\n        FS.createDevice('/dev', 'urandom', randomByte);\r\n        // we're not going to emulate the actual shm device,\r\n        // just create the tmp dirs that reside in it commonly\r\n        FS.mkdir('/dev/shm');\r\n        FS.mkdir('/dev/shm/tmp');\r\n      },\r\n  createSpecialDirectories() {\r\n        // create /proc/self/fd which allows /proc/self/fd/6 => readlink gives the\r\n        // name of the stream for fd 6 (see test_unistd_ttyname)\r\n        FS.mkdir('/proc');\r\n        var proc_self = FS.mkdir('/proc/self');\r\n        FS.mkdir('/proc/self/fd');\r\n        FS.mount({\r\n          mount() {\r\n            var node = FS.createNode(proc_self, 'fd', 16384 | 511 /* 0777 */, 73);\r\n            node.node_ops = {\r\n              lookup(parent, name) {\r\n                var fd = +name;\r\n                var stream = FS.getStreamChecked(fd);\r\n                var ret = {\r\n                  parent: null,\r\n                  mount: { mountpoint: 'fake' },\r\n                  node_ops: { readlink: () => stream.path },\r\n                };\r\n                ret.parent = ret; // make it look like a simple root node\r\n                return ret;\r\n              }\r\n            };\r\n            return node;\r\n          }\r\n        }, {}, '/proc/self/fd');\r\n      },\r\n  createStandardStreams(input, output, error) {\r\n        // TODO deprecate the old functionality of a single\r\n        // input / output callback and that utilizes FS.createDevice\r\n        // and instead require a unique set of stream ops\r\n  \r\n        // by default, we symlink the standard streams to the\r\n        // default tty devices. however, if the standard streams\r\n        // have been overwritten we create a unique device for\r\n        // them instead.\r\n        if (input) {\r\n          FS.createDevice('/dev', 'stdin', input);\r\n        } else {\r\n          FS.symlink('/dev/tty', '/dev/stdin');\r\n        }\r\n        if (output) {\r\n          FS.createDevice('/dev', 'stdout', null, output);\r\n        } else {\r\n          FS.symlink('/dev/tty', '/dev/stdout');\r\n        }\r\n        if (error) {\r\n          FS.createDevice('/dev', 'stderr', null, error);\r\n        } else {\r\n          FS.symlink('/dev/tty1', '/dev/stderr');\r\n        }\r\n  \r\n        // open default streams for the stdin, stdout and stderr devices\r\n        var stdin = FS.open('/dev/stdin', 0);\r\n        var stdout = FS.open('/dev/stdout', 1);\r\n        var stderr = FS.open('/dev/stderr', 1);\r\n        assert(stdin.fd === 0, `invalid handle for stdin (${stdin.fd})`);\r\n        assert(stdout.fd === 1, `invalid handle for stdout (${stdout.fd})`);\r\n        assert(stderr.fd === 2, `invalid handle for stderr (${stderr.fd})`);\r\n      },\r\n  staticInit() {\r\n        // Some errors may happen quite a bit, to avoid overhead we reuse them (and suffer a lack of stack info)\r\n        [44].forEach((code) => {\r\n          FS.genericErrors[code] = new FS.ErrnoError(code);\r\n          FS.genericErrors[code].stack = '<generic error, no stack>';\r\n        });\r\n  \r\n        FS.nameTable = new Array(4096);\r\n  \r\n        FS.mount(MEMFS, {}, '/');\r\n  \r\n        FS.createDefaultDirectories();\r\n        FS.createDefaultDevices();\r\n        FS.createSpecialDirectories();\r\n  \r\n        FS.filesystems = {\r\n          'MEMFS': MEMFS,\r\n        };\r\n      },\r\n  init(input, output, error) {\r\n        assert(!FS.initialized, 'FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)');\r\n        FS.initialized = true;\r\n  \r\n        // Allow Module.stdin etc. to provide defaults, if none explicitly passed to us here\r\n        input ??= Module['stdin'];\r\n        output ??= Module['stdout'];\r\n        error ??= Module['stderr'];\r\n  \r\n        FS.createStandardStreams(input, output, error);\r\n      },\r\n  quit() {\r\n        FS.initialized = false;\r\n        // force-flush all streams, so we get musl std streams printed out\r\n        _fflush(0);\r\n        // close all of our streams\r\n        for (var i = 0; i < FS.streams.length; i++) {\r\n          var stream = FS.streams[i];\r\n          if (!stream) {\r\n            continue;\r\n          }\r\n          FS.close(stream);\r\n        }\r\n      },\r\n  findObject(path, dontResolveLastLink) {\r\n        var ret = FS.analyzePath(path, dontResolveLastLink);\r\n        if (!ret.exists) {\r\n          return null;\r\n        }\r\n        return ret.object;\r\n      },\r\n  analyzePath(path, dontResolveLastLink) {\r\n        // operate from within the context of the symlink's target\r\n        try {\r\n          var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });\r\n          path = lookup.path;\r\n        } catch (e) {\r\n        }\r\n        var ret = {\r\n          isRoot: false, exists: false, error: 0, name: null, path: null, object: null,\r\n          parentExists: false, parentPath: null, parentObject: null\r\n        };\r\n        try {\r\n          var lookup = FS.lookupPath(path, { parent: true });\r\n          ret.parentExists = true;\r\n          ret.parentPath = lookup.path;\r\n          ret.parentObject = lookup.node;\r\n          ret.name = PATH.basename(path);\r\n          lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });\r\n          ret.exists = true;\r\n          ret.path = lookup.path;\r\n          ret.object = lookup.node;\r\n          ret.name = lookup.node.name;\r\n          ret.isRoot = lookup.path === '/';\r\n        } catch (e) {\r\n          ret.error = e.errno;\r\n        };\r\n        return ret;\r\n      },\r\n  createPath(parent, path, canRead, canWrite) {\r\n        parent = typeof parent == 'string' ? parent : FS.getPath(parent);\r\n        var parts = path.split('/').reverse();\r\n        while (parts.length) {\r\n          var part = parts.pop();\r\n          if (!part) continue;\r\n          var current = PATH.join2(parent, part);\r\n          try {\r\n            FS.mkdir(current);\r\n          } catch (e) {\r\n            // ignore EEXIST\r\n          }\r\n          parent = current;\r\n        }\r\n        return current;\r\n      },\r\n  createFile(parent, name, properties, canRead, canWrite) {\r\n        var path = PATH.join2(typeof parent == 'string' ? parent : FS.getPath(parent), name);\r\n        var mode = FS_getMode(canRead, canWrite);\r\n        return FS.create(path, mode);\r\n      },\r\n  createDataFile(parent, name, data, canRead, canWrite, canOwn) {\r\n        var path = name;\r\n        if (parent) {\r\n          parent = typeof parent == 'string' ? parent : FS.getPath(parent);\r\n          path = name ? PATH.join2(parent, name) : parent;\r\n        }\r\n        var mode = FS_getMode(canRead, canWrite);\r\n        var node = FS.create(path, mode);\r\n        if (data) {\r\n          if (typeof data == 'string') {\r\n            var arr = new Array(data.length);\r\n            for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);\r\n            data = arr;\r\n          }\r\n          // make sure we can write to the file\r\n          FS.chmod(node, mode | 146);\r\n          var stream = FS.open(node, 577);\r\n          FS.write(stream, data, 0, data.length, 0, canOwn);\r\n          FS.close(stream);\r\n          FS.chmod(node, mode);\r\n        }\r\n      },\r\n  createDevice(parent, name, input, output) {\r\n        var path = PATH.join2(typeof parent == 'string' ? parent : FS.getPath(parent), name);\r\n        var mode = FS_getMode(!!input, !!output);\r\n        FS.createDevice.major ??= 64;\r\n        var dev = FS.makedev(FS.createDevice.major++, 0);\r\n        // Create a fake device that a set of stream ops to emulate\r\n        // the old behavior.\r\n        FS.registerDevice(dev, {\r\n          open(stream) {\r\n            stream.seekable = false;\r\n          },\r\n          close(stream) {\r\n            // flush any pending line data\r\n            if (output?.buffer?.length) {\r\n              output(10);\r\n            }\r\n          },\r\n          read(stream, buffer, offset, length, pos /* ignored */) {\r\n            var bytesRead = 0;\r\n            for (var i = 0; i < length; i++) {\r\n              var result;\r\n              try {\r\n                result = input();\r\n              } catch (e) {\r\n                throw new FS.ErrnoError(29);\r\n              }\r\n              if (result === undefined && bytesRead === 0) {\r\n                throw new FS.ErrnoError(6);\r\n              }\r\n              if (result === null || result === undefined) break;\r\n              bytesRead++;\r\n              buffer[offset+i] = result;\r\n            }\r\n            if (bytesRead) {\r\n              stream.node.timestamp = Date.now();\r\n            }\r\n            return bytesRead;\r\n          },\r\n          write(stream, buffer, offset, length, pos) {\r\n            for (var i = 0; i < length; i++) {\r\n              try {\r\n                output(buffer[offset+i]);\r\n              } catch (e) {\r\n                throw new FS.ErrnoError(29);\r\n              }\r\n            }\r\n            if (length) {\r\n              stream.node.timestamp = Date.now();\r\n            }\r\n            return i;\r\n          }\r\n        });\r\n        return FS.mkdev(path, mode, dev);\r\n      },\r\n  forceLoadFile(obj) {\r\n        if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;\r\n        if (typeof XMLHttpRequest != 'undefined') {\r\n          throw new Error(\"Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.\");\r\n        } else { // Command-line.\r\n          try {\r\n            obj.contents = readBinary(obj.url);\r\n            obj.usedBytes = obj.contents.length;\r\n          } catch (e) {\r\n            throw new FS.ErrnoError(29);\r\n          }\r\n        }\r\n      },\r\n  createLazyFile(parent, name, url, canRead, canWrite) {\r\n        // Lazy chunked Uint8Array (implements get and length from Uint8Array).\r\n        // Actual getting is abstracted away for eventual reuse.\r\n        class LazyUint8Array {\r\n          constructor() {\r\n            this.lengthKnown = false;\r\n            this.chunks = []; // Loaded chunks. Index is the chunk number\r\n          }\r\n          get(idx) {\r\n            if (idx > this.length-1 || idx < 0) {\r\n              return undefined;\r\n            }\r\n            var chunkOffset = idx % this.chunkSize;\r\n            var chunkNum = (idx / this.chunkSize)|0;\r\n            return this.getter(chunkNum)[chunkOffset];\r\n          }\r\n          setDataGetter(getter) {\r\n            this.getter = getter;\r\n          }\r\n          cacheLength() {\r\n            // Find length\r\n            var xhr = new XMLHttpRequest();\r\n            xhr.open('HEAD', url, false);\r\n            xhr.send(null);\r\n            if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr.status);\r\n            var datalength = Number(xhr.getResponseHeader(\"Content-length\"));\r\n            var header;\r\n            var hasByteServing = (header = xhr.getResponseHeader(\"Accept-Ranges\")) && header === \"bytes\";\r\n            var usesGzip = (header = xhr.getResponseHeader(\"Content-Encoding\")) && header === \"gzip\";\r\n  \r\n            var chunkSize = 1024*1024; // Chunk size in bytes\r\n  \r\n            if (!hasByteServing) chunkSize = datalength;\r\n  \r\n            // Function to get a range from the remote URL.\r\n            var doXHR = (from, to) => {\r\n              if (from > to) throw new Error(\"invalid range (\" + from + \", \" + to + \") or no bytes requested!\");\r\n              if (to > datalength-1) throw new Error(\"only \" + datalength + \" bytes available! programmer error!\");\r\n  \r\n              // TODO: Use mozResponseArrayBuffer, responseStream, etc. if available.\r\n              var xhr = new XMLHttpRequest();\r\n              xhr.open('GET', url, false);\r\n              if (datalength !== chunkSize) xhr.setRequestHeader(\"Range\", \"bytes=\" + from + \"-\" + to);\r\n  \r\n              // Some hints to the browser that we want binary data.\r\n              xhr.responseType = 'arraybuffer';\r\n              if (xhr.overrideMimeType) {\r\n                xhr.overrideMimeType('text/plain; charset=x-user-defined');\r\n              }\r\n  \r\n              xhr.send(null);\r\n              if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr.status);\r\n              if (xhr.response !== undefined) {\r\n                return new Uint8Array(/** @type{Array<number>} */(xhr.response || []));\r\n              }\r\n              return intArrayFromString(xhr.responseText || '', true);\r\n            };\r\n            var lazyArray = this;\r\n            lazyArray.setDataGetter((chunkNum) => {\r\n              var start = chunkNum * chunkSize;\r\n              var end = (chunkNum+1) * chunkSize - 1; // including this byte\r\n              end = Math.min(end, datalength-1); // if datalength-1 is selected, this is the last block\r\n              if (typeof lazyArray.chunks[chunkNum] == 'undefined') {\r\n                lazyArray.chunks[chunkNum] = doXHR(start, end);\r\n              }\r\n              if (typeof lazyArray.chunks[chunkNum] == 'undefined') throw new Error('doXHR failed!');\r\n              return lazyArray.chunks[chunkNum];\r\n            });\r\n  \r\n            if (usesGzip || !datalength) {\r\n              // if the server uses gzip or doesn't supply the length, we have to download the whole file to get the (uncompressed) length\r\n              chunkSize = datalength = 1; // this will force getter(0)/doXHR do download the whole file\r\n              datalength = this.getter(0).length;\r\n              chunkSize = datalength;\r\n              out(\"LazyFiles on gzip forces download of the whole file when length is accessed\");\r\n            }\r\n  \r\n            this._length = datalength;\r\n            this._chunkSize = chunkSize;\r\n            this.lengthKnown = true;\r\n          }\r\n          get length() {\r\n            if (!this.lengthKnown) {\r\n              this.cacheLength();\r\n            }\r\n            return this._length;\r\n          }\r\n          get chunkSize() {\r\n            if (!this.lengthKnown) {\r\n              this.cacheLength();\r\n            }\r\n            return this._chunkSize;\r\n          }\r\n        }\r\n  \r\n        if (typeof XMLHttpRequest != 'undefined') {\r\n          if (!ENVIRONMENT_IS_WORKER) throw 'Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc';\r\n          var lazyArray = new LazyUint8Array();\r\n          var properties = { isDevice: false, contents: lazyArray };\r\n        } else {\r\n          var properties = { isDevice: false, url: url };\r\n        }\r\n  \r\n        var node = FS.createFile(parent, name, properties, canRead, canWrite);\r\n        // This is a total hack, but I want to get this lazy file code out of the\r\n        // core of MEMFS. If we want to keep this lazy file concept I feel it should\r\n        // be its own thin LAZYFS proxying calls to MEMFS.\r\n        if (properties.contents) {\r\n          node.contents = properties.contents;\r\n        } else if (properties.url) {\r\n          node.contents = null;\r\n          node.url = properties.url;\r\n        }\r\n        // Add a function that defers querying the file size until it is asked the first time.\r\n        Object.defineProperties(node, {\r\n          usedBytes: {\r\n            get: function() { return this.contents.length; }\r\n          }\r\n        });\r\n        // override each stream op with one that tries to force load the lazy file first\r\n        var stream_ops = {};\r\n        var keys = Object.keys(node.stream_ops);\r\n        keys.forEach((key) => {\r\n          var fn = node.stream_ops[key];\r\n          stream_ops[key] = (...args) => {\r\n            FS.forceLoadFile(node);\r\n            return fn(...args);\r\n          };\r\n        });\r\n        function writeChunks(stream, buffer, offset, length, position) {\r\n          var contents = stream.node.contents;\r\n          if (position >= contents.length)\r\n            return 0;\r\n          var size = Math.min(contents.length - position, length);\r\n          assert(size >= 0);\r\n          if (contents.slice) { // normal array\r\n            for (var i = 0; i < size; i++) {\r\n              buffer[offset + i] = contents[position + i];\r\n            }\r\n          } else {\r\n            for (var i = 0; i < size; i++) { // LazyUint8Array from sync binary XHR\r\n              buffer[offset + i] = contents.get(position + i);\r\n            }\r\n          }\r\n          return size;\r\n        }\r\n        // use a custom read function\r\n        stream_ops.read = (stream, buffer, offset, length, position) => {\r\n          FS.forceLoadFile(node);\r\n          return writeChunks(stream, buffer, offset, length, position)\r\n        };\r\n        // use a custom mmap function\r\n        stream_ops.mmap = (stream, length, position, prot, flags) => {\r\n          FS.forceLoadFile(node);\r\n          var ptr = mmapAlloc(length);\r\n          if (!ptr) {\r\n            throw new FS.ErrnoError(48);\r\n          }\r\n          writeChunks(stream, HEAP8, ptr, length, position);\r\n          return { ptr, allocated: true };\r\n        };\r\n        node.stream_ops = stream_ops;\r\n        return node;\r\n      },\r\n  absolutePath() {\r\n        abort('FS.absolutePath has been removed; use PATH_FS.resolve instead');\r\n      },\r\n  createFolder() {\r\n        abort('FS.createFolder has been removed; use FS.mkdir instead');\r\n      },\r\n  createLink() {\r\n        abort('FS.createLink has been removed; use FS.symlink instead');\r\n      },\r\n  joinPath() {\r\n        abort('FS.joinPath has been removed; use PATH.join instead');\r\n      },\r\n  mmapAlloc() {\r\n        abort('FS.mmapAlloc has been replaced by the top level function mmapAlloc');\r\n      },\r\n  standardizePath() {\r\n        abort('FS.standardizePath has been removed; use PATH.normalize instead');\r\n      },\r\n  };\r\n  \r\n  var SYSCALLS = {\r\n  DEFAULT_POLLMASK:5,\r\n  calculateAt(dirfd, path, allowEmpty) {\r\n        if (PATH.isAbs(path)) {\r\n          return path;\r\n        }\r\n        // relative path\r\n        var dir;\r\n        if (dirfd === -100) {\r\n          dir = FS.cwd();\r\n        } else {\r\n          var dirstream = SYSCALLS.getStreamFromFD(dirfd);\r\n          dir = dirstream.path;\r\n        }\r\n        if (path.length == 0) {\r\n          if (!allowEmpty) {\r\n            throw new FS.ErrnoError(44);;\r\n          }\r\n          return dir;\r\n        }\r\n        return PATH.join2(dir, path);\r\n      },\r\n  doStat(func, path, buf) {\r\n        var stat = func(path);\r\n        HEAP32[((buf)>>2)] = stat.dev;\r\n        HEAP32[(((buf)+(4))>>2)] = stat.mode;\r\n        HEAPU32[(((buf)+(8))>>2)] = stat.nlink;\r\n        HEAP32[(((buf)+(12))>>2)] = stat.uid;\r\n        HEAP32[(((buf)+(16))>>2)] = stat.gid;\r\n        HEAP32[(((buf)+(20))>>2)] = stat.rdev;\r\n        (tempI64 = [stat.size>>>0,(tempDouble = stat.size,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[(((buf)+(24))>>2)] = tempI64[0],HEAP32[(((buf)+(28))>>2)] = tempI64[1]);\r\n        HEAP32[(((buf)+(32))>>2)] = 4096;\r\n        HEAP32[(((buf)+(36))>>2)] = stat.blocks;\r\n        var atime = stat.atime.getTime();\r\n        var mtime = stat.mtime.getTime();\r\n        var ctime = stat.ctime.getTime();\r\n        (tempI64 = [Math.floor(atime / 1000)>>>0,(tempDouble = Math.floor(atime / 1000),(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[(((buf)+(40))>>2)] = tempI64[0],HEAP32[(((buf)+(44))>>2)] = tempI64[1]);\r\n        HEAPU32[(((buf)+(48))>>2)] = (atime % 1000) * 1000 * 1000;\r\n        (tempI64 = [Math.floor(mtime / 1000)>>>0,(tempDouble = Math.floor(mtime / 1000),(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[(((buf)+(56))>>2)] = tempI64[0],HEAP32[(((buf)+(60))>>2)] = tempI64[1]);\r\n        HEAPU32[(((buf)+(64))>>2)] = (mtime % 1000) * 1000 * 1000;\r\n        (tempI64 = [Math.floor(ctime / 1000)>>>0,(tempDouble = Math.floor(ctime / 1000),(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[(((buf)+(72))>>2)] = tempI64[0],HEAP32[(((buf)+(76))>>2)] = tempI64[1]);\r\n        HEAPU32[(((buf)+(80))>>2)] = (ctime % 1000) * 1000 * 1000;\r\n        (tempI64 = [stat.ino>>>0,(tempDouble = stat.ino,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[(((buf)+(88))>>2)] = tempI64[0],HEAP32[(((buf)+(92))>>2)] = tempI64[1]);\r\n        return 0;\r\n      },\r\n  doMsync(addr, stream, len, flags, offset) {\r\n        if (!FS.isFile(stream.node.mode)) {\r\n          throw new FS.ErrnoError(43);\r\n        }\r\n        if (flags & 2) {\r\n          // MAP_PRIVATE calls need not to be synced back to underlying fs\r\n          return 0;\r\n        }\r\n        var buffer = HEAPU8.slice(addr, addr + len);\r\n        FS.msync(stream, buffer, offset, len, flags);\r\n      },\r\n  getStreamFromFD(fd) {\r\n        var stream = FS.getStreamChecked(fd);\r\n        return stream;\r\n      },\r\n  varargs:undefined,\r\n  getStr(ptr) {\r\n        var ret = UTF8ToString(ptr);\r\n        return ret;\r\n      },\r\n  };\r\n  function _fd_close(fd) {\r\n  try {\r\n  \r\n      var stream = SYSCALLS.getStreamFromFD(fd);\r\n      FS.close(stream);\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return e.errno;\r\n  }\r\n  }\r\n\r\n  /** @param {number=} offset */\r\n  var doReadv = (stream, iov, iovcnt, offset) => {\r\n      var ret = 0;\r\n      for (var i = 0; i < iovcnt; i++) {\r\n        var ptr = HEAPU32[((iov)>>2)];\r\n        var len = HEAPU32[(((iov)+(4))>>2)];\r\n        iov += 8;\r\n        var curr = FS.read(stream, HEAP8, ptr, len, offset);\r\n        if (curr < 0) return -1;\r\n        ret += curr;\r\n        if (curr < len) break; // nothing more to read\r\n        if (typeof offset != 'undefined') {\r\n          offset += curr;\r\n        }\r\n      }\r\n      return ret;\r\n    };\r\n  \r\n  function _fd_read(fd, iov, iovcnt, pnum) {\r\n  try {\r\n  \r\n      var stream = SYSCALLS.getStreamFromFD(fd);\r\n      var num = doReadv(stream, iov, iovcnt);\r\n      HEAPU32[((pnum)>>2)] = num;\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return e.errno;\r\n  }\r\n  }\r\n\r\n  \r\n  var convertI32PairToI53Checked = (lo, hi) => {\r\n      assert(lo == (lo >>> 0) || lo == (lo|0)); // lo should either be a i32 or a u32\r\n      assert(hi === (hi|0));                    // hi should be a i32\r\n      return ((hi + 0x200000) >>> 0 < 0x400001 - !!lo) ? (lo >>> 0) + hi * 4294967296 : NaN;\r\n    };\r\n  function _fd_seek(fd,offset_low, offset_high,whence,newOffset) {\r\n    var offset = convertI32PairToI53Checked(offset_low, offset_high);\r\n  \r\n    \r\n  try {\r\n  \r\n      if (isNaN(offset)) return 61;\r\n      var stream = SYSCALLS.getStreamFromFD(fd);\r\n      FS.llseek(stream, offset, whence);\r\n      (tempI64 = [stream.position>>>0,(tempDouble = stream.position,(+(Math.abs(tempDouble))) >= 1.0 ? (tempDouble > 0.0 ? (+(Math.floor((tempDouble)/4294967296.0)))>>>0 : (~~((+(Math.ceil((tempDouble - +(((~~(tempDouble)))>>>0))/4294967296.0)))))>>>0) : 0)], HEAP32[((newOffset)>>2)] = tempI64[0],HEAP32[(((newOffset)+(4))>>2)] = tempI64[1]);\r\n      if (stream.getdents && offset === 0 && whence === 0) stream.getdents = null; // reset readdir state\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return e.errno;\r\n  }\r\n  ;\r\n  }\r\n\r\n  /** @param {number=} offset */\r\n  var doWritev = (stream, iov, iovcnt, offset) => {\r\n      var ret = 0;\r\n      for (var i = 0; i < iovcnt; i++) {\r\n        var ptr = HEAPU32[((iov)>>2)];\r\n        var len = HEAPU32[(((iov)+(4))>>2)];\r\n        iov += 8;\r\n        var curr = FS.write(stream, HEAP8, ptr, len, offset);\r\n        if (curr < 0) return -1;\r\n        ret += curr;\r\n        if (curr < len) {\r\n          // No more space to write.\r\n          break;\r\n        }\r\n        if (typeof offset != 'undefined') {\r\n          offset += curr;\r\n        }\r\n      }\r\n      return ret;\r\n    };\r\n  \r\n  function _fd_write(fd, iov, iovcnt, pnum) {\r\n  try {\r\n  \r\n      var stream = SYSCALLS.getStreamFromFD(fd);\r\n      var num = doWritev(stream, iov, iovcnt);\r\n      HEAPU32[((pnum)>>2)] = num;\r\n      return 0;\r\n    } catch (e) {\r\n    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;\r\n    return e.errno;\r\n  }\r\n  }\r\n\r\n  \r\n  var runtimeKeepaliveCounter = 0;\r\n  var keepRuntimeAlive = () => noExitRuntime || runtimeKeepaliveCounter > 0;\r\n  var _proc_exit = (code) => {\r\n      EXITSTATUS = code;\r\n      if (!keepRuntimeAlive()) {\r\n        Module['onExit']?.(code);\r\n        ABORT = true;\r\n      }\r\n      quit_(code, new ExitStatus(code));\r\n    };\r\n  \r\n  /** @param {boolean|number=} implicit */\r\n  var exitJS = (status, implicit) => {\r\n      EXITSTATUS = status;\r\n  \r\n      checkUnflushedContent();\r\n  \r\n      // if exit() was called explicitly, warn the user if the runtime isn't actually being shut down\r\n      if (keepRuntimeAlive() && !implicit) {\r\n        var msg = `program exited (with status: ${status}), but keepRuntimeAlive() is set (counter=${runtimeKeepaliveCounter}) due to an async operation, so halting execution but not exiting the runtime or preventing further async execution (you can use emscripten_force_exit, if you want to force a true shutdown)`;\r\n        readyPromiseReject(msg);\r\n        err(msg);\r\n      }\r\n  \r\n      _proc_exit(status);\r\n    };\r\n\r\n  var handleException = (e) => {\r\n      // Certain exception types we do not treat as errors since they are used for\r\n      // internal control flow.\r\n      // 1. ExitStatus, which is thrown by exit()\r\n      // 2. \"unwind\", which is thrown by emscripten_unwind_to_js_event_loop() and others\r\n      //    that wish to return to JS event loop.\r\n      if (e instanceof ExitStatus || e == 'unwind') {\r\n        return EXITSTATUS;\r\n      }\r\n      checkStackCookie();\r\n      if (e instanceof WebAssembly.RuntimeError) {\r\n        if (_emscripten_stack_get_current() <= 0) {\r\n          err('Stack overflow detected.  You can try increasing -sSTACK_SIZE (currently set to 65536)');\r\n        }\r\n      }\r\n      quit_(1, e);\r\n    };\r\n\r\n  FS.createPreloadedFile = FS_createPreloadedFile;\r\n  FS.staticInit();\r\n  // Set module methods based on EXPORTED_RUNTIME_METHODS\r\n  ;\r\nfunction checkIncomingModuleAPI() {\r\n  ignoredModuleProp('fetchSettings');\r\n}\r\nvar wasmImports = {\r\n  /** @export */\r\n  _emscripten_memcpy_js: __emscripten_memcpy_js,\r\n  /** @export */\r\n  emscripten_resize_heap: _emscripten_resize_heap,\r\n  /** @export */\r\n  fd_close: _fd_close,\r\n  /** @export */\r\n  fd_read: _fd_read,\r\n  /** @export */\r\n  fd_seek: _fd_seek,\r\n  /** @export */\r\n  fd_write: _fd_write\r\n};\r\nvar wasmExports = createWasm();\r\nvar ___wasm_call_ctors = createExportWrapper('__wasm_call_ctors', 0);\r\nvar _main = Module['_main'] = createExportWrapper('main', 2);\r\nvar _fflush = createExportWrapper('fflush', 1);\r\nvar _strerror = createExportWrapper('strerror', 1);\r\nvar _emscripten_stack_init = () => (_emscripten_stack_init = wasmExports['emscripten_stack_init'])();\r\nvar _emscripten_stack_get_free = () => (_emscripten_stack_get_free = wasmExports['emscripten_stack_get_free'])();\r\nvar _emscripten_stack_get_base = () => (_emscripten_stack_get_base = wasmExports['emscripten_stack_get_base'])();\r\nvar _emscripten_stack_get_end = () => (_emscripten_stack_get_end = wasmExports['emscripten_stack_get_end'])();\r\nvar __emscripten_stack_restore = (a0) => (__emscripten_stack_restore = wasmExports['_emscripten_stack_restore'])(a0);\r\nvar __emscripten_stack_alloc = (a0) => (__emscripten_stack_alloc = wasmExports['_emscripten_stack_alloc'])(a0);\r\nvar _emscripten_stack_get_current = () => (_emscripten_stack_get_current = wasmExports['emscripten_stack_get_current'])();\r\nvar dynCall_jiji = Module['dynCall_jiji'] = createExportWrapper('dynCall_jiji', 5);\r\n\r\n\r\n// include: postamble.js\r\n// === Auto-generated postamble setup entry stuff ===\r\n\r\nvar missingLibrarySymbols = [\r\n  'writeI53ToI64',\r\n  'writeI53ToI64Clamped',\r\n  'writeI53ToI64Signaling',\r\n  'writeI53ToU64Clamped',\r\n  'writeI53ToU64Signaling',\r\n  'readI53FromI64',\r\n  'readI53FromU64',\r\n  'convertI32PairToI53',\r\n  'convertU32PairToI53',\r\n  'stackAlloc',\r\n  'getTempRet0',\r\n  'setTempRet0',\r\n  'growMemory',\r\n  'inetPton4',\r\n  'inetNtop4',\r\n  'inetPton6',\r\n  'inetNtop6',\r\n  'readSockaddr',\r\n  'writeSockaddr',\r\n  'emscriptenLog',\r\n  'readEmAsmArgs',\r\n  'jstoi_q',\r\n  'getExecutableName',\r\n  'listenOnce',\r\n  'autoResumeAudioContext',\r\n  'dynCallLegacy',\r\n  'getDynCaller',\r\n  'dynCall',\r\n  'runtimeKeepalivePush',\r\n  'runtimeKeepalivePop',\r\n  'callUserCallback',\r\n  'maybeExit',\r\n  'asmjsMangle',\r\n  'HandleAllocator',\r\n  'getNativeTypeSize',\r\n  'STACK_SIZE',\r\n  'STACK_ALIGN',\r\n  'POINTER_SIZE',\r\n  'ASSERTIONS',\r\n  'getCFunc',\r\n  'ccall',\r\n  'cwrap',\r\n  'uleb128Encode',\r\n  'sigToWasmTypes',\r\n  'generateFuncType',\r\n  'convertJsFunctionToWasm',\r\n  'getEmptyTableSlot',\r\n  'updateTableMap',\r\n  'getFunctionAddress',\r\n  'addFunction',\r\n  'removeFunction',\r\n  'reallyNegative',\r\n  'unSign',\r\n  'strLen',\r\n  'reSign',\r\n  'formatString',\r\n  'stringToUTF8',\r\n  'intArrayToString',\r\n  'AsciiToString',\r\n  'stringToAscii',\r\n  'UTF16ToString',\r\n  'stringToUTF16',\r\n  'lengthBytesUTF16',\r\n  'UTF32ToString',\r\n  'stringToUTF32',\r\n  'lengthBytesUTF32',\r\n  'stringToNewUTF8',\r\n  'stringToUTF8OnStack',\r\n  'writeArrayToMemory',\r\n  'registerKeyEventCallback',\r\n  'maybeCStringToJsString',\r\n  'findEventTarget',\r\n  'getBoundingClientRect',\r\n  'fillMouseEventData',\r\n  'registerMouseEventCallback',\r\n  'registerWheelEventCallback',\r\n  'registerUiEventCallback',\r\n  'registerFocusEventCallback',\r\n  'fillDeviceOrientationEventData',\r\n  'registerDeviceOrientationEventCallback',\r\n  'fillDeviceMotionEventData',\r\n  'registerDeviceMotionEventCallback',\r\n  'screenOrientation',\r\n  'fillOrientationChangeEventData',\r\n  'registerOrientationChangeEventCallback',\r\n  'fillFullscreenChangeEventData',\r\n  'registerFullscreenChangeEventCallback',\r\n  'JSEvents_requestFullscreen',\r\n  'JSEvents_resizeCanvasForFullscreen',\r\n  'registerRestoreOldStyle',\r\n  'hideEverythingExceptGivenElement',\r\n  'restoreHiddenElements',\r\n  'setLetterbox',\r\n  'softFullscreenResizeWebGLRenderTarget',\r\n  'doRequestFullscreen',\r\n  'fillPointerlockChangeEventData',\r\n  'registerPointerlockChangeEventCallback',\r\n  'registerPointerlockErrorEventCallback',\r\n  'requestPointerLock',\r\n  'fillVisibilityChangeEventData',\r\n  'registerVisibilityChangeEventCallback',\r\n  'registerTouchEventCallback',\r\n  'fillGamepadEventData',\r\n  'registerGamepadEventCallback',\r\n  'registerBeforeUnloadEventCallback',\r\n  'fillBatteryEventData',\r\n  'battery',\r\n  'registerBatteryEventCallback',\r\n  'setCanvasElementSize',\r\n  'getCanvasElementSize',\r\n  'jsStackTrace',\r\n  'getCallstack',\r\n  'convertPCtoSourceLocation',\r\n  'getEnvStrings',\r\n  'checkWasiClock',\r\n  'wasiRightsToMuslOFlags',\r\n  'wasiOFlagsToMuslOFlags',\r\n  'createDyncallWrapper',\r\n  'safeSetTimeout',\r\n  'setImmediateWrapped',\r\n  'clearImmediateWrapped',\r\n  'polyfillSetImmediate',\r\n  'registerPostMainLoop',\r\n  'registerPreMainLoop',\r\n  'getPromise',\r\n  'makePromise',\r\n  'idsToPromises',\r\n  'makePromiseCallback',\r\n  'ExceptionInfo',\r\n  'findMatchingCatch',\r\n  'Browser_asyncPrepareDataCounter',\r\n  'safeRequestAnimationFrame',\r\n  'isLeapYear',\r\n  'ydayFromDate',\r\n  'arraySum',\r\n  'addDays',\r\n  'getSocketFromFD',\r\n  'getSocketAddress',\r\n  'FS_unlink',\r\n  'FS_mkdirTree',\r\n  '_setNetworkCallback',\r\n  'heapObjectForWebGLType',\r\n  'toTypedArrayIndex',\r\n  'webgl_enable_ANGLE_instanced_arrays',\r\n  'webgl_enable_OES_vertex_array_object',\r\n  'webgl_enable_WEBGL_draw_buffers',\r\n  'webgl_enable_WEBGL_multi_draw',\r\n  'webgl_enable_EXT_polygon_offset_clamp',\r\n  'webgl_enable_EXT_clip_control',\r\n  'webgl_enable_WEBGL_polygon_mode',\r\n  'emscriptenWebGLGet',\r\n  'computeUnpackAlignedImageSize',\r\n  'colorChannelsInGlTextureFormat',\r\n  'emscriptenWebGLGetTexPixelData',\r\n  'emscriptenWebGLGetUniform',\r\n  'webglGetUniformLocation',\r\n  'webglPrepareUniformLocationsBeforeFirstUse',\r\n  'webglGetLeftBracePos',\r\n  'emscriptenWebGLGetVertexAttrib',\r\n  '__glGetActiveAttribOrUniform',\r\n  'writeGLArray',\r\n  'registerWebGlEventCallback',\r\n  'runAndAbortIfError',\r\n  'ALLOC_NORMAL',\r\n  'ALLOC_STACK',\r\n  'allocate',\r\n  'writeStringToMemory',\r\n  'writeAsciiToMemory',\r\n  'setErrNo',\r\n  'demangle',\r\n  'stackTrace',\r\n];\r\nmissingLibrarySymbols.forEach(missingLibrarySymbol)\r\n\r\nvar unexportedSymbols = [\r\n  'run',\r\n  'addOnPreRun',\r\n  'addOnInit',\r\n  'addOnPreMain',\r\n  'addOnExit',\r\n  'addOnPostRun',\r\n  'addRunDependency',\r\n  'removeRunDependency',\r\n  'out',\r\n  'err',\r\n  'callMain',\r\n  'abort',\r\n  'wasmMemory',\r\n  'wasmExports',\r\n  'writeStackCookie',\r\n  'checkStackCookie',\r\n  'convertI32PairToI53Checked',\r\n  'stackSave',\r\n  'stackRestore',\r\n  'ptrToString',\r\n  'zeroMemory',\r\n  'exitJS',\r\n  'getHeapMax',\r\n  'abortOnCannotGrowMemory',\r\n  'ENV',\r\n  'ERRNO_CODES',\r\n  'strError',\r\n  'DNS',\r\n  'Protocols',\r\n  'Sockets',\r\n  'initRandomFill',\r\n  'randomFill',\r\n  'timers',\r\n  'warnOnce',\r\n  'readEmAsmArgsArray',\r\n  'jstoi_s',\r\n  'handleException',\r\n  'keepRuntimeAlive',\r\n  'asyncLoad',\r\n  'alignMemory',\r\n  'mmapAlloc',\r\n  'wasmTable',\r\n  'noExitRuntime',\r\n  'freeTableIndexes',\r\n  'functionsInTableMap',\r\n  'setValue',\r\n  'getValue',\r\n  'PATH',\r\n  'PATH_FS',\r\n  'UTF8Decoder',\r\n  'UTF8ArrayToString',\r\n  'UTF8ToString',\r\n  'stringToUTF8Array',\r\n  'lengthBytesUTF8',\r\n  'intArrayFromString',\r\n  'UTF16Decoder',\r\n  'JSEvents',\r\n  'specialHTMLTargets',\r\n  'findCanvasEventTarget',\r\n  'currentFullscreenStrategy',\r\n  'restoreOldWindowedStyle',\r\n  'UNWIND_CACHE',\r\n  'ExitStatus',\r\n  'doReadv',\r\n  'doWritev',\r\n  'promiseMap',\r\n  'uncaughtExceptionCount',\r\n  'exceptionLast',\r\n  'exceptionCaught',\r\n  'Browser',\r\n  'getPreloadedImageData__data',\r\n  'wget',\r\n  'MONTH_DAYS_REGULAR',\r\n  'MONTH_DAYS_LEAP',\r\n  'MONTH_DAYS_REGULAR_CUMULATIVE',\r\n  'MONTH_DAYS_LEAP_CUMULATIVE',\r\n  'SYSCALLS',\r\n  'preloadPlugins',\r\n  'FS_createPreloadedFile',\r\n  'FS_modeStringToFlags',\r\n  'FS_getMode',\r\n  'FS_stdin_getChar_buffer',\r\n  'FS_stdin_getChar',\r\n  'FS_createPath',\r\n  'FS_createDevice',\r\n  'FS_readFile',\r\n  'FS',\r\n  'FS_createDataFile',\r\n  'FS_createLazyFile',\r\n  'MEMFS',\r\n  'TTY',\r\n  'PIPEFS',\r\n  'SOCKFS',\r\n  'tempFixedLengthArray',\r\n  'miniTempWebGLFloatBuffers',\r\n  'miniTempWebGLIntBuffers',\r\n  'GL',\r\n  'AL',\r\n  'GLUT',\r\n  'EGL',\r\n  'GLEW',\r\n  'IDBStore',\r\n  'SDL',\r\n  'SDL_gfx',\r\n  'allocateUTF8',\r\n  'allocateUTF8OnStack',\r\n  'print',\r\n  'printErr',\r\n];\r\nunexportedSymbols.forEach(unexportedRuntimeSymbol);\r\n\r\n\r\n\r\nvar calledRun;\r\nvar calledPrerun;\r\n\r\ndependenciesFulfilled = function runCaller() {\r\n  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)\r\n  if (!calledRun) run();\r\n  if (!calledRun) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled\r\n};\r\n\r\nfunction callMain() {\r\n  assert(runDependencies == 0, 'cannot call main when async dependencies remain! (listen on Module[\"onRuntimeInitialized\"])');\r\n  assert(calledPrerun, 'cannot call main without calling preRun first');\r\n\r\n  var entryFunction = _main;\r\n\r\n  var argc = 0;\r\n  var argv = 0;\r\n\r\n  try {\r\n\r\n    var ret = entryFunction(argc, argv);\r\n\r\n    // if we're not running an evented main loop, it's time to exit\r\n    exitJS(ret, /* implicit = */ true);\r\n    return ret;\r\n  }\r\n  catch (e) {\r\n    return handleException(e);\r\n  }\r\n}\r\n\r\nfunction stackCheckInit() {\r\n  // This is normally called automatically during __wasm_call_ctors but need to\r\n  // get these values before even running any of the ctors so we call it redundantly\r\n  // here.\r\n  _emscripten_stack_init();\r\n  // TODO(sbc): Move writeStackCookie to native to to avoid this.\r\n  writeStackCookie();\r\n}\r\n\r\nfunction run() {\r\n\r\n  if (runDependencies > 0) {\r\n    return;\r\n  }\r\n\r\n  stackCheckInit();\r\n\r\n  if (!calledPrerun) {\r\n    calledPrerun = 1;\r\n    preRun();\r\n\r\n    // a preRun added a dependency, run will be called later\r\n    if (runDependencies > 0) {\r\n      return;\r\n    }\r\n  }\r\n\r\n  function doRun() {\r\n    // run may have just been called through dependencies being fulfilled just in this very frame,\r\n    // or while the async setStatus time below was happening\r\n    if (calledRun) return;\r\n    calledRun = 1;\r\n    Module['calledRun'] = 1;\r\n\r\n    if (ABORT) return;\r\n\r\n    initRuntime();\r\n\r\n    preMain();\r\n\r\n    readyPromiseResolve(Module);\r\n    Module['onRuntimeInitialized']?.();\r\n\r\n    if (shouldRunNow) callMain();\r\n\r\n    postRun();\r\n  }\r\n\r\n  if (Module['setStatus']) {\r\n    Module['setStatus']('Running...');\r\n    setTimeout(() => {\r\n      setTimeout(() => Module['setStatus'](''), 1);\r\n      doRun();\r\n    }, 1);\r\n  } else\r\n  {\r\n    doRun();\r\n  }\r\n  checkStackCookie();\r\n}\r\n\r\nfunction checkUnflushedContent() {\r\n  // Compiler settings do not allow exiting the runtime, so flushing\r\n  // the streams is not possible. but in ASSERTIONS mode we check\r\n  // if there was something to flush, and if so tell the user they\r\n  // should request that the runtime be exitable.\r\n  // Normally we would not even include flush() at all, but in ASSERTIONS\r\n  // builds we do so just for this check, and here we see if there is any\r\n  // content to flush, that is, we check if there would have been\r\n  // something a non-ASSERTIONS build would have not seen.\r\n  // How we flush the streams depends on whether we are in SYSCALLS_REQUIRE_FILESYSTEM=0\r\n  // mode (which has its own special function for this; otherwise, all\r\n  // the code is inside libc)\r\n  var oldOut = out;\r\n  var oldErr = err;\r\n  var has = false;\r\n  out = err = (x) => {\r\n    has = true;\r\n  }\r\n  try { // it doesn't matter if it fails\r\n    _fflush(0);\r\n    // also flush in the JS FS layer\r\n    ['stdout', 'stderr'].forEach((name) => {\r\n      var info = FS.analyzePath('/dev/' + name);\r\n      if (!info) return;\r\n      var stream = info.object;\r\n      var rdev = stream.rdev;\r\n      var tty = TTY.ttys[rdev];\r\n      if (tty?.output?.length) {\r\n        has = true;\r\n      }\r\n    });\r\n  } catch(e) {}\r\n  out = oldOut;\r\n  err = oldErr;\r\n  if (has) {\r\n    warnOnce('stdio streams had content in them that was not flushed. you should set EXIT_RUNTIME to 1 (see the Emscripten FAQ), or make sure to emit a newline when you printf etc.');\r\n  }\r\n}\r\n\r\nif (Module['preInit']) {\r\n  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];\r\n  while (Module['preInit'].length > 0) {\r\n    Module['preInit'].pop()();\r\n  }\r\n}\r\n\r\n// shouldRunNow refers to calling main(), not run().\r\nvar shouldRunNow = true;\r\n\r\nif (Module['noInitialRun']) shouldRunNow = false;\r\n\r\nrun();\r\n\r\n// end include: postamble.js\r\n\r\n// include: postamble_modularize.js\r\n// In MODULARIZE mode we wrap the generated code in a factory function\r\n// and return either the Module itself, or a promise of the module.\r\n//\r\n// We assign to the `moduleRtn` global here and configure closure to see\r\n// this as and extern so it won't get minified.\r\n\r\nmoduleRtn = readyPromise;\r\n\r\n// Assertion for attempting to access module properties on the incoming\r\n// moduleArg.  In the past we used this object as the prototype of the module\r\n// and assigned properties to it, but now we return a distinct object.  This\r\n// keeps the instance private until it is ready (i.e the promise has been\r\n// resolved).\r\nfor (const prop of Object.keys(Module)) {\r\n  if (!(prop in moduleArg)) {\r\n    Object.defineProperty(moduleArg, prop, {\r\n      configurable: true,\r\n      get() {\r\n        abort(`Access to module property ('${prop}') is no longer possible via the module constructor argument; Instead, use the result of the module constructor.`)\r\n      }\r\n    });\r\n  }\r\n}\r\n// end include: postamble_modularize.js\r\n\r\n\r\n\r\n  return moduleRtn;\r\n}\r\n);\r\n})();\r\nif (typeof exports === 'object' && typeof module === 'object')\r\n  module.exports = createModule;\r\nelse if (typeof define === 'function' && define['amd'])\r\n  define([], () => createModule);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}